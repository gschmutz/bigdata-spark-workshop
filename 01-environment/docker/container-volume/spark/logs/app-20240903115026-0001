{"Event":"SparkListenerLogStart","Spark Version":"3.5.2"}
{"Event":"SparkListenerResourceProfileAdded","Resource Profile Id":0,"Executor Resource Requests":{"cores":{"Resource Name":"cores","Amount":1,"Discovery Script":"","Vendor":""},"memory":{"Resource Name":"memory","Amount":1024,"Discovery Script":"","Vendor":""},"offHeap":{"Resource Name":"offHeap","Amount":0,"Discovery Script":"","Vendor":""}},"Task Resource Requests":{"cpus":{"Resource Name":"cpus","Amount":1.0}}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"driver","Host":"zeppelin","Port":6060},"Maximum Memory":455501414,"Timestamp":1725364226541,"Maximum Onheap Memory":455501414,"Maximum Offheap Memory":0}
{"Event":"SparkListenerEnvironmentUpdate","JVM Information":{"Java Home":"/usr/lib/jvm/java-11-openjdk-amd64","Java Version":"11.0.24 (Ubuntu)","Scala Version":"version 2.12.18"},"Spark Properties":{"zeppelin.spark.scala.color":"true","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.executor.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false -Dcom.amazonaws.services.s3.enableV4","spark.driver.host":"zeppelin","spark.history.fs.logDirectory":"file:///var/log/spark/logs","zeppelin.spark.sql.stacktrace":"true","spark.eventLog.enabled":"true","spark.ui.port":"4050","spark.driver.port":"5050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","zeppelin.spark.useHiveContext":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.hadoop.fs.s3a.path.style.access":"true","zeppelin.spark.sql.interpolation":"false","zeppelin.interpreter.output.limit":"102400","zeppelin.interpreter.connection.poolsize":"100","spark.app.name":"spark-shared_process","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.cores.max":"2","zeppelin.R.cmd":"R","zeppelin.spark.maxResult":"1000","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","zeppelin.pyspark.useIPython":"true","zeppelin.spark.concurrentSQL":"true","spark.scheduler.mode":"FAIR","zeppelin.spark.concurrentSQL.max":"10","PYSPARK_DRIVER_PYTHON":"python3","zeppelin.spark.enableSupportedVersionCheck":"true","spark.driver.memory":"1g","spark.executor.instances":"2","spark.eventLog.overwrite":"true","spark.submit.pyFiles":"","zeppelin.spark.printREPLOutput":"true","spark.app.submitTime":"1725364215393","SPARK_HOME":"/opt/spark","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.bindAddress":"0.0.0.0","zeppelin.R.shiny.portRange":":","spark.app.startTime":"1725364224895","spark.executor.id":"driver","spark.driver.cores":"1","PYSPARK_PYTHON":"python3","spark.webui.yarn.useProxy":"false","spark.driver.extraJavaOptions":"-Djava.net.preferIPv6Addresses=false -XX:+IgnoreUnrecognizedVMOptions --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED --add-opens=java.base/jdk.internal.ref=ALL-UNNAMED --add-opens=java.base/sun.nio.ch=ALL-UNNAMED --add-opens=java.base/sun.nio.cs=ALL-UNNAMED --add-opens=java.base/sun.security.action=ALL-UNNAMED --add-opens=java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.security.jgss/sun.security.krb5=ALL-UNNAMED -Djdk.reflect.useDirectMethodHandle=false -Dcom.amazonaws.services.s3.enableV4","spark.blockManager.port":"6060","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.submit.deployMode":"client","spark.useHiveContext":"true","spark.master":"spark://spark-master:7077","zeppelin.spark.scala.version":"2.12","zeppelin.R.image.width":"100%","zeppelin.spark.ui.hidden":"false","zeppelin.interpreter.localRepo":"/opt/zeppelin/local-repo/spark","zeppelin.spark.deprecatedMsg.show":"true","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.executor.memory":"1g","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.eventLog.dir":"file:///var/log/spark/logs","spark.sql.catalogImplementation":"hive","spark.executor.cores":"1","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","zeppelin.R.render.options":"out.format = 'html', comment = NA, echo = FALSE, results = 'asis', message = F, warning = F, fig.retina = 2","zeppelin.spark.run.asLoginUser":"true","spark.app.id":"app-20240903115026-0001","zeppelin.R.knitr":"true","spark.sql.hive.metastore.version":"3.1.2"},"Hadoop Properties":{"hadoop.service.shutdown.timeout":"30s","yarn.resourcemanager.amlauncher.thread-count":"50","yarn.sharedcache.enabled":"false","fs.s3a.connection.maximum":"96","yarn.nodemanager.numa-awareness.numactl.cmd":"/usr/bin/numactl","fs.viewfs.overload.scheme.target.o3fs.impl":"org.apache.hadoop.fs.ozone.OzoneFileSystem","fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","yarn.app.mapreduce.am.scheduler.heartbeat.interval-ms":"1000","yarn.timeline-service.timeline-client.number-of-async-entities-to-merge":"10","hadoop.security.kms.client.timeout":"60","fs.s3n.awsSecretAccessKey":"*********(redacted)","hadoop.http.authentication.kerberos.principal":"HTTP/_HOST@LOCALHOST","mapreduce.jobhistory.loadedjob.tasks.max":"-1","yarn.resourcemanager.application-tag-based-placement.enable":"false","mapreduce.framework.name":"local","yarn.sharedcache.uploader.server.thread-count":"50","yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds.min":"3600","yarn.nodemanager.linux-container-executor.nonsecure-mode.user-pattern":"^[_.A-Za-z0-9][-@_.A-Za-z0-9]{0,255}?[$]?$","tfile.fs.output.buffer.size":"262144","yarn.app.mapreduce.am.job.task.listener.thread-count":"30","yarn.nodemanager.node-attributes.resync-interval-ms":"120000","fs.s3a.secret.key":"*********(redacted)","yarn.nodemanager.container-log-monitor.interval-ms":"60000","hadoop.security.groups.cache.background.reload.threads":"3","yarn.resourcemanager.webapp.cross-origin.enabled":"false","fs.AbstractFileSystem.ftp.impl":"org.apache.hadoop.fs.ftp.FtpFs","fs.viewfs.overload.scheme.target.gs.impl":"com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","hadoop.registry.secure":"false","hadoop.shell.safely.delete.limit.num.files":"100","mapreduce.job.acl-view-job":" ","fs.s3a.s3guard.ddb.background.sleep":"25ms","fs.s3a.retry.limit":"7","mapreduce.jobhistory.loadedjobs.cache.size":"5","fs.s3a.s3guard.ddb.table.create":"false","fs.viewfs.overload.scheme.target.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","yarn.nodemanager.amrmproxy.enabled":"false","yarn.timeline-service.entity-group-fs-store.with-user-dir":"false","mapreduce.shuffle.pathcache.expire-after-access-minutes":"5","mapreduce.input.fileinputformat.split.minsize":"0","yarn.resourcemanager.container.liveness-monitor.interval-ms":"600000","yarn.resourcemanager.client.thread-count":"50","io.seqfile.compress.blocksize":"1000000","yarn.nodemanager.runtime.linux.docker.allowed-container-runtimes":"runc","fs.viewfs.overload.scheme.target.http.impl":"org.apache.hadoop.fs.http.HttpFileSystem","yarn.resourcemanager.nodemanagers.heartbeat-interval-slowdown-factor":"1.0","yarn.sharedcache.checksum.algo.impl":"org.apache.hadoop.yarn.sharedcache.ChecksumSHA256Impl","yarn.nodemanager.amrmproxy.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.nodemanager.amrmproxy.DefaultRequestInterceptor","yarn.timeline-service.entity-group-fs-store.leveldb-cache-read-cache-size":"10485760","mapreduce.reduce.shuffle.fetch.retry.interval-ms":"1000","mapreduce.task.profile.maps":"0-2","yarn.scheduler.include-port-in-node-name":"false","yarn.nodemanager.admin-env":"MALLOC_ARENA_MAX=$MALLOC_ARENA_MAX","yarn.resourcemanager.node-removal-untracked.timeout-ms":"60000","mapreduce.am.max-attempts":"2","hadoop.security.kms.client.failover.sleep.base.millis":"100","mapreduce.jobhistory.webapp.https.address":"0.0.0.0:19890","yarn.node-labels.fs-store.impl.class":"org.apache.hadoop.yarn.nodelabels.FileSystemNodeLabelsStore","yarn.nodemanager.collector-service.address":"${yarn.nodemanager.hostname}:8048","fs.trash.checkpoint.interval":"0","mapreduce.job.map.output.collector.class":"org.apache.hadoop.mapred.MapTask$MapOutputBuffer","yarn.resourcemanager.node-ip-cache.expiry-interval-secs":"-1","hadoop.http.authentication.signature.secret.file":"*********(redacted)","hadoop.jetty.logs.serve.aliases":"true","yarn.resourcemanager.placement-constraints.handler":"disabled","yarn.timeline-service.handler-thread-count":"10","yarn.resourcemanager.max-completed-applications":"1000","yarn.nodemanager.aux-services.manifest.enabled":"false","yarn.resourcemanager.system-metrics-publisher.enabled":"false","yarn.resourcemanager.placement-constraints.algorithm.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.constraint.algorithm.DefaultPlacementAlgorithm","yarn.sharedcache.webapp.address":"0.0.0.0:8788","fs.s3a.select.input.csv.quote.escape.character":"\\\\","yarn.resourcemanager.delegation.token.renew-interval":"*********(redacted)","yarn.sharedcache.nm.uploader.replication.factor":"10","hadoop.security.groups.negative-cache.secs":"30","yarn.app.mapreduce.task.container.log.backups":"0","mapreduce.reduce.skip.proc-count.auto-incr":"true","fs.viewfs.overload.scheme.target.swift.impl":"org.apache.hadoop.fs.swift.snative.SwiftNativeFileSystem","hadoop.security.group.mapping.ldap.posix.attr.gid.name":"gidNumber","ipc.client.fallback-to-simple-auth-allowed":"false","yarn.nodemanager.resource.memory.enforced":"true","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.enable-batch":"false","yarn.client.failover-proxy-provider":"org.apache.hadoop.yarn.client.ConfiguredRMFailoverProxyProvider","yarn.timeline-service.http-authentication.simple.anonymous.allowed":"true","ha.health-monitor.check-interval.ms":"1000","yarn.nodemanager.runtime.linux.runc.host-pid-namespace.allowed":"false","hadoop.metrics.jvm.use-thread-mxbean":"false","ipc.[port_number].faircallqueue.multiplexer.weights":"8,4,2,1","yarn.acl.reservation-enable":"false","yarn.resourcemanager.store.class":"org.apache.hadoop.yarn.server.resourcemanager.recovery.FileSystemRMStateStore","yarn.app.mapreduce.am.hard-kill-timeout-ms":"10000","fs.s3a.etag.checksum.enabled":"false","yarn.nodemanager.container-metrics.enable":"true","ha.health-monitor.rpc.connect.max.retries":"1","yarn.timeline-service.client.fd-clean-interval-secs":"60","yarn.resourcemanager.nodemanagers.heartbeat-interval-scaling-enable":"false","yarn.resourcemanager.nodemanagers.heartbeat-interval-ms":"1000","hadoop.common.configuration.version":"3.0.0","fs.s3a.s3guard.ddb.table.capacity.read":"0","yarn.nodemanager.remote-app-log-dir-suffix":"logs","yarn.nodemanager.container-log-monitor.dir-size-limit-bytes":"1000000000","yarn.nodemanager.windows-container.cpu-limit.enabled":"false","yarn.nodemanager.runtime.linux.docker.privileged-containers.allowed":"false","file.blocksize":"67108864","hadoop.http.idle_timeout.ms":"60000","hadoop.registry.zk.retry.ceiling.ms":"60000","yarn.scheduler.configuration.leveldb-store.path":"${hadoop.tmp.dir}/yarn/system/confstore","yarn.sharedcache.store.in-memory.initial-delay-mins":"10","mapreduce.jobhistory.principal":"jhs/_HOST@REALM.TLD","mapreduce.map.skip.proc-count.auto-incr":"true","fs.s3a.committer.name":"file","mapreduce.task.profile.reduces":"0-2","hadoop.zk.num-retries":"1000","yarn.webapp.xfs-filter.enabled":"true","fs.viewfs.overload.scheme.target.hdfs.impl":"org.apache.hadoop.hdfs.DistributedFileSystem","seq.io.sort.mb":"100","yarn.scheduler.configuration.max.version":"100","yarn.timeline-service.webapp.https.address":"${yarn.timeline-service.hostname}:8190","yarn.resourcemanager.scheduler.address":"${yarn.resourcemanager.hostname}:8030","yarn.node-labels.enabled":"false","yarn.resourcemanager.webapp.ui-actions.enabled":"true","mapreduce.task.timeout":"600000","yarn.sharedcache.client-server.thread-count":"50","hadoop.security.groups.shell.command.timeout":"0s","hadoop.security.crypto.cipher.suite":"AES/CTR/NoPadding","yarn.nodemanager.elastic-memory-control.oom-handler":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.DefaultOOMHandler","yarn.resourcemanager.connect.max-wait.ms":"900000","fs.defaultFS":"file:///","yarn.minicluster.use-rpc":"false","ipc.[port_number].decay-scheduler.decay-factor":"0.5","fs.har.impl.disable.cache":"true","yarn.webapp.ui2.enable":"false","io.compression.codec.bzip2.library":"system-native","yarn.webapp.filter-invalid-xml-chars":"false","yarn.nodemanager.runtime.linux.runc.layer-mounts-interval-secs":"600","fs.s3a.select.input.csv.record.delimiter":"\\n","fs.s3a.change.detection.source":"etag","ipc.[port_number].backoff.enable":"false","yarn.nodemanager.distributed-scheduling.enabled":"false","mapreduce.shuffle.connection-keep-alive.timeout":"5","yarn.resourcemanager.webapp.https.address":"${yarn.resourcemanager.hostname}:8090","yarn.webapp.enable-rest-app-submissions":"true","mapreduce.jobhistory.address":"0.0.0.0:10020","yarn.resourcemanager.nm-tokens.master-key-rolling-interval-secs":"*********(redacted)","yarn.is.minicluster":"false","yarn.nodemanager.address":"${yarn.nodemanager.hostname}:0","fs.abfss.impl":"org.apache.hadoop.fs.azurebfs.SecureAzureBlobFileSystem","fs.AbstractFileSystem.s3a.impl":"org.apache.hadoop.fs.s3a.S3A","mapreduce.task.combine.progress.records":"10000","yarn.resourcemanager.epoch.range":"0","yarn.resourcemanager.am.max-attempts":"2","yarn.nodemanager.runtime.linux.runc.image-toplevel-dir":"/runc-root","yarn.nodemanager.linux-container-executor.cgroups.hierarchy":"/hadoop-yarn","fs.AbstractFileSystem.wasbs.impl":"org.apache.hadoop.fs.azure.Wasbs","yarn.timeline-service.entity-group-fs-store.cache-store-class":"org.apache.hadoop.yarn.server.timeline.MemoryTimelineStore","yarn.nodemanager.runtime.linux.runc.allowed-container-networks":"host,none,bridge","fs.ftp.transfer.mode":"BLOCK_TRANSFER_MODE","ipc.server.log.slow.rpc":"false","ipc.server.reuseaddr":"true","fs.ftp.timeout":"0","yarn.resourcemanager.node-labels.provider.fetch-interval-ms":"1800000","yarn.router.webapp.https.address":"0.0.0.0:8091","yarn.nodemanager.webapp.cross-origin.enabled":"false","fs.wasb.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem","yarn.resourcemanager.auto-update.containers":"false","yarn.app.mapreduce.am.job.committer.cancel-timeout":"60000","yarn.scheduler.configuration.zk-store.parent-path":"/confstore","yarn.nodemanager.default-container-executor.log-dirs.permissions":"710","yarn.app.attempt.diagnostics.limit.kc":"64","fs.viewfs.overload.scheme.target.swebhdfs.impl":"org.apache.hadoop.hdfs.web.SWebHdfsFileSystem","yarn.client.failover-no-ha-proxy-provider":"org.apache.hadoop.yarn.client.DefaultNoHARMFailoverProxyProvider","fs.s3a.change.detection.mode":"server","ftp.bytes-per-checksum":"512","yarn.nodemanager.resource.memory-mb":"-1","fs.AbstractFileSystem.abfs.impl":"org.apache.hadoop.fs.azurebfs.Abfs","yarn.timeline-service.writer.flush-interval-seconds":"60","fs.s3a.fast.upload.active.blocks":"4","yarn.resourcemanager.submission-preprocessor.enabled":"false","hadoop.security.credential.clear-text-fallback":"true","yarn.nodemanager.collector-service.thread-count":"5","ipc.[port_number].scheduler.impl":"org.apache.hadoop.ipc.DefaultRpcScheduler","fs.azure.secure.mode":"false","mapreduce.jobhistory.joblist.cache.size":"20000","fs.ftp.host":"0.0.0.0","yarn.timeline-service.writer.async.queue.capacity":"100","yarn.resourcemanager.fs.state-store.num-retries":"0","yarn.resourcemanager.nodemanager-connect-retries":"10","yarn.nodemanager.log-aggregation.num-log-files-per-app":"30","hadoop.security.kms.client.encrypted.key.cache.low-watermark":"0.3f","fs.s3a.committer.magic.enabled":"true","yarn.timeline-service.client.max-retries":"30","dfs.ha.fencing.ssh.connect-timeout":"30000","yarn.log-aggregation-enable":"false","yarn.system-metrics-publisher.enabled":"false","mapreduce.reduce.markreset.buffer.percent":"0.0","fs.AbstractFileSystem.viewfs.impl":"org.apache.hadoop.fs.viewfs.ViewFs","yarn.resourcemanager.nodemanagers.heartbeat-interval-speedup-factor":"1.0","mapreduce.task.io.sort.factor":"10","yarn.nodemanager.amrmproxy.client.thread-count":"25","ha.failover-controller.new-active.rpc-timeout.ms":"60000","yarn.nodemanager.container-localizer.java.opts":"-Xmx256m","mapreduce.jobhistory.datestring.cache.size":"200000","mapreduce.job.acl-modify-job":" ","yarn.nodemanager.windows-container.memory-limit.enabled":"false","yarn.timeline-service.webapp.address":"${yarn.timeline-service.hostname}:8188","yarn.app.mapreduce.am.job.committer.commit-window":"10000","yarn.nodemanager.container-manager.thread-count":"20","yarn.minicluster.fixed.ports":"false","hadoop.tags.system":"YARN,HDFS,NAMENODE,DATANODE,REQUIRED,SECURITY,KERBEROS,PERFORMANCE,CLIENT\n      ,SERVER,DEBUG,DEPRECATED,COMMON,OPTIONAL","yarn.cluster.max-application-priority":"0","yarn.timeline-service.ttl-enable":"true","mapreduce.jobhistory.recovery.store.fs.uri":"${hadoop.tmp.dir}/mapred/history/recoverystore","hadoop.caller.context.signature.max.size":"40","ipc.[port_number].decay-scheduler.backoff.responsetime.enable":"false","yarn.client.load.resource-types.from-server":"false","ha.zookeeper.session-timeout.ms":"10000","ipc.[port_number].decay-scheduler.metrics.top.user.count":"10","tfile.io.chunk.size":"1048576","fs.s3a.s3guard.ddb.table.capacity.write":"0","yarn.dispatcher.print-events-info.threshold":"5000","mapreduce.job.speculative.slowtaskthreshold":"1.0","io.serializations":"org.apache.hadoop.io.serializer.WritableSerialization, org.apache.hadoop.io.serializer.avro.AvroSpecificSerialization, org.apache.hadoop.io.serializer.avro.AvroReflectSerialization","hadoop.security.kms.client.failover.sleep.max.millis":"2000","hadoop.security.group.mapping.ldap.directory.search.timeout":"10000","yarn.scheduler.configuration.store.max-logs":"1000","yarn.nodemanager.node-attributes.provider.fetch-interval-ms":"600000","fs.swift.impl":"org.apache.hadoop.fs.swift.snative.SwiftNativeFileSystem","yarn.nodemanager.local-cache.max-files-per-directory":"8192","hadoop.http.cross-origin.enabled":"false","hadoop.zk.acl":"world:anyone:rwcda","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.num-manifests-to-cache":"10","mapreduce.map.sort.spill.percent":"0.80","yarn.timeline-service.entity-group-fs-store.scan-interval-seconds":"60","yarn.node-attribute.fs-store.impl.class":"org.apache.hadoop.yarn.server.resourcemanager.nodelabels.FileSystemNodeAttributeStore","fs.s3a.retry.interval":"500ms","yarn.timeline-service.client.best-effort":"false","yarn.resourcemanager.webapp.delegation-token-auth-filter.enabled":"*********(redacted)","hadoop.security.group.mapping.ldap.posix.attr.uid.name":"uidNumber","fs.AbstractFileSystem.swebhdfs.impl":"org.apache.hadoop.fs.SWebHdfs","yarn.nodemanager.elastic-memory-control.timeout-sec":"5","fs.s3a.select.enabled":"true","mapreduce.ifile.readahead":"true","yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms":"300000","yarn.timeline-service.reader.webapp.address":"${yarn.timeline-service.webapp.address}","yarn.resourcemanager.placement-constraints.algorithm.pool-size":"1","yarn.timeline-service.hbase.coprocessor.jar.hdfs.location":"/hbase/coprocessor/hadoop-yarn-server-timelineservice.jar","hadoop.security.kms.client.encrypted.key.cache.num.refill.threads":"2","yarn.resourcemanager.scheduler.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.capacity.CapacityScheduler","yarn.app.mapreduce.am.command-opts":"-Xmx1024m","fs.s3a.metadatastore.fail.on.write.error":"true","hadoop.http.sni.host.check.enabled":"false","mapreduce.cluster.local.dir":"${hadoop.tmp.dir}/mapred/local","io.mapfile.bloom.error.rate":"0.005","fs.client.resolve.topology.enabled":"false","yarn.nodemanager.runtime.linux.allowed-runtimes":"default","yarn.sharedcache.store.class":"org.apache.hadoop.yarn.server.sharedcachemanager.store.InMemorySCMStore","ha.failover-controller.graceful-fence.rpc-timeout.ms":"5000","ftp.replication":"3","fs.getspaceused.jitterMillis":"60000","hadoop.security.uid.cache.secs":"14400","mapreduce.job.maxtaskfailures.per.tracker":"3","fs.s3a.metadatastore.impl":"org.apache.hadoop.fs.s3a.s3guard.NullMetadataStore","io.skip.checksum.errors":"false","yarn.app.mapreduce.client-am.ipc.max-retries-on-timeouts":"3","yarn.timeline-service.webapp.xfs-filter.xframe-options":"SAMEORIGIN","fs.s3a.connection.timeout":"200000","yarn.app.mapreduce.am.webapp.https.enabled":"false","mapreduce.job.max.split.locations":"15","yarn.resourcemanager.nm-container-queuing.max-queue-length":"15","yarn.resourcemanager.delegation-token.always-cancel":"*********(redacted)","hadoop.registry.zk.session.timeout.ms":"60000","yarn.federation.cache-ttl.secs":"300","mapreduce.jvm.system-properties-to-log":"os.name,os.version,java.home,java.runtime.version,java.vendor,java.version,java.vm.name,java.class.path,java.io.tmpdir,user.dir,user.name","yarn.resourcemanager.opportunistic-container-allocation.nodes-used":"10","yarn.timeline-service.entity-group-fs-store.active-dir":"/tmp/entity-file-history/active","mapreduce.shuffle.transfer.buffer.size":"131072","yarn.timeline-service.client.retry-interval-ms":"1000","yarn.timeline-service.flowname.max-size":"0","yarn.http.policy":"HTTP_ONLY","fs.s3a.socket.send.buffer":"8192","fs.AbstractFileSystem.abfss.impl":"org.apache.hadoop.fs.azurebfs.Abfss","yarn.sharedcache.uploader.server.address":"0.0.0.0:8046","yarn.resourcemanager.delegation-token.max-conf-size-bytes":"*********(redacted)","hadoop.http.authentication.token.validity":"*********(redacted)","mapreduce.shuffle.max.connections":"0","yarn.minicluster.yarn.nodemanager.resource.memory-mb":"4096","mapreduce.job.emit-timeline-data":"false","yarn.nodemanager.resource.system-reserved-memory-mb":"-1","hadoop.kerberos.min.seconds.before.relogin":"60","mapreduce.jobhistory.move.thread-count":"3","yarn.resourcemanager.admin.client.thread-count":"1","hive.metastore.event.db.notification.api.auth":"false","yarn.dispatcher.drain-events.timeout":"300000","ipc.[port_number].decay-scheduler.backoff.responsetime.thresholds":"10s,20s,30s,40s","fs.s3a.buffer.dir":"${hadoop.tmp.dir}/s3a","hadoop.ssl.enabled.protocols":"TLSv1.2","mapreduce.jobhistory.admin.address":"0.0.0.0:10033","yarn.log-aggregation-status.time-out.ms":"600000","hive.metastore.uris":"thrift://hive-metastore:9083","fs.s3a.accesspoint.required":"false","mapreduce.shuffle.port":"13562","yarn.resourcemanager.max-log-aggregation-diagnostics-in-memory":"10","yarn.nodemanager.health-checker.interval-ms":"600000","yarn.resourcemanager.proxy.connection.timeout":"60000","yarn.router.clientrm.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.clientrm.DefaultClientRequestInterceptor","yarn.resourcemanager.zk-appid-node.split-index":"0","ftp.blocksize":"67108864","yarn.nodemanager.runtime.linux.sandbox-mode.local-dirs.permissions":"read","yarn.router.rmadmin.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.rmadmin.DefaultRMAdminRequestInterceptor","yarn.nodemanager.log-container-debug-info.enabled":"true","yarn.resourcemanager.activities-manager.app-activities.max-queue-length":"100","yarn.resourcemanager.application-https.policy":"NONE","yarn.client.max-cached-nodemanagers-proxies":"0","yarn.nodemanager.linux-container-executor.cgroups.delete-delay-ms":"20","yarn.nodemanager.delete.debug-delay-sec":"0","yarn.nodemanager.pmem-check-enabled":"true","yarn.nodemanager.disk-health-checker.max-disk-utilization-per-disk-percentage":"90.0","mapreduce.app-submission.cross-platform":"false","yarn.resourcemanager.work-preserving-recovery.scheduling-wait-ms":"10000","yarn.nodemanager.container-retry-minimum-interval-ms":"1000","hadoop.security.groups.cache.secs":"300","yarn.federation.enabled":"false","yarn.workflow-id.tag-prefix":"workflowid:","fs.azure.local.sas.key.mode":"false","ipc.maximum.data.length":"134217728","fs.s3a.endpoint":"http://minio-1:9000","mapreduce.shuffle.max.threads":"0","yarn.router.pipeline.cache-max-size":"25","yarn.resourcemanager.nm-container-queuing.load-comparator":"QUEUE_LENGTH","yarn.resourcemanager.resource-tracker.nm.ip-hostname-check":"false","hadoop.security.authorization":"false","mapreduce.job.complete.cancel.delegation.tokens":"*********(redacted)","fs.s3a.paging.maximum":"5000","nfs.exports.allowed.hosts":"* rw","yarn.nodemanager.amrmproxy.ha.enable":"false","fs.AbstractFileSystem.gs.impl":"com.google.cloud.hadoop.fs.gcs.GoogleHadoopFS","mapreduce.jobhistory.http.policy":"HTTP_ONLY","yarn.sharedcache.store.in-memory.check-period-mins":"720","hadoop.security.group.mapping.ldap.ssl":"false","fs.s3a.downgrade.syncable.exceptions":"true","yarn.client.application-client-protocol.poll-interval-ms":"200","yarn.scheduler.configuration.leveldb-store.compaction-interval-secs":"86400","yarn.timeline-service.writer.class":"org.apache.hadoop.yarn.server.timelineservice.storage.HBaseTimelineWriterImpl","ha.zookeeper.parent-znode":"/hadoop-ha","yarn.resourcemanager.submission-preprocessor.file-refresh-interval-ms":"60000","yarn.nodemanager.log-aggregation.policy.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.logaggregation.AllContainerLogAggregationPolicy","mapreduce.reduce.shuffle.merge.percent":"0.66","hadoop.security.group.mapping.ldap.search.filter.group":"(objectClass=group)","yarn.resourcemanager.placement-constraints.scheduler.pool-size":"1","yarn.resourcemanager.activities-manager.cleanup-interval-ms":"5000","yarn.nodemanager.resourcemanager.minimum.version":"NONE","mapreduce.job.speculative.speculative-cap-running-tasks":"0.1","yarn.admin.acl":"*","ipc.[port_number].identity-provider.impl":"org.apache.hadoop.ipc.UserIdentityProvider","yarn.nodemanager.recovery.supervised":"false","yarn.sharedcache.admin.thread-count":"1","yarn.resourcemanager.ha.automatic-failover.enabled":"true","yarn.nodemanager.container-log-monitor.total-size-limit-bytes":"10000000000","mapreduce.reduce.skip.maxgroups":"0","mapreduce.reduce.shuffle.connect.timeout":"180000","yarn.nodemanager.health-checker.scripts":"script","yarn.resourcemanager.address":"${yarn.resourcemanager.hostname}:8032","ipc.client.ping":"true","mapreduce.task.local-fs.write-limit.bytes":"-1","fs.adl.oauth2.access.token.provider.type":"*********(redacted)","mapreduce.shuffle.ssl.file.buffer.size":"65536","yarn.resourcemanager.ha.automatic-failover.embedded":"true","yarn.nodemanager.resource-plugins.gpu.docker-plugin":"nvidia-docker-v1","fs.s3a.s3guard.consistency.retry.interval":"2s","fs.s3a.multipart.purge":"false","yarn.scheduler.configuration.store.class":"file","yarn.resourcemanager.nm-container-queuing.queue-limit-stdev":"1.0f","mapreduce.job.end-notification.max.attempts":"5","mapreduce.output.fileoutputformat.compress.codec":"org.apache.hadoop.io.compress.DefaultCodec","yarn.nodemanager.container-monitor.procfs-tree.smaps-based-rss.enabled":"false","ipc.client.bind.wildcard.addr":"false","yarn.resourcemanager.webapp.rest-csrf.enabled":"false","ha.health-monitor.connect-retry-interval.ms":"1000","yarn.nodemanager.keytab":"/etc/krb5.keytab","mapreduce.jobhistory.keytab":"/etc/security/keytab/jhs.service.keytab","fs.s3a.threads.max":"64","yarn.nodemanager.runtime.linux.docker.image-update":"false","mapreduce.reduce.shuffle.input.buffer.percent":"0.70","fs.viewfs.overload.scheme.target.abfss.impl":"org.apache.hadoop.fs.azurebfs.SecureAzureBlobFileSystem","yarn.dispatcher.cpu-monitor.samples-per-min":"60","hadoop.security.token.service.use_ip":"*********(redacted)","yarn.nodemanager.runtime.linux.docker.allowed-container-networks":"host,none,bridge","yarn.nodemanager.node-labels.resync-interval-ms":"120000","hadoop.tmp.dir":"/tmp/hadoop-${user.name}","mapreduce.job.maps":"2","mapreduce.jobhistory.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.job.end-notification.max.retry.interval":"5000","yarn.log-aggregation.retain-check-interval-seconds":"-1","yarn.resourcemanager.resource-tracker.client.thread-count":"50","yarn.nodemanager.containers-launcher.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.launcher.ContainersLauncher","yarn.rm.system-metrics-publisher.emit-container-events":"false","yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size":"10000","yarn.resourcemanager.ha.automatic-failover.zk-base-path":"/yarn-leader-election","io.seqfile.local.dir":"${hadoop.tmp.dir}/io/local","fs.s3a.s3guard.ddb.throttle.retry.interval":"100ms","fs.AbstractFileSystem.wasb.impl":"org.apache.hadoop.fs.azure.Wasb","mapreduce.client.submit.file.replication":"10","mapreduce.jobhistory.minicluster.fixed.ports":"false","fs.s3a.multipart.threshold":"128M","yarn.resourcemanager.webapp.xfs-filter.xframe-options":"SAMEORIGIN","mapreduce.jobhistory.done-dir":"${yarn.app.mapreduce.am.staging-dir}/history/done","ipc.server.purge.interval":"15","ipc.client.idlethreshold":"4000","yarn.nodemanager.linux-container-executor.cgroups.strict-resource-usage":"false","mapreduce.reduce.input.buffer.percent":"0.0","yarn.nodemanager.runtime.linux.docker.userremapping-gid-threshold":"1","yarn.nodemanager.webapp.rest-csrf.enabled":"false","fs.ftp.host.port":"21","ipc.ping.interval":"60000","yarn.resourcemanager.history-writer.multi-threaded-dispatcher.pool-size":"10","yarn.resourcemanager.admin.address":"${yarn.resourcemanager.hostname}:8033","file.client-write-packet-size":"65536","ipc.client.kill.max":"10","mapreduce.reduce.speculative":"true","hadoop.security.key.default.bitlength":"128","mapreduce.job.reducer.unconditional-preempt.delay.sec":"300","yarn.nodemanager.disk-health-checker.interval-ms":"120000","yarn.nodemanager.log.deletion-threads-count":"4","fs.s3a.committer.abort.pending.uploads":"true","yarn.webapp.filter-entity-list-by-user":"false","yarn.resourcemanager.activities-manager.app-activities.ttl-ms":"600000","ipc.client.connection.maxidletime":"10000","mapreduce.task.io.sort.mb":"100","yarn.nodemanager.localizer.client.thread-count":"5","io.erasurecode.codec.rs.rawcoders":"rs_native,rs_java","io.erasurecode.codec.rs-legacy.rawcoders":"rs-legacy_java","yarn.sharedcache.admin.address":"0.0.0.0:8047","yarn.resourcemanager.placement-constraints.algorithm.iterator":"SERIAL","yarn.nodemanager.localizer.cache.cleanup.interval-ms":"600000","hadoop.security.crypto.codec.classes.aes.ctr.nopadding":"org.apache.hadoop.crypto.OpensslAesCtrCryptoCodec, org.apache.hadoop.crypto.JceAesCtrCryptoCodec","mapreduce.job.cache.limit.max-resources-mb":"0","fs.s3a.connection.ssl.enabled":"true","yarn.nodemanager.process-kill-wait.ms":"5000","mapreduce.job.hdfs-servers":"${fs.defaultFS}","yarn.app.mapreduce.am.webapp.https.client.auth":"false","hadoop.workaround.non.threadsafe.getpwuid":"true","fs.df.interval":"60000","ipc.[port_number].decay-scheduler.thresholds":"13,25,50","fs.s3a.multiobjectdelete.enable":"true","yarn.sharedcache.cleaner.resource-sleep-ms":"0","yarn.nodemanager.disk-health-checker.min-healthy-disks":"0.25","hadoop.shell.missing.defaultFs.warning":"false","io.file.buffer.size":"65536","fs.viewfs.overload.scheme.target.wasb.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem","hadoop.security.group.mapping.ldap.search.attr.member":"member","hadoop.security.random.device.file.path":"/dev/urandom","hadoop.security.sensitive-config-keys":"*********(redacted)","fs.s3a.s3guard.ddb.max.retries":"9","fs.viewfs.overload.scheme.target.file.impl":"org.apache.hadoop.fs.LocalFileSystem","hadoop.rpc.socket.factory.class.default":"org.apache.hadoop.net.StandardSocketFactory","yarn.intermediate-data-encryption.enable":"false","yarn.resourcemanager.connect.retry-interval.ms":"30000","yarn.nodemanager.container.stderr.pattern":"{*stderr*,*STDERR*}","yarn.scheduler.minimum-allocation-mb":"1024","yarn.app.mapreduce.am.staging-dir":"/tmp/hadoop-yarn/staging","mapreduce.reduce.shuffle.read.timeout":"180000","hadoop.http.cross-origin.max-age":"1800","io.erasurecode.codec.xor.rawcoders":"xor_native,xor_java","fs.s3a.s3guard.consistency.retry.limit":"7","fs.s3a.connection.establish.timeout":"5000","mapreduce.job.running.map.limit":"0","yarn.minicluster.control-resource-monitoring":"false","hadoop.ssl.require.client.cert":"false","hadoop.kerberos.kinit.command":"kinit","yarn.federation.state-store.class":"org.apache.hadoop.yarn.server.federation.store.impl.MemoryFederationStateStore","mapreduce.reduce.log.level":"INFO","hadoop.security.dns.log-slow-lookups.threshold.ms":"1000","mapreduce.job.ubertask.enable":"false","adl.http.timeout":"-1","yarn.resourcemanager.placement-constraints.retry-attempts":"3","hadoop.caller.context.enabled":"false","hadoop.security.group.mapping.ldap.num.attempts":"3","yarn.nodemanager.vmem-pmem-ratio":"2.1","hadoop.rpc.protection":"authentication","ha.health-monitor.rpc-timeout.ms":"45000","yarn.nodemanager.remote-app-log-dir":"/tmp/logs","hadoop.zk.timeout-ms":"10000","fs.s3a.s3guard.cli.prune.age":"86400000","yarn.nodemanager.resource.pcores-vcores-multiplier":"1.0","yarn.nodemanager.runtime.linux.sandbox-mode":"disabled","yarn.app.mapreduce.am.containerlauncher.threadpool-initial-size":"10","fs.viewfs.overload.scheme.target.webhdfs.impl":"org.apache.hadoop.hdfs.web.WebHdfsFileSystem","fs.s3a.committer.threads":"8","hadoop.zk.retry-interval-ms":"1000","hadoop.security.crypto.buffer.size":"8192","yarn.nodemanager.node-labels.provider.fetch-interval-ms":"600000","mapreduce.jobhistory.recovery.store.leveldb.path":"${hadoop.tmp.dir}/mapred/history/recoverystore","yarn.client.failover-retries-on-socket-timeouts":"0","fs.s3a.ssl.channel.mode":"default_jsse","yarn.nodemanager.resource.memory.enabled":"false","fs.azure.authorization.caching.enable":"true","fs.s3a.access.key":"*********(redacted)","hadoop.security.instrumentation.requires.admin":"false","yarn.nodemanager.delete.thread-count":"4","mapreduce.job.finish-when-all-reducers-done":"true","hadoop.registry.jaas.context":"Client","yarn.timeline-service.leveldb-timeline-store.path":"${hadoop.tmp.dir}/yarn/timeline","javax.jdo.option.ConnectionUserName":"hive","io.map.index.interval":"128","yarn.resourcemanager.nm-container-queuing.max-queue-wait-time-ms":"100","fs.abfs.impl":"org.apache.hadoop.fs.azurebfs.AzureBlobFileSystem","mapreduce.job.counters.max":"120","mapreduce.jobhistory.webapp.rest-csrf.enabled":"false","yarn.timeline-service.store-class":"org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore","mapreduce.jobhistory.move.interval-ms":"180000","fs.s3a.change.detection.version.required":"true","yarn.nodemanager.localizer.fetch.thread-count":"4","yarn.resourcemanager.scheduler.client.thread-count":"50","hadoop.ssl.hostname.verifier":"DEFAULT","yarn.timeline-service.leveldb-state-store.path":"${hadoop.tmp.dir}/yarn/timeline","mapreduce.job.classloader":"false","mapreduce.task.profile.map.params":"${mapreduce.task.profile.params}","ipc.client.connect.timeout":"20000","hadoop.security.auth_to_local.mechanism":"hadoop","yarn.timeline-service.app-collector.linger-period.ms":"60000","yarn.nm.liveness-monitor.expiry-interval-ms":"600000","yarn.resourcemanager.reservation-system.planfollower.time-step":"1000","yarn.resourcemanager.proxy.timeout.enabled":"true","yarn.resourcemanager.activities-manager.scheduler-activities.ttl-ms":"600000","yarn.nodemanager.runtime.linux.docker.enable-userremapping.allowed":"true","yarn.webapp.api-service.enable":"false","yarn.nodemanager.recovery.enabled":"false","mapreduce.job.end-notification.retry.interval":"1000","fs.du.interval":"600000","fs.ftp.impl":"org.apache.hadoop.fs.ftp.FTPFileSystem","yarn.nodemanager.container.stderr.tail.bytes":"4096","yarn.nodemanager.disk-health-checker.disk-free-space-threshold.enabled":"true","hadoop.security.group.mapping.ldap.read.timeout.ms":"60000","hadoop.security.groups.cache.warn.after.ms":"5000","file.bytes-per-checksum":"512","mapreduce.outputcommitter.factory.scheme.s3a":"org.apache.hadoop.fs.s3a.commit.S3ACommitterFactory","hadoop.security.groups.cache.background.reload":"false","yarn.nodemanager.container-monitor.enabled":"true","yarn.nodemanager.elastic-memory-control.enabled":"false","net.topology.script.number.args":"100","mapreduce.task.merge.progress.records":"10000","yarn.nodemanager.localizer.address":"${yarn.nodemanager.hostname}:8040","yarn.timeline-service.keytab":"/etc/krb5.keytab","mapreduce.reduce.shuffle.fetch.retry.timeout-ms":"30000","yarn.resourcemanager.rm.container-allocation.expiry-interval-ms":"600000","yarn.nodemanager.container-executor.exit-code-file.timeout-ms":"2000","mapreduce.fileoutputcommitter.algorithm.version":"1","yarn.resourcemanager.work-preserving-recovery.enabled":"true","mapreduce.map.skip.maxrecords":"0","yarn.sharedcache.root-dir":"/sharedcache","fs.s3a.retry.throttle.limit":"20","hadoop.http.authentication.type":"simple","fs.viewfs.overload.scheme.target.oss.impl":"org.apache.hadoop.fs.aliyun.oss.AliyunOSSFileSystem","mapreduce.job.cache.limit.max-resources":"0","mapreduce.task.userlog.limit.kb":"0","ipc.[port_number].weighted-cost.handler":"1","yarn.resourcemanager.scheduler.monitor.enable":"false","ipc.client.connect.max.retries":"10","hadoop.registry.zk.retry.times":"5","yarn.nodemanager.resource-monitor.interval-ms":"3000","yarn.nodemanager.resource-plugins.gpu.allowed-gpu-devices":"auto","mapreduce.job.sharedcache.mode":"disabled","yarn.nodemanager.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.shuffle.listen.queue.size":"128","yarn.scheduler.configuration.mutation.acl-policy.class":"org.apache.hadoop.yarn.server.resourcemanager.scheduler.DefaultConfigurationMutationACLPolicy","mapreduce.map.cpu.vcores":"1","yarn.log-aggregation.file-formats":"TFile","yarn.timeline-service.client.fd-retain-secs":"300","fs.s3a.select.output.csv.field.delimiter":",","yarn.nodemanager.health-checker.timeout-ms":"1200000","hadoop.user.group.static.mapping.overrides":"dr.who=;","fs.azure.sas.expiry.period":"90d","fs.s3a.select.output.csv.record.delimiter":"\\n","mapreduce.jobhistory.recovery.store.class":"org.apache.hadoop.mapreduce.v2.hs.HistoryServerFileSystemStateStoreService","fs.viewfs.overload.scheme.target.https.impl":"org.apache.hadoop.fs.http.HttpsFileSystem","fs.s3a.s3guard.ddb.table.sse.enabled":"false","yarn.resourcemanager.fail-fast":"${yarn.fail-fast}","yarn.resourcemanager.proxy-user-privileges.enabled":"false","yarn.router.webapp.interceptor-class.pipeline":"org.apache.hadoop.yarn.server.router.webapp.DefaultRequestInterceptorREST","yarn.nodemanager.resource.memory.cgroups.soft-limit-percentage":"90.0","mapreduce.job.reducer.preempt.delay.sec":"0","hadoop.util.hash.type":"murmur","yarn.nodemanager.disk-validator":"basic","yarn.app.mapreduce.client.job.max-retries":"3","fs.viewfs.overload.scheme.target.ftp.impl":"org.apache.hadoop.fs.ftp.FTPFileSystem","mapreduce.reduce.shuffle.retry-delay.max.ms":"60000","hadoop.security.group.mapping.ldap.connection.timeout.ms":"60000","mapreduce.task.profile.params":"-agentlib:hprof=cpu=samples,heap=sites,force=n,thread=y,verbose=n,file=%s","yarn.app.mapreduce.shuffle.log.backups":"0","yarn.nodemanager.container-diagnostics-maximum-size":"10000","hadoop.registry.zk.retry.interval.ms":"1000","yarn.nodemanager.linux-container-executor.cgroups.delete-timeout-ms":"1000","fs.AbstractFileSystem.file.impl":"org.apache.hadoop.fs.local.LocalFs","yarn.nodemanager.log-aggregation.roll-monitoring-interval-seconds":"-1","mapreduce.jobhistory.cleaner.interval-ms":"86400000","hadoop.registry.zk.quorum":"localhost:2181","yarn.nodemanager.runtime.linux.runc.allowed-container-runtimes":"runc","mapreduce.output.fileoutputformat.compress":"false","yarn.resourcemanager.am-rm-tokens.master-key-rolling-interval-secs":"*********(redacted)","fs.s3a.assumed.role.session.duration":"30m","hadoop.security.group.mapping.ldap.conversion.rule":"none","hadoop.ssl.server.conf":"ssl-server.xml","fs.s3a.retry.throttle.interval":"100ms","seq.io.sort.factor":"100","fs.viewfs.overload.scheme.target.ofs.impl":"org.apache.hadoop.fs.ozone.RootedOzoneFileSystem","yarn.sharedcache.cleaner.initial-delay-mins":"10","mapreduce.client.completion.pollinterval":"5000","hadoop.ssl.keystores.factory.class":"org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory","yarn.app.mapreduce.am.resource.cpu-vcores":"1","yarn.timeline-service.enabled":"false","yarn.nodemanager.runtime.linux.docker.capabilities":"CHOWN,DAC_OVERRIDE,FSETID,FOWNER,MKNOD,NET_RAW,SETGID,SETUID,SETFCAP,SETPCAP,NET_BIND_SERVICE,SYS_CHROOT,KILL,AUDIT_WRITE","yarn.acl.enable":"false","yarn.timeline-service.entity-group-fs-store.done-dir":"/tmp/entity-file-history/done/","hadoop.security.group.mapping.ldap.num.attempts.before.failover":"3","mapreduce.task.profile":"false","hadoop.prometheus.endpoint.enabled":"false","yarn.resourcemanager.fs.state-store.uri":"${hadoop.tmp.dir}/yarn/system/rmstore","mapreduce.jobhistory.always-scan-user-dir":"false","fs.s3a.metadatastore.metadata.ttl":"15m","yarn.nodemanager.opportunistic-containers-use-pause-for-preemption":"false","yarn.nodemanager.linux-container-executor.nonsecure-mode.local-user":"nobody","yarn.timeline-service.reader.class":"org.apache.hadoop.yarn.server.timelineservice.storage.HBaseTimelineReaderImpl","yarn.resourcemanager.configuration.provider-class":"org.apache.hadoop.yarn.LocalConfigurationProvider","yarn.nodemanager.runtime.linux.docker.userremapping-uid-threshold":"1","yarn.resourcemanager.configuration.file-system-based-store":"/yarn/conf","mapreduce.job.cache.limit.max-single-resource-mb":"0","yarn.nodemanager.runtime.linux.docker.stop.grace-period":"10","fs.s3.awsSecretAccessKey":"*********(redacted)","yarn.resourcemanager.resource-profiles.source-file":"resource-profiles.json","mapreduce.job.dfs.storage.capacity.kill-limit-exceed":"false","yarn.nodemanager.resource.percentage-physical-cpu-limit":"100","mapreduce.jobhistory.client.thread-count":"10","tfile.fs.input.buffer.size":"262144","mapreduce.client.progressmonitor.pollinterval":"1000","yarn.nodemanager.log-dirs":"${yarn.log.dir}/userlogs","yarn.resourcemanager.opportunistic.max.container-allocation.per.am.heartbeat":"-1","fs.automatic.close":"true","yarn.resourcemanager.delegation-token-renewer.thread-retry-interval":"*********(redacted)","fs.s3a.select.input.csv.quote.character":"\"","yarn.nodemanager.hostname":"0.0.0.0","ipc.[port_number].cost-provider.impl":"org.apache.hadoop.ipc.DefaultCostProvider","yarn.nodemanager.runtime.linux.runc.manifest-to-resources-plugin":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.runc.HdfsManifestToResourcesPlugin","yarn.nodemanager.remote-app-log-dir-include-older":"true","yarn.nodemanager.resource.memory.cgroups.swappiness":"0","ftp.stream-buffer-size":"4096","yarn.fail-fast":"false","yarn.nodemanager.runtime.linux.runc.layer-mounts-to-keep":"100","yarn.timeline-service.app-aggregation-interval-secs":"15","hadoop.security.group.mapping.ldap.search.filter.user":"(&(objectClass=user)(sAMAccountName={0}))","ipc.[port_number].weighted-cost.lockshared":"10","yarn.nodemanager.container-localizer.log.level":"INFO","yarn.timeline-service.address":"${yarn.timeline-service.hostname}:10200","mapreduce.job.ubertask.maxmaps":"9","fs.s3a.threads.keepalivetime":"60","mapreduce.jobhistory.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","mapreduce.task.files.preserve.failedtasks":"false","yarn.app.mapreduce.client.job.retry-interval":"2000","ha.failover-controller.graceful-fence.connection.retries":"1","fs.s3a.select.output.csv.quote.escape.character":"\\\\","yarn.resourcemanager.delegation.token.max-lifetime":"*********(redacted)","hadoop.kerberos.keytab.login.autorenewal.enabled":"false","yarn.timeline-service.client.drain-entities.timeout.ms":"2000","yarn.nodemanager.resource-plugins.fpga.vendor-plugin.class":"org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.fpga.IntelFpgaOpenclPlugin","yarn.resourcemanager.nodemanagers.heartbeat-interval-min-ms":"1000","yarn.timeline-service.entity-group-fs-store.summary-store":"org.apache.hadoop.yarn.server.timeline.LeveldbTimelineStore","mapreduce.reduce.cpu.vcores":"1","mapreduce.job.encrypted-intermediate-data.buffer.kb":"128","fs.client.resolve.remote.symlinks":"true","yarn.nodemanager.webapp.https.address":"0.0.0.0:8044","hadoop.http.cross-origin.allowed-origins":"*","mapreduce.job.encrypted-intermediate-data":"false","yarn.nodemanager.disk-health-checker.disk-utilization-threshold.enabled":"true","fs.s3a.executor.capacity":"16","yarn.timeline-service.entity-group-fs-store.retain-seconds":"604800","yarn.resourcemanager.metrics.runtime.buckets":"60,300,1440","yarn.timeline-service.generic-application-history.max-applications":"10000","yarn.nodemanager.local-dirs":"${hadoop.tmp.dir}/nm-local-dir","mapreduce.shuffle.connection-keep-alive.enable":"false","yarn.node-labels.configuration-type":"centralized","fs.s3a.path.style.access":"true","yarn.nodemanager.aux-services.mapreduce_shuffle.class":"org.apache.hadoop.mapred.ShuffleHandler","yarn.sharedcache.store.in-memory.staleness-period-mins":"10080","fs.adl.impl":"org.apache.hadoop.fs.adl.AdlFileSystem","yarn.resourcemanager.application.max-tags":"10","hadoop.domainname.resolver.impl":"org.apache.hadoop.net.DNSDomainNameResolver","yarn.resourcemanager.nodemanager.minimum.version":"NONE","mapreduce.jobhistory.webapp.xfs-filter.xframe-options":"SAMEORIGIN","yarn.app.mapreduce.am.staging-dir.erasurecoding.enabled":"false","net.topology.impl":"org.apache.hadoop.net.NetworkTopology","io.map.index.skip":"0","yarn.timeline-service.reader.webapp.https.address":"${yarn.timeline-service.webapp.https.address}","fs.ftp.data.connection.mode":"ACTIVE_LOCAL_DATA_CONNECTION_MODE","mapreduce.job.local-fs.single-disk-limit.check.kill-limit-exceed":"true","fs.azure.buffer.dir":"${hadoop.tmp.dir}/abfs","yarn.scheduler.maximum-allocation-vcores":"4","hadoop.http.cross-origin.allowed-headers":"X-Requested-With,Content-Type,Accept,Origin","yarn.nodemanager.log-aggregation.compression-type":"none","yarn.timeline-service.version":"1.0f","yarn.ipc.rpc.class":"org.apache.hadoop.yarn.ipc.HadoopYarnProtoRPC","mapreduce.reduce.maxattempts":"4","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.batch-size":"1000","hadoop.security.dns.log-slow-lookups.enabled":"false","mapreduce.job.committer.setup.cleanup.needed":"true","hadoop.security.secure.random.impl":"org.apache.hadoop.crypto.random.OpensslSecureRandom","mapreduce.job.running.reduce.limit":"0","fs.s3a.select.errors.include.sql":"false","fs.s3a.connection.request.timeout":"0","ipc.maximum.response.length":"134217728","yarn.resourcemanager.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","mapreduce.job.token.tracking.ids.enabled":"*********(redacted)","hadoop.caller.context.max.size":"128","yarn.nodemanager.runtime.linux.docker.host-pid-namespace.allowed":"false","yarn.nodemanager.runtime.linux.docker.delayed-removal.allowed":"false","hadoop.registry.system.acls":"sasl:yarn@, sasl:mapred@, sasl:hdfs@","yarn.nodemanager.recovery.dir":"${hadoop.tmp.dir}/yarn-nm-recovery","fs.s3a.fast.upload.buffer":"disk","mapreduce.jobhistory.intermediate-done-dir":"${yarn.app.mapreduce.am.staging-dir}/history/done_intermediate","yarn.app.mapreduce.shuffle.log.separate":"true","yarn.log-aggregation.debug.filesize":"104857600","fs.s3a.max.total.tasks":"32","fs.s3a.readahead.range":"64K","hadoop.http.authentication.simple.anonymous.allowed":"true","fs.s3a.attempts.maximum":"20","hadoop.registry.zk.connection.timeout.ms":"15000","yarn.resourcemanager.delegation-token-renewer.thread-count":"*********(redacted)","yarn.resourcemanager.delegation-token-renewer.thread-timeout":"*********(redacted)","yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size":"10000","yarn.nodemanager.aux-services.manifest.reload-ms":"0","yarn.nodemanager.emit-container-events":"true","yarn.resourcemanager.resource-profiles.enabled":"false","yarn.timeline-service.hbase-schema.prefix":"prod.","fs.azure.authorization":"false","mapreduce.map.log.level":"INFO","ha.failover-controller.active-standby-elector.zk.op.retries":"3","yarn.resourcemanager.decommissioning-nodes-watcher.poll-interval-secs":"20","mapreduce.output.fileoutputformat.compress.type":"RECORD","yarn.resourcemanager.leveldb-state-store.path":"${hadoop.tmp.dir}/yarn/system/rmstore","yarn.timeline-service.webapp.rest-csrf.custom-header":"X-XSRF-Header","mapreduce.ifile.readahead.bytes":"4194304","yarn.sharedcache.app-checker.class":"org.apache.hadoop.yarn.server.sharedcachemanager.RemoteAppChecker","yarn.nodemanager.linux-container-executor.nonsecure-mode.limit-users":"true","yarn.nodemanager.resource.detect-hardware-capabilities":"false","mapreduce.cluster.acls.enabled":"false","mapreduce.job.speculative.retry-after-no-speculate":"1000","fs.viewfs.overload.scheme.target.abfs.impl":"org.apache.hadoop.fs.azurebfs.AzureBlobFileSystem","hadoop.security.group.mapping.ldap.search.group.hierarchy.levels":"0","yarn.resourcemanager.fs.state-store.retry-interval-ms":"1000","file.stream-buffer-size":"4096","yarn.resourcemanager.application-timeouts.monitor.interval-ms":"3000","mapreduce.map.output.compress.codec":"org.apache.hadoop.io.compress.DefaultCodec","mapreduce.map.speculative":"true","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.hdfs-hash-file":"/runc-root/image-tag-to-hash","mapreduce.job.speculative.retry-after-speculate":"15000","yarn.nodemanager.linux-container-executor.cgroups.mount":"false","yarn.app.mapreduce.am.container.log.backups":"0","yarn.app.mapreduce.am.log.level":"INFO","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin":"org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.runtime.runc.ImageTagToManifestPlugin","io.bytes.per.checksum":"512","mapreduce.job.reduce.slowstart.completedmaps":"0.05","yarn.timeline-service.http-authentication.type":"simple","hadoop.security.group.mapping.ldap.search.attr.group.name":"cn","yarn.nodemanager.resource-plugins.fpga.allowed-fpga-devices":"auto","yarn.timeline-service.client.internal-timers-ttl-secs":"420","fs.s3a.select.output.csv.quote.character":"\"","hadoop.http.logs.enabled":"true","fs.s3a.block.size":"32M","yarn.sharedcache.client-server.address":"0.0.0.0:8045","yarn.nodemanager.logaggregation.threadpool-size-max":"100","yarn.resourcemanager.hostname":"0.0.0.0","yarn.resourcemanager.delegation.key.update-interval":"86400000","mapreduce.reduce.shuffle.fetch.retry.enabled":"${yarn.nodemanager.recovery.enabled}","mapreduce.map.memory.mb":"-1","mapreduce.task.skip.start.attempts":"2","fs.AbstractFileSystem.hdfs.impl":"org.apache.hadoop.fs.Hdfs","yarn.nodemanager.disk-health-checker.enable":"true","fs.s3a.select.output.csv.quote.fields":"always","ipc.client.tcpnodelay":"true","ipc.client.rpc-timeout.ms":"0","yarn.nodemanager.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","yarn.resourcemanager.delegation-token-renewer.thread-retry-max-attempts":"*********(redacted)","ipc.client.low-latency":"false","mapreduce.input.lineinputformat.linespermap":"1","yarn.router.interceptor.user.threadpool-size":"5","javax.jdo.option.ConnectionURL":"jdbc:postgresql://hive-metastore-db/metastore","ipc.client.connect.max.retries.on.timeouts":"45","yarn.timeline-service.leveldb-timeline-store.read-cache-size":"104857600","fs.AbstractFileSystem.har.impl":"org.apache.hadoop.fs.HarFs","mapreduce.job.split.metainfo.maxsize":"10000000","yarn.am.liveness-monitor.expiry-interval-ms":"600000","fs.s3.awsAccessKeyId":"*********(redacted)","yarn.resourcemanager.container-tokens.master-key-rolling-interval-secs":"*********(redacted)","yarn.timeline-service.entity-group-fs-store.app-cache-size":"10","yarn.nodemanager.runtime.linux.runc.hdfs-manifest-to-resources-plugin.stat-cache-timeout-interval-secs":"360","fs.s3a.socket.recv.buffer":"8192","rpc.metrics.timeunit":"MILLISECONDS","yarn.resourcemanager.resource-tracker.address":"${yarn.resourcemanager.hostname}:8031","yarn.nodemanager.node-labels.provider.fetch-timeout-ms":"1200000","mapreduce.job.heap.memory-mb.ratio":"0.8","yarn.resourcemanager.leveldb-state-store.compaction-interval-secs":"3600","yarn.resourcemanager.webapp.rest-csrf.custom-header":"X-XSRF-Header","yarn.nodemanager.pluggable-device-framework.enabled":"false","yarn.scheduler.configuration.fs.path":"file://${hadoop.tmp.dir}/yarn/system/schedconf","mapreduce.client.output.filter":"FAILED","hadoop.http.filter.initializers":"org.apache.hadoop.http.lib.StaticUserWebFilter","mapreduce.reduce.memory.mb":"-1","yarn.timeline-service.hostname":"0.0.0.0","javax.jdo.option.ConnectionDriverName":"org.postgresql.Driver","file.replication":"1","yarn.nodemanager.container-metrics.unregister-delay-ms":"10000","yarn.nodemanager.container-metrics.period-ms":"-1","mapreduce.fileoutputcommitter.task.cleanup.enabled":"false","yarn.nodemanager.log.retain-seconds":"10800","yarn.timeline-service.entity-group-fs-store.cleaner-interval-seconds":"3600","ipc.[port_number].callqueue.impl":"java.util.concurrent.LinkedBlockingQueue","yarn.resourcemanager.keytab":"/etc/krb5.keytab","hadoop.security.group.mapping.providers.combined":"true","mapreduce.reduce.merge.inmem.threshold":"1000","yarn.timeline-service.recovery.enabled":"false","fs.azure.saskey.usecontainersaskeyforallaccess":"true","yarn.sharedcache.nm.uploader.thread-count":"20","yarn.resourcemanager.nodemanager-graceful-decommission-timeout-secs":"3600","ipc.[port_number].weighted-cost.lockfree":"1","mapreduce.shuffle.ssl.enabled":"false","yarn.timeline-service.hbase.coprocessor.app-final-value-retention-milliseconds":"259200000","yarn.nodemanager.opportunistic-containers-max-queue-length":"0","yarn.resourcemanager.state-store.max-completed-applications":"${yarn.resourcemanager.max-completed-applications}","javax.jdo.option.ConnectionPassword":"*********(redacted)","mapreduce.job.speculative.minimum-allowed-tasks":"10","fs.s3a.aws.credentials.provider":"\n    org.apache.hadoop.fs.s3a.TemporaryAWSCredentialsProvider,\n    org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider,\n    com.amazonaws.auth.EnvironmentVariableCredentialsProvider,\n    org.apache.hadoop.fs.s3a.auth.IAMInstanceCredentialsProvider\n  ","yarn.log-aggregation.retain-seconds":"-1","yarn.nodemanager.disk-health-checker.min-free-space-per-disk-mb":"0","mapreduce.jobhistory.max-age-ms":"604800000","hadoop.http.cross-origin.allowed-methods":"GET,POST,HEAD","yarn.resourcemanager.opportunistic-container-allocation.enabled":"false","mapreduce.jobhistory.webapp.address":"0.0.0.0:19888","hadoop.system.tags":"YARN,HDFS,NAMENODE,DATANODE,REQUIRED,SECURITY,KERBEROS,PERFORMANCE,CLIENT\n      ,SERVER,DEBUG,DEPRECATED,COMMON,OPTIONAL","yarn.log-aggregation.file-controller.TFile.class":"org.apache.hadoop.yarn.logaggregation.filecontroller.tfile.LogAggregationTFileController","yarn.client.nodemanager-connect.max-wait-ms":"180000","yarn.resourcemanager.webapp.address":"${yarn.resourcemanager.hostname}:8088","fs.s3n.awsAccessKeyId":"*********(redacted)","mapreduce.jobhistory.recovery.enable":"false","mapreduce.reduce.shuffle.parallelcopies":"5","fs.AbstractFileSystem.webhdfs.impl":"org.apache.hadoop.fs.WebHdfs","fs.trash.interval":"0","yarn.app.mapreduce.client.max-retries":"3","hadoop.security.authentication":"simple","mapreduce.task.profile.reduce.params":"${mapreduce.task.profile.params}","yarn.app.mapreduce.am.resource.mb":"1536","mapreduce.input.fileinputformat.list-status.num-threads":"1","yarn.nodemanager.container-executor.class":"org.apache.hadoop.yarn.server.nodemanager.DefaultContainerExecutor","io.mapfile.bloom.size":"1048576","yarn.timeline-service.ttl-ms":"604800000","yarn.resourcemanager.nm-container-queuing.min-queue-length":"5","yarn.nodemanager.resource.cpu-vcores":"-1","mapreduce.job.reduces":"1","fs.s3a.multipart.size":"64M","fs.s3a.select.input.csv.comment.marker":"#","yarn.scheduler.minimum-allocation-vcores":"1","mapreduce.job.speculative.speculative-cap-total-tasks":"0.01","hadoop.ssl.client.conf":"ssl-client.xml","mapreduce.job.queuename":"default","mapreduce.job.encrypted-intermediate-data-key-size-bits":"128","fs.s3a.metadatastore.authoritative":"false","ipc.[port_number].weighted-cost.response":"1","yarn.nodemanager.webapp.xfs-filter.xframe-options":"SAMEORIGIN","ha.health-monitor.sleep-after-disconnect.ms":"1000","yarn.app.mapreduce.shuffle.log.limit.kb":"0","hadoop.security.group.mapping":"org.apache.hadoop.security.JniBasedUnixGroupsMappingWithFallback","yarn.client.application-client-protocol.poll-timeout-ms":"-1","mapreduce.jobhistory.jhist.format":"binary","mapreduce.task.stuck.timeout-ms":"600000","yarn.resourcemanager.application.max-tag.length":"100","yarn.resourcemanager.ha.enabled":"false","dfs.client.ignore.namenode.default.kms.uri":"false","hadoop.http.staticuser.user":"dr.who","mapreduce.task.exit.timeout.check-interval-ms":"20000","mapreduce.jobhistory.intermediate-user-done-dir.permissions":"770","mapreduce.task.exit.timeout":"60000","yarn.nodemanager.linux-container-executor.resources-handler.class":"org.apache.hadoop.yarn.server.nodemanager.util.DefaultLCEResourcesHandler","mapreduce.reduce.shuffle.memory.limit.percent":"0.25","yarn.resourcemanager.reservation-system.enable":"false","mapreduce.map.output.compress":"false","ha.zookeeper.acl":"world:anyone:rwcda","ipc.server.max.connections":"0","yarn.nodemanager.runtime.linux.docker.default-container-network":"host","yarn.router.webapp.address":"0.0.0.0:8089","yarn.scheduler.maximum-allocation-mb":"8192","yarn.resourcemanager.scheduler.monitor.policies":"org.apache.hadoop.yarn.server.resourcemanager.monitor.capacity.ProportionalCapacityPreemptionPolicy","yarn.sharedcache.cleaner.period-mins":"1440","yarn.nodemanager.resource-plugins.gpu.docker-plugin.nvidia-docker-v1.endpoint":"http://localhost:3476/v1.0/docker/cli","datanucleus.autoCreateSchema":"false","yarn.app.mapreduce.am.container.log.limit.kb":"0","ipc.client.connect.retry.interval":"1000","yarn.timeline-service.http-cross-origin.enabled":"false","fs.wasbs.impl":"org.apache.hadoop.fs.azure.NativeAzureFileSystem$Secure","yarn.resourcemanager.nodemanagers.heartbeat-interval-max-ms":"1000","yarn.federation.subcluster-resolver.class":"org.apache.hadoop.yarn.server.federation.resolver.DefaultSubClusterResolverImpl","yarn.resourcemanager.zk-state-store.parent-path":"/rmstore","fs.s3a.select.input.csv.field.delimiter":",","mapreduce.jobhistory.cleaner.enable":"true","yarn.timeline-service.client.fd-flush-interval-secs":"10","hadoop.security.kms.client.encrypted.key.cache.expiry":"43200000","yarn.client.nodemanager-client-async.thread-pool-max-size":"500","mapreduce.map.maxattempts":"4","yarn.resourcemanager.nm-container-queuing.sorting-nodes-interval-ms":"1000","fs.s3a.committer.staging.tmp.path":"tmp/staging","yarn.nodemanager.sleep-delay-before-sigkill.ms":"250","yarn.resourcemanager.nm-container-queuing.min-queue-wait-time-ms":"10","mapreduce.job.end-notification.retry.attempts":"0","yarn.nodemanager.resource.count-logical-processors-as-cores":"false","hadoop.registry.zk.root":"/registry","adl.feature.ownerandgroup.enableupn":"false","yarn.resourcemanager.zk-max-znode-size.bytes":"1048576","mapreduce.job.reduce.shuffle.consumer.plugin.class":"org.apache.hadoop.mapreduce.task.reduce.Shuffle","yarn.resourcemanager.delayed.delegation-token.removal-interval-ms":"*********(redacted)","yarn.nodemanager.localizer.cache.target-size-mb":"10240","fs.s3a.committer.staging.conflict-mode":"append","mapreduce.client.libjars.wildcard":"true","fs.s3a.committer.staging.unique-filenames":"true","yarn.nodemanager.node-attributes.provider.fetch-timeout-ms":"1200000","fs.s3a.list.version":"2","ftp.client-write-packet-size":"65536","ipc.[port_number].weighted-cost.lockexclusive":"100","fs.AbstractFileSystem.adl.impl":"org.apache.hadoop.fs.adl.Adl","yarn.nodemanager.container-log-monitor.enable":"false","hadoop.security.key.default.cipher":"AES/CTR/NoPadding","yarn.client.failover-retries":"0","fs.s3a.multipart.purge.age":"86400","mapreduce.job.local-fs.single-disk-limit.check.interval-ms":"5000","net.topology.node.switch.mapping.impl":"org.apache.hadoop.net.ScriptBasedMapping","yarn.nodemanager.amrmproxy.address":"0.0.0.0:8049","ipc.server.listen.queue.size":"256","ipc.[port_number].decay-scheduler.period-ms":"5000","yarn.nodemanager.runtime.linux.runc.image-tag-to-manifest-plugin.cache-refresh-interval-secs":"60","map.sort.class":"org.apache.hadoop.util.QuickSort","fs.viewfs.rename.strategy":"SAME_MOUNTPOINT","hadoop.security.kms.client.authentication.retry-count":"1","fs.permissions.umask-mode":"022","fs.s3a.assumed.role.credentials.provider":"org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider","yarn.nodemanager.runtime.linux.runc.privileged-containers.allowed":"false","yarn.nodemanager.vmem-check-enabled":"true","yarn.nodemanager.numa-awareness.enabled":"false","yarn.nodemanager.recovery.compaction-interval-secs":"3600","yarn.app.mapreduce.client-am.ipc.max-retries":"3","yarn.resourcemanager.system-metrics-publisher.timeline-server-v1.interval-seconds":"60","yarn.federation.registry.base-dir":"yarnfederation/","yarn.nodemanager.health-checker.run-before-startup":"false","mapreduce.job.max.map":"-1","mapreduce.job.local-fs.single-disk-limit.bytes":"-1","mapreduce.shuffle.pathcache.concurrency-level":"16","mapreduce.job.ubertask.maxreduces":"1","mapreduce.shuffle.pathcache.max-weight":"10485760","hadoop.security.kms.client.encrypted.key.cache.size":"500","hadoop.security.java.secure.random.algorithm":"SHA1PRNG","ha.failover-controller.cli-check.rpc-timeout.ms":"20000","mapreduce.jobhistory.jobname.limit":"50","fs.s3a.select.input.compression":"none","yarn.client.nodemanager-connect.retry-interval-ms":"10000","ipc.[port_number].scheduler.priority.levels":"4","yarn.timeline-service.state-store-class":"org.apache.hadoop.yarn.server.timeline.recovery.LeveldbTimelineStateStore","yarn.nodemanager.env-whitelist":"JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_HOME,PATH,LANG,TZ","yarn.sharedcache.nested-level":"3","yarn.timeline-service.webapp.rest-csrf.methods-to-ignore":"GET,OPTIONS,HEAD","fs.azure.user.agent.prefix":"unknown","yarn.resourcemanager.zk-delegation-token-node.split-index":"*********(redacted)","yarn.nodemanager.numa-awareness.read-topology":"false","yarn.nodemanager.webapp.address":"${yarn.nodemanager.hostname}:8042","rpc.metrics.quantile.enable":"false","yarn.registry.class":"org.apache.hadoop.registry.client.impl.FSRegistryOperationsService","mapreduce.jobhistory.admin.acl":"*","yarn.resourcemanager.system-metrics-publisher.dispatcher.pool-size":"10","yarn.scheduler.queue-placement-rules":"user-group","hadoop.http.authentication.kerberos.keytab":"${user.home}/hadoop.keytab","yarn.resourcemanager.recovery.enabled":"false","fs.s3a.select.input.csv.header":"none","yarn.nodemanager.runtime.linux.runc.hdfs-manifest-to-resources-plugin.stat-cache-size":"500","yarn.timeline-service.webapp.rest-csrf.enabled":"false","yarn.nodemanager.disk-health-checker.min-free-space-per-disk-watermark-high-mb":"0"},"System Properties":{"java.io.tmpdir":"/tmp","zeppelin.spark.scala.color":"true","line.separator":"\n","path.separator":":","zeppelin.spark.sql.stacktrace":"true","sun.management.compiler":"HotSpot 64-Bit Tiered Compilers","SPARK_SUBMIT":"true","sun.cpu.endian":"little","java.specification.maintenance.version":"2","java.specification.version":"11","java.vm.specification.name":"Java Virtual Machine Specification","java.vendor":"Ubuntu","java.vm.specification.version":"11","user.home":"/opt/zeppelin","sun.arch.data.model":"64","sun.boot.library.path":"/usr/lib/jvm/java-11-openjdk-amd64/lib","user.dir":"/opt/zeppelin","java.library.path":"/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib","zeppelin.spark.useHiveContext":"true","sun.cpu.isalist":"","os.arch":"amd64","java.vm.version":"11.0.24+8-post-Ubuntu-1ubuntu320.04","zeppelin.spark.sql.interpolation":"false","jetty.git.hash":"cef3fbd6d736a21e7d541a5db490381d95a2047d","zeppelin.interpreter.output.limit":"102400","zeppelin.interpreter.connection.poolsize":"100","zeppelin.R.cmd":"R","java.runtime.version":"11.0.24+8-post-Ubuntu-1ubuntu320.04","zeppelin.spark.maxResult":"1000","java.vm.info":"mixed mode, sharing","zeppelin.pyspark.useIPython":"true","zeppelin.spark.concurrentSQL":"true","java.runtime.name":"OpenJDK Runtime Environment","zeppelin.spark.concurrentSQL.max":"10","java.version.date":"2024-07-16","zeppelin.spark.enableSupportedVersionCheck":"true","file.separator":"/","zeppelin.spark.printREPLOutput":"true","com.amazonaws.services.s3.enableV4":"","java.class.version":"55.0","java.specification.name":"Java Platform API Specification","file.encoding":"UTF-8","zeppelin.R.shiny.portRange":":","jdk.reflect.useDirectMethodHandle":"false","user.timezone":"Etc/UTC","scala.color":"true","java.specification.vendor":"Oracle Corporation","sun.java.launcher":"SUN_STANDARD","java.vm.compressedOopsMode":"32-bit","os.version":"6.10.7-orbstack-00280-gd3b7ec68d3d4","sun.os.patch.level":"unknown","java.vm.specification.vendor":"Oracle Corporation","zeppelin.spark.scala.version":"2.12","user.country":"US","zeppelin.R.image.width":"100%","sun.jnu.encoding":"UTF-8","user.language":"en","zeppelin.spark.ui.hidden":"false","zeppelin.interpreter.localRepo":"/opt/zeppelin/local-repo/spark","zeppelin.spark.deprecatedMsg.show":"true","java.vendor.url":"https://ubuntu.com/","java.awt.printerjob":"sun.print.PSPrinterJob","java.awt.graphicsenv":"sun.awt.X11GraphicsEnvironment","awt.toolkit":"sun.awt.X11.XToolkit","os.name":"Linux","scala.repl.name.line":"$line820724102","java.vm.vendor":"Ubuntu","jdk.debug":"release","java.vendor.url.bug":"https://bugs.launchpad.net/ubuntu/+source/openjdk-lts","user.name":"zeppelin","zeppelin.R.render.options":"out.format = 'html', comment = NA, echo = FALSE, results = 'asis', message = F, warning = F, fig.retina = 2","java.vm.name":"OpenJDK 64-Bit Server VM","sun.java.command":"org.apache.spark.deploy.SparkSubmit --conf spark.executor.memory=1g --conf spark.driver.port=5050 --conf spark.master=spark://spark-master:7077 --conf spark.driver.memory=1g --conf spark.driver.cores=1 --conf spark.driver.extraClassPath=:/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar --conf spark.ui.port=4050 --conf spark.executor.cores=1 --conf spark.app.name=spark-shared_process --conf spark.driver.bindAddress=0.0.0.0 --conf spark.driver.host=zeppelin --conf spark.executor.extraJavaOptions=-Dcom.amazonaws.services.s3.enableV4 --conf spark.executor.instances=2 --conf spark.blockManager.port=6060 --conf spark.webui.yarn.useProxy=false --conf spark.driver.extraJavaOptions=-Dcom.amazonaws.services.s3.enableV4 --class org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer /opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar 172.17.0.20 40921 spark-shared_process :","zeppelin.spark.run.asLoginUser":"true","java.home":"/usr/lib/jvm/java-11-openjdk-amd64","zeppelin.R.knitr":"true","java.version":"11.0.24","sun.io.unicode.encoding":"UnicodeLittle"},"Metrics Properties":{"*.sink.servlet.class":"org.apache.spark.metrics.sink.MetricsServlet","*.sink.servlet.path":"/metrics/json","applications.sink.servlet.path":"/metrics/applications/json","master.sink.servlet.path":"/metrics/master/json"},"Classpath Entries":{"/opt/spark/jars/netty-transport-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/netty-transport-native-epoll-4.1.96.Final-linux-x86_64.jar":"System Classpath","spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar":"Added By User","/opt/spark/jars/kubernetes-model-common-6.7.2.jar":"System Classpath","/opt/spark/jars/spark-network-shuffle_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/logging-interceptor-3.12.12.jar":"System Classpath","/opt/spark/jars/paranamer-2.8.jar":"System Classpath","/opt/spark/jars/breeze_2.12-2.1.0.jar":"System Classpath","/opt/spark/jars/scala-compiler-2.12.18.jar":"System Classpath","/opt/spark/jars/bonecp-0.8.0.RELEASE.jar":"System Classpath","/opt/spark/jars/hadoop-yarn-server-web-proxy-3.3.4.jar":"System Classpath","/opt/spark/jars/hadoop-client-api-3.3.4.jar":"System Classpath","spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar":"Added By User","/opt/spark/jars/netty-handler-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/jersey-hk2-2.40.jar":"System Classpath","/opt/spark/jars/netty-buffer-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/leveldbjni-all-1.8.jar":"System Classpath","/opt/spark/jars/kubernetes-model-gatewayapi-6.7.2.jar":"System Classpath","/opt/spark/jars/spark-common-utils_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/commons-compress-1.23.0.jar":"System Classpath","/opt/spark/jars/log4j-api-2.20.0.jar":"System Classpath","/opt/spark/jars/super-csv-2.2.0.jar":"System Classpath","/opt/spark/jars/javolution-5.5.1.jar":"System Classpath","/opt/spark/jars/hive-shims-scheduler-2.3.9.jar":"System Classpath","/opt/spark/jars/spire-util_2.12-0.17.0.jar":"System Classpath","/opt/spark/jars/netty-transport-classes-epoll-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/gson-2.2.4.jar":"System Classpath","/opt/spark/jars/spark-streaming_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/kubernetes-client-6.7.2.jar":"System Classpath","/opt/spark/jars/parquet-format-structures-1.13.1.jar":"System Classpath","/opt/spark/jars/parquet-column-1.13.1.jar":"System Classpath","/opt/spark/jars/tink-1.9.0.jar":"System Classpath","/opt/spark/jars/istack-commons-runtime-3.0.8.jar":"System Classpath","/opt/spark/jars/antlr-runtime-3.5.2.jar":"System Classpath","/opt/spark/jars/arrow-memory-core-12.0.1.jar":"System Classpath","/opt/spark/jars/commons-dbcp-1.4.jar":"System Classpath","/opt/spark/jars/chill_2.12-0.10.0.jar":"System Classpath","/opt/spark/jars/log4j-core-2.20.0.jar":"System Classpath","/opt/spark/jars/algebra_2.12-2.0.1.jar":"System Classpath","/opt/spark/jars/xz-1.9.jar":"System Classpath","/opt/spark/jars/kubernetes-model-metrics-6.7.2.jar":"System Classpath","/opt/spark/jars/antlr4-runtime-4.9.3.jar":"System Classpath","/opt/spark/jars/aws-java-sdk-bundle-1.12.262.jar":"System Classpath","/opt/spark/jars/hive-service-rpc-3.1.3.jar":"System Classpath","/opt/spark/jars/activation-1.1.1.jar":"System Classpath","/opt/spark/jars/objenesis-3.3.jar":"System Classpath","/opt/spark/jars/joda-time-2.12.5.jar":"System Classpath","/opt/spark/jars/netty-codec-http-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/iceberg-spark-runtime-3.5_2.12-1.5.2.jar":"System Classpath","/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar":"System Classpath","/opt/spark/jars/spark-yarn_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/netty-transport-native-epoll-4.1.96.Final-linux-aarch_64.jar":"System Classpath","/opt/spark/jars/hive-storage-api-2.8.1.jar":"System Classpath","/opt/spark/jars/jackson-databind-2.15.2.jar":"System Classpath","/opt/spark/jars/kubernetes-model-policy-6.7.2.jar":"System Classpath","/opt/spark/jars/cats-kernel_2.12-2.1.1.jar":"System Classpath","/opt/spark/jars/spark-tags_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/aopalliance-repackaged-2.6.1.jar":"System Classpath","/opt/spark/jars/lapack-3.0.3.jar":"System Classpath","/opt/spark/jars/xbean-asm9-shaded-4.23.jar":"System Classpath","/opt/spark/jars/hadoop-client-runtime-3.3.4.jar":"System Classpath","/opt/spark/jars/JTransforms-3.1.jar":"System Classpath","/opt/spark/jars/jakarta.servlet-api-4.0.3.jar":"System Classpath","/opt/spark/jars/jul-to-slf4j-2.0.7.jar":"System Classpath","/opt/spark/jars/commons-collections-3.2.2.jar":"System Classpath","/opt/spark/jars/oro-2.0.8.jar":"System Classpath","/opt/spark/jars/datanucleus-api-jdo-4.2.4.jar":"System Classpath","/opt/spark/jars/derby-10.14.2.0.jar":"System Classpath","/opt/spark/jars/kubernetes-model-coordination-6.7.2.jar":"System Classpath","/opt/spark/jars/javassist-3.29.2-GA.jar":"System Classpath","/opt/spark/jars/kubernetes-model-scheduling-6.7.2.jar":"System Classpath","/opt/spark/jars/netty-common-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/metrics-jvm-4.2.19.jar":"System Classpath","/opt/spark/jars/commons-pool-1.5.4.jar":"System Classpath","/opt/spark/jars/commons-codec-1.16.1.jar":"System Classpath","/opt/spark/jars/breeze-macros_2.12-2.1.0.jar":"System Classpath","/opt/spark/jars/kubernetes-model-networking-6.7.2.jar":"System Classpath","/opt/spark/jars/py4j-0.10.9.7.jar":"System Classpath","/opt/spark/jars/annotations-17.0.0.jar":"System Classpath","/opt/spark/jars/jaxb-runtime-2.3.2.jar":"System Classpath","/opt/spark/jars/blas-3.0.3.jar":"System Classpath","/opt/spark/jars/json4s-ast_2.12-3.7.0-M11.jar":"System Classpath","/opt/spark/jars/scala-collection-compat_2.12-2.7.0.jar":"System Classpath","/opt/spark/jars/commons-lang-2.6.jar":"System Classpath","spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar":"Added By User","/opt/spark/jars/spark-hive_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/compress-lzf-1.1.2.jar":"System Classpath","/opt/spark/jars/spark-network-common_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/zookeeper-jute-3.6.3.jar":"System Classpath","/opt/spark/jars/metrics-graphite-4.2.19.jar":"System Classpath","/opt/spark/jars/spark-mllib_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/spark-catalyst_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/snakeyaml-engine-2.6.jar":"System Classpath","/opt/spark/jars/json4s-jackson_2.12-3.7.0-M11.jar":"System Classpath","/opt/spark/jars/delta-spark_2.12-3.2.0.jar":"System Classpath","/opt/spark/jars/kubernetes-model-discovery-6.7.2.jar":"System Classpath","/opt/spark/jars/jta-1.1.jar":"System Classpath","/opt/spark/jars/jersey-server-2.40.jar":"System Classpath","/opt/spark/jars/orc-core-1.9.4-shaded-protobuf.jar":"System Classpath","/opt/spark/jars/jersey-common-2.40.jar":"System Classpath","/opt/spark/jars/libthrift-0.12.0.jar":"System Classpath","/opt/spark/jars/metrics-json-4.2.19.jar":"System Classpath","/opt/spark/jars/hive-serde-2.3.9.jar":"System Classpath","/opt/spark/jars/RoaringBitmap-0.9.45.jar":"System Classpath","/opt/spark/jars/metrics-core-4.2.19.jar":"System Classpath","/opt/spark/jars/parquet-encoding-1.13.1.jar":"System Classpath","/opt/spark/jars/hive-common-2.3.9.jar":"System Classpath","/opt/spark/jars/hk2-api-2.6.1.jar":"System Classpath","/opt/spark/jars/hadoop-aws-3.3.4.jar":"System Classpath","/opt/spark/jars/kubernetes-model-admissionregistration-6.7.2.jar":"System Classpath","/opt/spark/jars/snakeyaml-2.0.jar":"System Classpath","/opt/spark/jars/guava-14.0.1.jar":"System Classpath","/opt/spark/jars/spark-repl_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/slf4j-api-2.0.7.jar":"System Classpath","/opt/spark/jars/hive-metastore-2.3.9.jar":"System Classpath","/opt/spark/jars/spark-unsafe_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/spark-mllib-local_2.12-3.5.2.jar":"System Classpath","/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar":"System Classpath","/opt/spark/jars/jcl-over-slf4j-2.0.7.jar":"System Classpath","/opt/spark/jars/json4s-core_2.12-3.7.0-M11.jar":"System Classpath","/opt/spark/jars/kubernetes-model-autoscaling-6.7.2.jar":"System Classpath","/opt/spark/jars/univocity-parsers-2.9.1.jar":"System Classpath","/opt/spark/jars/commons-text-1.10.0.jar":"System Classpath","/opt/spark/jars/kubernetes-model-apiextensions-6.7.2.jar":"System Classpath","/opt/spark/jars/netty-transport-classes-kqueue-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/orc-shims-1.9.4.jar":"System Classpath","/opt/spark/jars/jersey-client-2.40.jar":"System Classpath","/opt/spark/jars/netty-codec-4.1.96.Final.jar":"System Classpath","spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar":"Added By User","/opt/spark/jars/curator-client-2.13.0.jar":"System Classpath","/opt/spark/jars/jackson-mapper-asl-1.9.13.jar":"System Classpath","spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar":"Added By User","/opt/spark/jars/jsr305-3.0.0.jar":"System Classpath","/opt/spark/jars/spark-sql-api_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/spark-mesos_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/spire_2.12-0.17.0.jar":"System Classpath","/opt/spark/jars/orc-mapreduce-1.9.4-shaded-protobuf.jar":"System Classpath","/opt/spark/jars/jdo-api-3.0.1.jar":"System Classpath","/opt/spark/jars/hive-exec-2.3.9-core.jar":"System Classpath","/opt/spark/jars/spark-launcher_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/jakarta.annotation-api-1.3.5.jar":"System Classpath","/opt/spark/jars/scala-library-2.12.18.jar":"System Classpath","/opt/spark/jars/ivy-2.5.1.jar":"System Classpath","/opt/spark/jars/minlog-1.3.0.jar":"System Classpath","/opt/spark/jars/shims-0.9.45.jar":"System Classpath","/opt/spark/jars/netty-handler-proxy-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/jackson-annotations-2.15.2.jar":"System Classpath","/opt/spark/jars/kubernetes-model-core-6.7.2.jar":"System Classpath","/opt/spark/jars/kubernetes-model-certificates-6.7.2.jar":"System Classpath","/opt/spark/jars/mesos-1.4.3-shaded-protobuf.jar":"System Classpath","/opt/spark/jars/netty-all-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/scala-reflect-2.12.18.jar":"System Classpath","/opt/spark/jars/netty-transport-native-kqueue-4.1.96.Final-osx-x86_64.jar":"System Classpath","/opt/spark/conf/":"System Classpath","/opt/spark/jars/curator-recipes-2.13.0.jar":"System Classpath","spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar":"Added By User","/opt/spark/jars/jakarta.validation-api-2.0.2.jar":"System Classpath","/opt/spark/jars/parquet-common-1.13.1.jar":"System Classpath","/opt/spark/jars/log4j-slf4j2-impl-2.20.0.jar":"System Classpath","/opt/spark/jars/kubernetes-model-batch-6.7.2.jar":"System Classpath","/opt/spark/jars/kubernetes-httpclient-okhttp-6.7.2.jar":"System Classpath","/opt/spark/jars/spire-macros_2.12-0.17.0.jar":"System Classpath","/opt/spark/jars/datasketches-java-3.3.0.jar":"System Classpath","spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar":"Added By User","/opt/spark/jars/metrics-jmx-4.2.19.jar":"System Classpath","/opt/spark/jars/hk2-locator-2.6.1.jar":"System Classpath","/opt/spark/jars/lz4-java-1.8.0.jar":"System Classpath","/opt/spark/jars/scala-xml_2.12-2.1.0.jar":"System Classpath","/opt/spark/jars/hive-shims-0.23-2.3.9.jar":"System Classpath","/opt/spark/jars/spire-platform_2.12-0.17.0.jar":"System Classpath","/opt/spark/jars/jakarta.xml.bind-api-2.3.2.jar":"System Classpath","/opt/spark/jars/commons-lang3-3.12.0.jar":"System Classpath","/opt/spark/jars/JLargeArrays-1.5.jar":"System Classpath","/opt/spark/jars/kubernetes-model-rbac-6.7.2.jar":"System Classpath","/opt/spark/jars/jakarta.inject-2.6.1.jar":"System Classpath","/opt/spark/jars/hive-shims-2.3.9.jar":"System Classpath","/opt/spark/jars/parquet-jackson-1.13.1.jar":"System Classpath","/opt/spark/jars/spark-graphx_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/httpcore-4.4.16.jar":"System Classpath","/opt/spark/jars/jodd-core-3.5.2.jar":"System Classpath","/opt/spark/jars/avro-mapred-1.11.2.jar":"System Classpath","/opt/spark/jars/jackson-core-2.15.2.jar":"System Classpath","/opt/spark/jars/netty-transport-native-kqueue-4.1.96.Final-osx-aarch_64.jar":"System Classpath","/opt/spark/jars/json-1.8.jar":"System Classpath","/opt/spark/jars/commons-crypto-1.1.0.jar":"System Classpath","/opt/spark/jars/arrow-vector-12.0.1.jar":"System Classpath","/opt/spark/jars/stax-api-1.0.1.jar":"System Classpath","/opt/spark/jars/hive-beeline-2.3.9.jar":"System Classpath","/opt/spark/jars/spark-kubernetes_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/spark-kvstore_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/datanucleus-rdbms-4.1.19.jar":"System Classpath","/opt/spark/jars/httpclient-4.5.14.jar":"System Classpath","/opt/spark/jars/commons-io-2.16.1.jar":"System Classpath","/opt/spark/jars/okhttp-3.12.12.jar":"System Classpath","/opt/spark/jars/commons-logging-1.1.3.jar":"System Classpath","/opt/spark/jars/datanucleus-core-4.1.17.jar":"System Classpath","/opt/spark/jars/jline-2.14.6.jar":"System Classpath","/opt/spark/jars/kryo-shaded-4.0.2.jar":"System Classpath","/opt/spark/jars/spark-sql_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/commons-cli-1.5.0.jar":"System Classpath","/opt/spark/jars/jackson-module-scala_2.12-2.15.2.jar":"System Classpath","/opt/spark/jars/spark-sketch_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/HikariCP-2.5.1.jar":"System Classpath","/opt/spark/jars/dropwizard-metrics-hadoop-metrics2-reporter-0.1.2.jar":"System Classpath","/opt/spark/jars/json4s-scalap_2.12-3.7.0-M11.jar":"System Classpath","/opt/spark/jars/chill-java-0.10.0.jar":"System Classpath","/opt/spark/jars/arpack_combined_all-0.1.jar":"System Classpath","/opt/spark/jars/scala-parser-combinators_2.12-2.3.0.jar":"System Classpath","/opt/spark/jars/zookeeper-3.6.3.jar":"System Classpath","/opt/spark/jars/hive-llap-common-2.3.9.jar":"System Classpath","/opt/spark/jars/okio-1.15.0.jar":"System Classpath","/opt/spark/jars/hive-jdbc-2.3.9.jar":"System Classpath","/opt/spark/jars/netty-resolver-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/jpam-1.1.jar":"System Classpath","/opt/spark/jars/avro-1.11.2.jar":"System Classpath","/opt/spark/jars/opencsv-2.3.jar":"System Classpath","/opt/spark/jars/netty-transport-native-unix-common-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/parquet-hadoop-1.13.1.jar":"System Classpath","/opt/spark/jars/curator-framework-2.13.0.jar":"System Classpath","/opt/spark/jars/jackson-core-asl-1.9.13.jar":"System Classpath","/opt/spark/jars/jackson-dataformat-yaml-2.15.2.jar":"System Classpath","/opt/spark/jars/arrow-memory-netty-12.0.1.jar":"System Classpath","/opt/spark/jars/stream-2.9.6.jar":"System Classpath","/opt/spark/jars/hive-cli-2.3.9.jar":"System Classpath","/opt/spark/jars/delta-storage-3.2.0.jar":"System Classpath","/opt/spark/jars/kubernetes-model-events-6.7.2.jar":"System Classpath","/opt/spark/jars/jackson-datatype-jsr310-2.15.2.jar":"System Classpath","/opt/spark/jars/avro-ipc-1.11.2.jar":"System Classpath","/opt/spark/jars/rocksdbjni-8.3.2.jar":"System Classpath","/opt/spark/jars/kubernetes-model-node-6.7.2.jar":"System Classpath","/opt/spark/jars/commons-compiler-3.1.9.jar":"System Classpath","/opt/spark/jars/ST4-4.0.4.jar":"System Classpath","/opt/spark/jars/log4j-1.2-api-2.20.0.jar":"System Classpath","/opt/spark/jars/datasketches-memory-2.1.0.jar":"System Classpath","/opt/spark/jars/kubernetes-client-api-6.7.2.jar":"System Classpath","/opt/spark/jars/spark-hive-thriftserver_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/arrow-format-12.0.1.jar":"System Classpath","/opt/spark/jars/arpack-3.0.3.jar":"System Classpath","/opt/spark/jars/kubernetes-model-resource-6.7.2.jar":"System Classpath","/opt/spark/jars/osgi-resource-locator-1.0.3.jar":"System Classpath","/opt/spark/jars/zstd-jni-1.5.5-4.jar":"System Classpath","/opt/spark/jars/jakarta.ws.rs-api-2.1.6.jar":"System Classpath","/opt/spark/jars/hadoop-shaded-guava-1.1.1.jar":"System Classpath","/opt/spark/jars/hk2-utils-2.6.1.jar":"System Classpath","/opt/spark/jars/audience-annotations-0.5.0.jar":"System Classpath","/opt/spark/jars/flatbuffers-java-1.12.0.jar":"System Classpath","/opt/spark/jars/janino-3.1.9.jar":"System Classpath","/opt/zeppelin/local-repo/spark/*":"System Classpath","/opt/spark/jars/aircompressor-0.27.jar":"System Classpath","/opt/spark/jars/commons-math3-3.6.1.jar":"System Classpath","/opt/spark/jars/transaction-api-1.1.jar":"System Classpath","/opt/spark/jars/kubernetes-model-storageclass-6.7.2.jar":"System Classpath","/opt/spark/jars/libfb303-0.9.3.jar":"System Classpath","/opt/spark/jars/snappy-java-1.1.10.5.jar":"System Classpath","/opt/spark/jars/hive-shims-common-2.3.9.jar":"System Classpath","/opt/spark/jars/jersey-container-servlet-core-2.40.jar":"System Classpath","/opt/spark/jars/netty-codec-http2-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/pickle-1.3.jar":"System Classpath","/opt/spark/jars/kubernetes-model-flowcontrol-6.7.2.jar":"System Classpath","/opt/spark/jars/threeten-extra-1.7.1.jar":"System Classpath","/opt/spark/jars/kubernetes-model-apps-6.7.2.jar":"System Classpath","/opt/spark/jars/javax.jdo-3.2.0-m3.jar":"System Classpath","/opt/spark/jars/kubernetes-model-extensions-6.7.2.jar":"System Classpath","/opt/spark/jars/netty-codec-socks-4.1.96.Final.jar":"System Classpath","/opt/spark/jars/jersey-container-servlet-2.40.jar":"System Classpath","/opt/spark/jars/zjsonpatch-0.3.0.jar":"System Classpath","/opt/spark/jars/spark-core_2.12-3.5.2.jar":"System Classpath","/opt/spark/jars/commons-collections4-4.4.jar":"System Classpath"}}
{"Event":"SparkListenerApplicationStart","App Name":"spark-shared_process","App ID":"app-20240903115026-0001","Timestamp":1725364224895,"User":"zeppelin"}
{"Event":"SparkListenerExecutorAdded","Timestamp":1725364229294,"Executor ID":"0","Executor Info":{"Host":"172.17.0.9","Total Cores":1,"Log Urls":{"stdout":"http://192.168.1.104:28112/logPage/?appId=app-20240903115026-0001&executorId=0&logType=stdout","stderr":"http://192.168.1.104:28112/logPage/?appId=app-20240903115026-0001&executorId=0&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1725364229293}}
{"Event":"SparkListenerExecutorAdded","Timestamp":1725364229298,"Executor ID":"1","Executor Info":{"Host":"172.17.0.26","Total Cores":1,"Log Urls":{"stdout":"http://192.168.1.104:28111/logPage/?appId=app-20240903115026-0001&executorId=1&logType=stdout","stderr":"http://192.168.1.104:28111/logPage/?appId=app-20240903115026-0001&executorId=1&logType=stderr"},"Attributes":{},"Resources":{},"Resource Profile Id":0,"Registration Time":1725364229298}}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"0","Host":"172.17.0.9","Port":6060},"Maximum Memory":455501414,"Timestamp":1725364229385,"Maximum Onheap Memory":455501414,"Maximum Offheap Memory":0}
{"Event":"SparkListenerBlockManagerAdded","Block Manager ID":{"Executor ID":"1","Host":"172.17.0.26","Port":6060},"Maximum Memory":455501414,"Timestamp":1725364229393,"Maximum Onheap Memory":455501414,"Maximum Offheap Memory":0}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":0,"rootExecutionId":0,"description":"Started by: admin","details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nCollectLimit (3)\n+- * Filter (2)\n   +- Scan text  (1)\n\n\n(1) Scan text \nOutput [1]: [value#0]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports/airports.csv]\nReadSchema: struct<value:string>\n\n(2) Filter [codegen id : 1]\nInput [1]: [value#0]\nCondition : (length(trim(value#0, None)) > 0)\n\n(3) CollectLimit\nInput [1]: [value#0]\nArguments: 1\n\n","sparkPlanInfo":{"nodeName":"CollectLimit","simpleString":"CollectLimit 1","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter (length(trim(value#0, None)) > 0)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan text ","simpleString":"FileScan text [value#0] Batched: false, DataFilters: [(length(trim(value#0, None)) > 0)], Format: Text, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports/airports.csv], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<value:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports/airports.csv]","ReadSchema":"struct<value:string>","Format":"Text","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[(length(trim(value#0, None)) > 0)]"},"metrics":[{"name":"number of output rows","accumulatorId":23,"metricType":"sum"},{"name":"number of files read","accumulatorId":24,"metricType":"sum"},{"name":"metadata time","accumulatorId":25,"metricType":"timing"},{"name":"size of files read","accumulatorId":26,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":22,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":21,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":19,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":13,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":20,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":14,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":11,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":8,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":17,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":10,"metricType":"sum"},{"name":"records read","accumulatorId":7,"metricType":"sum"},{"name":"local bytes read","accumulatorId":5,"metricType":"size"},{"name":"fetch wait time","accumulatorId":6,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":3,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":9,"metricType":"sum"},{"name":"local blocks read","accumulatorId":2,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":12,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":15,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":16,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":4,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":18,"metricType":"size"}]},"time":1725364251430,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":0,"accumUpdates":[[24,1],[25,22],[26,244438]]}
{"Event":"SparkListenerJobStart","Job ID":0,"Submission Time":1725364252747,"Stage Infos":[{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"4\",\"name\":\"mapPartitionsInternal\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"3\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"FileScanRDD","Scope":"{\"id\":\"3\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"0\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[1],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[0],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"0","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364201749_1600833068","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"0","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"4\",\"name\":\"mapPartitionsInternal\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"3\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"FileScanRDD","Scope":"{\"id\":\"3\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"0\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[1],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364252802,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"0","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364201749_1600833068","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"0","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":0,"Stage Attempt ID":0,"Task Info":{"Task ID":0,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364253111,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":0,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":0,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364253111,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364255030,"Failed":false,"Killed":false,"Accumulables":[{"ID":22,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":23,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":27,"Name":"internal.metrics.executorDeserializeTime","Update":375,"Value":375,"Internal":true,"Count Failed Values":true},{"ID":28,"Name":"internal.metrics.executorDeserializeCpuTime","Update":271386211,"Value":271386211,"Internal":true,"Count Failed Values":true},{"ID":29,"Name":"internal.metrics.executorRunTime","Update":1378,"Value":1378,"Internal":true,"Count Failed Values":true},{"ID":30,"Name":"internal.metrics.executorCpuTime","Update":1166348968,"Value":1166348968,"Internal":true,"Count Failed Values":true},{"ID":31,"Name":"internal.metrics.resultSize","Update":1708,"Value":1708,"Internal":true,"Count Failed Values":true},{"ID":32,"Name":"internal.metrics.jvmGCTime","Update":48,"Value":48,"Internal":true,"Count Failed Values":true},{"ID":33,"Name":"internal.metrics.resultSerializationTime","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":58,"Name":"internal.metrics.input.bytesRead","Update":7473,"Value":7473,"Internal":true,"Count Failed Values":true},{"ID":59,"Name":"internal.metrics.input.recordsRead","Update":1,"Value":1,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":375,"Executor Deserialize CPU Time":271386211,"Executor Run Time":1378,"Executor CPU Time":1166348968,"Peak Execution Memory":0,"Result Size":1708,"JVM GC Time":48,"Result Serialization Time":2,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":7473,"Records Read":1},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":0,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":3,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"4\",\"name\":\"mapPartitionsInternal\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[2],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":1,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"3\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[0],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":0,"Name":"FileScanRDD","Scope":"{\"id\":\"3\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":2,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"0\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[1],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364252802,"Completion Time":1725364255045,"Accumulables":[{"ID":22,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":23,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":27,"Name":"internal.metrics.executorDeserializeTime","Value":375,"Internal":true,"Count Failed Values":true},{"ID":28,"Name":"internal.metrics.executorDeserializeCpuTime","Value":271386211,"Internal":true,"Count Failed Values":true},{"ID":29,"Name":"internal.metrics.executorRunTime","Value":1378,"Internal":true,"Count Failed Values":true},{"ID":30,"Name":"internal.metrics.executorCpuTime","Value":1166348968,"Internal":true,"Count Failed Values":true},{"ID":31,"Name":"internal.metrics.resultSize","Value":1708,"Internal":true,"Count Failed Values":true},{"ID":32,"Name":"internal.metrics.jvmGCTime","Value":48,"Internal":true,"Count Failed Values":true},{"ID":33,"Name":"internal.metrics.resultSerializationTime","Value":2,"Internal":true,"Count Failed Values":true},{"ID":58,"Name":"internal.metrics.input.bytesRead","Value":7473,"Internal":true,"Count Failed Values":true},{"ID":59,"Name":"internal.metrics.input.recordsRead","Value":1,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":0,"Completion Time":1725364255055,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":0,"time":1725364255165,"errorMessage":""}
{"Event":"SparkListenerJobStart","Job ID":1,"Submission Time":1725364256003,"Stage Infos":[{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"12\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"11\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"10\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"FileScanRDD","Scope":"{\"id\":\"10\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":7,"Name":"SQLExecutionRDD","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"9\",\"name\":\"DeserializeToObject\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[1],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"13\",\"name\":\"aggregate\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364201749_1600833068","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"12\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"11\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"10\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"FileScanRDD","Scope":"{\"id\":\"10\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":7,"Name":"SQLExecutionRDD","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"9\",\"name\":\"DeserializeToObject\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364256031,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"13\",\"name\":\"aggregate\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364201749_1600833068","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":1,"Stage Attempt ID":0,"Task Info":{"Task ID":1,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364256122,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":1,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":1,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364256122,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364258133,"Failed":false,"Killed":false,"Accumulables":[{"ID":62,"Name":"number of output rows","Update":"3377","Value":"3377","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":66,"Name":"internal.metrics.executorDeserializeTime","Update":535,"Value":535,"Internal":true,"Count Failed Values":true},{"ID":67,"Name":"internal.metrics.executorDeserializeCpuTime","Update":320708334,"Value":320708334,"Internal":true,"Count Failed Values":true},{"ID":68,"Name":"internal.metrics.executorRunTime","Update":1410,"Value":1410,"Internal":true,"Count Failed Values":true},{"ID":69,"Name":"internal.metrics.executorCpuTime","Update":1189718114,"Value":1189718114,"Internal":true,"Count Failed Values":true},{"ID":70,"Name":"internal.metrics.resultSize","Update":1678,"Value":1678,"Internal":true,"Count Failed Values":true},{"ID":71,"Name":"internal.metrics.jvmGCTime","Update":36,"Value":36,"Internal":true,"Count Failed Values":true},{"ID":72,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":97,"Name":"internal.metrics.input.bytesRead","Update":244438,"Value":244438,"Internal":true,"Count Failed Values":true},{"ID":98,"Name":"internal.metrics.input.recordsRead","Update":3377,"Value":3377,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":92871272,"JVMOffHeapMemory":83522904,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":45901,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":45901,"OffHeapUnifiedMemory":0,"DirectPoolMemory":12601007,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":5,"MinorGCTime":48,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":48},"Task Metrics":{"Executor Deserialize Time":535,"Executor Deserialize CPU Time":320708334,"Executor Run Time":1410,"Executor CPU Time":1189718114,"Peak Execution Memory":0,"Result Size":1678,"JVM GC Time":36,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":244438,"Records Read":3377},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":1,"Stage Attempt ID":0,"Stage Name":"csv at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":9,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"12\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[8],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":8,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"11\",\"name\":\"mapPartitions\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[7],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":5,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"10\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[4],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":4,"Name":"FileScanRDD","Scope":"{\"id\":\"10\",\"name\":\"Scan text \"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":7,"Name":"SQLExecutionRDD","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[6],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":6,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"9\",\"name\":\"DeserializeToObject\"}","Callsite":"csv at NativeMethodAccessorImpl.java:0","Parent IDs":[5],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.csv(DataFrameReader.scala:538)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364256031,"Completion Time":1725364258141,"Accumulables":[{"ID":62,"Name":"number of output rows","Value":"3377","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":66,"Name":"internal.metrics.executorDeserializeTime","Value":535,"Internal":true,"Count Failed Values":true},{"ID":67,"Name":"internal.metrics.executorDeserializeCpuTime","Value":320708334,"Internal":true,"Count Failed Values":true},{"ID":68,"Name":"internal.metrics.executorRunTime","Value":1410,"Internal":true,"Count Failed Values":true},{"ID":69,"Name":"internal.metrics.executorCpuTime","Value":1189718114,"Internal":true,"Count Failed Values":true},{"ID":70,"Name":"internal.metrics.resultSize","Value":1678,"Internal":true,"Count Failed Values":true},{"ID":71,"Name":"internal.metrics.jvmGCTime","Value":36,"Internal":true,"Count Failed Values":true},{"ID":72,"Name":"internal.metrics.resultSerializationTime","Value":1,"Internal":true,"Count Failed Values":true},{"ID":97,"Name":"internal.metrics.input.bytesRead","Value":244438,"Internal":true,"Count Failed Values":true},{"ID":98,"Name":"internal.metrics.input.recordsRead","Value":3377,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":1,"Completion Time":1725364258151,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":1,"rootExecutionId":1,"description":"Started by: admin","details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nCollectLimit (3)\n+- * Project (2)\n   +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput [7]: [iata#17, airport#18, city#19, state#20, country#21, lat#22, long#23]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nReadSchema: struct<iata:string,airport:string,city:string,state:string,country:string,lat:double,long:double>\n\n(2) Project [codegen id : 1]\nOutput [7]: [toprettystring(iata#17, Some(Etc/UTC)) AS toprettystring(iata)#38, toprettystring(airport#18, Some(Etc/UTC)) AS toprettystring(airport)#39, toprettystring(city#19, Some(Etc/UTC)) AS toprettystring(city)#40, toprettystring(state#20, Some(Etc/UTC)) AS toprettystring(state)#41, toprettystring(country#21, Some(Etc/UTC)) AS toprettystring(country)#42, toprettystring(lat#22, Some(Etc/UTC)) AS toprettystring(lat)#43, toprettystring(long#23, Some(Etc/UTC)) AS toprettystring(long)#44]\nInput [7]: [iata#17, airport#18, city#19, state#20, country#21, lat#22, long#23]\n\n(3) CollectLimit\nInput [7]: [toprettystring(iata)#38, toprettystring(airport)#39, toprettystring(city)#40, toprettystring(state)#41, toprettystring(country)#42, toprettystring(lat)#43, toprettystring(long)#44]\nArguments: 6\n\n","sparkPlanInfo":{"nodeName":"CollectLimit","simpleString":"CollectLimit 6","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [toprettystring(iata#17, Some(Etc/UTC)) AS toprettystring(iata)#38, toprettystring(airport#18, Some(Etc/UTC)) AS toprettystring(airport)#39, toprettystring(city#19, Some(Etc/UTC)) AS toprettystring(city)#40, toprettystring(state#20, Some(Etc/UTC)) AS toprettystring(state)#41, toprettystring(country#21, Some(Etc/UTC)) AS toprettystring(country)#42, toprettystring(lat#22, Some(Etc/UTC)) AS toprettystring(lat)#43, toprettystring(long#23, Some(Etc/UTC)) AS toprettystring(long)#44]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [iata#17,airport#18,city#19,state#20,country#21,lat#22,long#23] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<iata:string,airport:string,city:string,state:string,country:string,lat:double,long:double>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<iata:string,airport:string,city:string,state:string,country:string,lat:double,long:double>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":122,"metricType":"sum"},{"name":"number of files read","accumulatorId":123,"metricType":"sum"},{"name":"metadata time","accumulatorId":124,"metricType":"timing"},{"name":"size of files read","accumulatorId":125,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":121,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":119,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":113,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":120,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":114,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":111,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":108,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":117,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":110,"metricType":"sum"},{"name":"records read","accumulatorId":107,"metricType":"sum"},{"name":"local bytes read","accumulatorId":105,"metricType":"size"},{"name":"fetch wait time","accumulatorId":106,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":103,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":109,"metricType":"sum"},{"name":"local blocks read","accumulatorId":102,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":112,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":101,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":115,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":116,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":104,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":118,"metricType":"size"}]},"time":1725364258326,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":1,"accumUpdates":[[123,1],[124,10],[125,244438]]}
{"Event":"SparkListenerJobStart","Job ID":2,"Submission Time":1725364258750,"Stage Infos":[{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":13,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"24\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[12],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":10,"Name":"FileScanRDD","Scope":"{\"id\":\"23\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":11,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"23\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[10],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":12,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[11],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[2],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"1","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364201749_1600833068","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"1","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":13,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"24\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[12],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":10,"Name":"FileScanRDD","Scope":"{\"id\":\"23\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":11,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"23\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[10],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":12,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[11],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364258783,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"1","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364201749_1600833068","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"1","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":2,"Stage Attempt ID":0,"Task Info":{"Task ID":2,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364258875,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":2,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":2,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364258875,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364259268,"Failed":false,"Killed":false,"Accumulables":[{"ID":122,"Name":"number of output rows","Update":"6","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":126,"Name":"internal.metrics.executorDeserializeTime","Update":239,"Value":239,"Internal":true,"Count Failed Values":true},{"ID":127,"Name":"internal.metrics.executorDeserializeCpuTime","Update":19435497,"Value":19435497,"Internal":true,"Count Failed Values":true},{"ID":128,"Name":"internal.metrics.executorRunTime","Update":124,"Value":124,"Internal":true,"Count Failed Values":true},{"ID":129,"Name":"internal.metrics.executorCpuTime","Update":78656336,"Value":78656336,"Internal":true,"Count Failed Values":true},{"ID":130,"Name":"internal.metrics.resultSize","Update":2161,"Value":2161,"Internal":true,"Count Failed Values":true},{"ID":132,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":157,"Name":"internal.metrics.input.bytesRead","Update":3377,"Value":3377,"Internal":true,"Count Failed Values":true},{"ID":158,"Name":"internal.metrics.input.recordsRead","Update":6,"Value":6,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":239,"Executor Deserialize CPU Time":19435497,"Executor Run Time":124,"Executor CPU Time":78656336,"Peak Execution Memory":0,"Result Size":2161,"JVM GC Time":0,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":3377,"Records Read":6},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":2,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":13,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"24\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[12],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":10,"Name":"FileScanRDD","Scope":"{\"id\":\"23\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":11,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"23\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[10],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":12,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"20\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[11],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364258783,"Completion Time":1725364259273,"Accumulables":[{"ID":122,"Name":"number of output rows","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":126,"Name":"internal.metrics.executorDeserializeTime","Value":239,"Internal":true,"Count Failed Values":true},{"ID":127,"Name":"internal.metrics.executorDeserializeCpuTime","Value":19435497,"Internal":true,"Count Failed Values":true},{"ID":128,"Name":"internal.metrics.executorRunTime","Value":124,"Internal":true,"Count Failed Values":true},{"ID":129,"Name":"internal.metrics.executorCpuTime","Value":78656336,"Internal":true,"Count Failed Values":true},{"ID":130,"Name":"internal.metrics.resultSize","Value":2161,"Internal":true,"Count Failed Values":true},{"ID":132,"Name":"internal.metrics.resultSerializationTime","Value":1,"Internal":true,"Count Failed Values":true},{"ID":157,"Name":"internal.metrics.input.bytesRead","Value":3377,"Internal":true,"Count Failed Values":true},{"ID":158,"Name":"internal.metrics.input.recordsRead","Value":6,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":2,"Completion Time":1725364259282,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":1,"time":1725364259404,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":2,"rootExecutionId":2,"description":"Started by: admin","details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (5)\n+- HashAggregate (4)\n   +- Exchange (3)\n      +- HashAggregate (2)\n         +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput: []\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nReadSchema: struct<>\n\n(2) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#78L]\nResults [1]: [count#79L]\n\n(3) Exchange\nInput [1]: [count#79L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=42]\n\n(4) HashAggregate\nInput [1]: [count#79L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#75L]\nResults [1]: [count(1)#75L AS count#76L]\n\n(5) AdaptiveSparkPlan\nOutput [1]: [count#76L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=42]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":195,"metricType":"sum"},{"name":"number of files read","accumulatorId":196,"metricType":"sum"},{"name":"metadata time","accumulatorId":197,"metricType":"timing"},{"name":"size of files read","accumulatorId":198,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":191,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":192,"metricType":"timing"},{"name":"peak memory","accumulatorId":190,"metricType":"size"},{"name":"number of output rows","accumulatorId":189,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":194,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":193,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":187,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":181,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":188,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":182,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":179,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":176,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":185,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":178,"metricType":"sum"},{"name":"records read","accumulatorId":175,"metricType":"sum"},{"name":"local bytes read","accumulatorId":173,"metricType":"size"},{"name":"fetch wait time","accumulatorId":174,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":171,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":177,"metricType":"sum"},{"name":"local blocks read","accumulatorId":170,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":180,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":169,"metricType":"sum"},{"name":"data size","accumulatorId":167,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":183,"metricType":"size"},{"name":"number of partitions","accumulatorId":168,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":184,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":172,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":186,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":163,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":164,"metricType":"timing"},{"name":"peak memory","accumulatorId":162,"metricType":"size"},{"name":"number of output rows","accumulatorId":161,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":166,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":165,"metricType":"average"}]}],"metadata":{},"metrics":[]},"time":1725364260354,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":2,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (9)\n+- == Current Plan ==\n   HashAggregate (5)\n   +- ShuffleQueryStage (4)\n      +- Exchange (3)\n         +- * HashAggregate (2)\n            +- Scan csv  (1)\n+- == Initial Plan ==\n   HashAggregate (8)\n   +- Exchange (7)\n      +- HashAggregate (6)\n         +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput: []\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nReadSchema: struct<>\n\n(2) HashAggregate [codegen id : 1]\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#78L]\nResults [1]: [count#79L]\n\n(3) Exchange\nInput [1]: [count#79L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=50]\n\n(4) ShuffleQueryStage\nOutput [1]: [count#79L]\nArguments: 0\n\n(5) HashAggregate\nInput [1]: [count#79L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#75L]\nResults [1]: [count(1)#75L AS count#76L]\n\n(6) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#78L]\nResults [1]: [count#79L]\n\n(7) Exchange\nInput [1]: [count#79L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=42]\n\n(8) HashAggregate\nInput [1]: [count#79L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#75L]\nResults [1]: [count(1)#75L AS count#76L]\n\n(9) AdaptiveSparkPlan\nOutput [1]: [count#76L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=50]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":195,"metricType":"sum"},{"name":"number of files read","accumulatorId":196,"metricType":"sum"},{"name":"metadata time","accumulatorId":197,"metricType":"timing"},{"name":"size of files read","accumulatorId":198,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":230,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":231,"metricType":"timing"},{"name":"peak memory","accumulatorId":229,"metricType":"size"},{"name":"number of output rows","accumulatorId":228,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":233,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":232,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":227,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":225,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":219,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":226,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":220,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":217,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":214,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":223,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":216,"metricType":"sum"},{"name":"records read","accumulatorId":213,"metricType":"sum"},{"name":"local bytes read","accumulatorId":211,"metricType":"size"},{"name":"fetch wait time","accumulatorId":212,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":209,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":215,"metricType":"sum"},{"name":"local blocks read","accumulatorId":208,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":218,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":207,"metricType":"sum"},{"name":"data size","accumulatorId":205,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":221,"metricType":"size"},{"name":"number of partitions","accumulatorId":206,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":222,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":210,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":224,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":201,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":202,"metricType":"timing"},{"name":"peak memory","accumulatorId":200,"metricType":"size"},{"name":"number of output rows","accumulatorId":199,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":204,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":203,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":2,"accumUpdates":[[196,1],[197,6],[198,244438]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":2,"accumUpdates":[[206,1]]}
{"Event":"SparkListenerJobStart","Job ID":3,"Submission Time":1725364260929,"Stage Infos":[{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"29\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"33\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"FileScanRDD","Scope":"{\"id\":\"33\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"30\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[3],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"29\",\"name\":\"Exchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"2","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364231058_1423350575","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"2","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"29\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"33\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"FileScanRDD","Scope":"{\"id\":\"33\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"30\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364260954,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"29\",\"name\":\"Exchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"2","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364231058_1423350575","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"2","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":3,"Stage Attempt ID":0,"Task Info":{"Task ID":3,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364261029,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":3,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":3,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364261029,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364261365,"Failed":false,"Killed":false,"Accumulables":[{"ID":195,"Name":"number of output rows","Update":"3376","Value":"3376","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":205,"Name":"data size","Update":"16","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":224,"Name":"shuffle bytes written","Update":"59","Value":"59","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":225,"Name":"shuffle records written","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":226,"Name":"shuffle write time","Update":"4478122","Value":"4478122","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":227,"Name":"duration","Update":"118","Value":"118","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":228,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":231,"Name":"time in aggregation build","Update":"106","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":234,"Name":"internal.metrics.executorDeserializeTime","Update":58,"Value":58,"Internal":true,"Count Failed Values":true},{"ID":235,"Name":"internal.metrics.executorDeserializeCpuTime","Update":38492498,"Value":38492498,"Internal":true,"Count Failed Values":true},{"ID":236,"Name":"internal.metrics.executorRunTime","Update":226,"Value":226,"Internal":true,"Count Failed Values":true},{"ID":237,"Name":"internal.metrics.executorCpuTime","Update":99073212,"Value":99073212,"Internal":true,"Count Failed Values":true},{"ID":238,"Name":"internal.metrics.resultSize","Update":1922,"Value":1922,"Internal":true,"Count Failed Values":true},{"ID":262,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":59,"Value":59,"Internal":true,"Count Failed Values":true},{"ID":263,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":264,"Name":"internal.metrics.shuffle.write.writeTime","Update":4478122,"Value":4478122,"Internal":true,"Count Failed Values":true},{"ID":265,"Name":"internal.metrics.input.bytesRead","Update":244438,"Value":244438,"Internal":true,"Count Failed Values":true},{"ID":266,"Name":"internal.metrics.input.recordsRead","Update":3376,"Value":3376,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":58,"Executor Deserialize CPU Time":38492498,"Executor Run Time":226,"Executor CPU Time":99073212,"Peak Execution Memory":0,"Result Size":1922,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":59,"Shuffle Write Time":4478122,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":244438,"Records Read":3376},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":3,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"29\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"33\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"FileScanRDD","Scope":"{\"id\":\"33\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"30\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364260954,"Completion Time":1725364261375,"Accumulables":[{"ID":195,"Name":"number of output rows","Value":"3376","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":205,"Name":"data size","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":224,"Name":"shuffle bytes written","Value":"59","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":225,"Name":"shuffle records written","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":226,"Name":"shuffle write time","Value":"4478122","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":227,"Name":"duration","Value":"118","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":228,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":231,"Name":"time in aggregation build","Value":"106","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":234,"Name":"internal.metrics.executorDeserializeTime","Value":58,"Internal":true,"Count Failed Values":true},{"ID":235,"Name":"internal.metrics.executorDeserializeCpuTime","Value":38492498,"Internal":true,"Count Failed Values":true},{"ID":236,"Name":"internal.metrics.executorRunTime","Value":226,"Internal":true,"Count Failed Values":true},{"ID":237,"Name":"internal.metrics.executorCpuTime","Value":99073212,"Internal":true,"Count Failed Values":true},{"ID":238,"Name":"internal.metrics.resultSize","Value":1922,"Internal":true,"Count Failed Values":true},{"ID":262,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":59,"Internal":true,"Count Failed Values":true},{"ID":263,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":1,"Internal":true,"Count Failed Values":true},{"ID":264,"Name":"internal.metrics.shuffle.write.writeTime","Value":4478122,"Internal":true,"Count Failed Values":true},{"ID":265,"Name":"internal.metrics.input.bytesRead","Value":244438,"Internal":true,"Count Failed Values":true},{"ID":266,"Name":"internal.metrics.input.recordsRead","Value":3376,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":3,"Completion Time":1725364261396,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":2,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (9)\n+- == Final Plan ==\n   * HashAggregate (5)\n   +- ShuffleQueryStage (4), Statistics(sizeInBytes=16.0 B, rowCount=1)\n      +- Exchange (3)\n         +- * HashAggregate (2)\n            +- Scan csv  (1)\n+- == Initial Plan ==\n   HashAggregate (8)\n   +- Exchange (7)\n      +- HashAggregate (6)\n         +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput: []\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nReadSchema: struct<>\n\n(2) HashAggregate [codegen id : 1]\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#78L]\nResults [1]: [count#79L]\n\n(3) Exchange\nInput [1]: [count#79L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=50]\n\n(4) ShuffleQueryStage\nOutput [1]: [count#79L]\nArguments: 0\n\n(5) HashAggregate [codegen id : 2]\nInput [1]: [count#79L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#75L]\nResults [1]: [count(1)#75L AS count#76L]\n\n(6) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#78L]\nResults [1]: [count#79L]\n\n(7) Exchange\nInput [1]: [count#79L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=42]\n\n(8) HashAggregate\nInput [1]: [count#79L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#75L]\nResults [1]: [count(1)#75L AS count#76L]\n\n(9) AdaptiveSparkPlan\nOutput [1]: [count#76L]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=50]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":195,"metricType":"sum"},{"name":"number of files read","accumulatorId":196,"metricType":"sum"},{"name":"metadata time","accumulatorId":197,"metricType":"timing"},{"name":"size of files read","accumulatorId":198,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":230,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":231,"metricType":"timing"},{"name":"peak memory","accumulatorId":229,"metricType":"size"},{"name":"number of output rows","accumulatorId":228,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":233,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":232,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":227,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":225,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":219,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":226,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":220,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":217,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":214,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":223,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":216,"metricType":"sum"},{"name":"records read","accumulatorId":213,"metricType":"sum"},{"name":"local bytes read","accumulatorId":211,"metricType":"size"},{"name":"fetch wait time","accumulatorId":212,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":209,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":215,"metricType":"sum"},{"name":"local blocks read","accumulatorId":208,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":218,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":207,"metricType":"sum"},{"name":"data size","accumulatorId":205,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":221,"metricType":"size"},{"name":"number of partitions","accumulatorId":206,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":222,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":210,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":224,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":272,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":273,"metricType":"timing"},{"name":"peak memory","accumulatorId":271,"metricType":"size"},{"name":"number of output rows","accumulatorId":270,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":275,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":274,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":269,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":4,"Submission Time":1725364261578,"Stage Infos":[{"Stage ID":5,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":20,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"39\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[19],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"38\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[17],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":19,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"34\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[18],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[4],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":4,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":17,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"29\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[16],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":15,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"33\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[14],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":14,"Name":"FileScanRDD","Scope":"{\"id\":\"33\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":16,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"30\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[15],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[5,4],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"40\",\"name\":\"collect\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"2","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364231058_1423350575","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"2","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":5,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":20,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"39\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[19],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"38\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[17],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":19,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"34\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[18],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[4],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364261614,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"40\",\"name\":\"collect\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"2","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364231058_1423350575","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"2","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":5,"Stage Attempt ID":0,"Task Info":{"Task ID":4,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364261735,"Executor ID":"1","Host":"172.17.0.26","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":5,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":4,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364261735,"Executor ID":"1","Host":"172.17.0.26","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364262153,"Failed":false,"Killed":false,"Accumulables":[{"ID":208,"Name":"local blocks read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":211,"Name":"local bytes read","Update":"59","Value":"59","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":212,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":213,"Name":"records read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"duration","Update":"4","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":270,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"time in aggregation build","Update":"3","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"internal.metrics.executorDeserializeTime","Update":146,"Value":146,"Internal":true,"Count Failed Values":true},{"ID":277,"Name":"internal.metrics.executorDeserializeCpuTime","Update":13126332,"Value":13126332,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.executorRunTime","Update":224,"Value":224,"Internal":true,"Count Failed Values":true},{"ID":279,"Name":"internal.metrics.executorCpuTime","Update":66644833,"Value":66644833,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.resultSize","Update":3995,"Value":3995,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":59,"Value":59,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.read.recordsRead","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":300,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":301,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":302,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":303,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":146,"Executor Deserialize CPU Time":13126332,"Executor Run Time":224,"Executor CPU Time":66644833,"Peak Execution Memory":0,"Result Size":3995,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":59,"Total Records Read":1,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":5,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":20,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"39\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[19],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":18,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"38\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[17],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":19,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"34\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[18],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[4],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364261614,"Completion Time":1725364262170,"Accumulables":[{"ID":208,"Name":"local blocks read","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":211,"Name":"local bytes read","Value":"59","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":212,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":213,"Name":"records read","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":269,"Name":"duration","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":270,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":273,"Name":"time in aggregation build","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":276,"Name":"internal.metrics.executorDeserializeTime","Value":146,"Internal":true,"Count Failed Values":true},{"ID":277,"Name":"internal.metrics.executorDeserializeCpuTime","Value":13126332,"Internal":true,"Count Failed Values":true},{"ID":278,"Name":"internal.metrics.executorRunTime","Value":224,"Internal":true,"Count Failed Values":true},{"ID":279,"Name":"internal.metrics.executorCpuTime","Value":66644833,"Internal":true,"Count Failed Values":true},{"ID":280,"Name":"internal.metrics.resultSize","Value":3995,"Internal":true,"Count Failed Values":true},{"ID":287,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":288,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":1,"Internal":true,"Count Failed Values":true},{"ID":289,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":290,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":291,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":59,"Internal":true,"Count Failed Values":true},{"ID":292,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":293,"Name":"internal.metrics.shuffle.read.recordsRead","Value":1,"Internal":true,"Count Failed Values":true},{"ID":294,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":295,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":296,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":297,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":298,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":299,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":300,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":301,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":302,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":303,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":4,"Completion Time":1725364262175,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":2,"time":1725364262217,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":3,"rootExecutionId":3,"description":"Started by: admin","details":"org.apache.spark.sql.DataFrameWriter.json(DataFrameWriter.scala:774)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nExecute InsertIntoHadoopFsRelationCommand (3)\n+- WriteFiles (2)\n   +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput [7]: [iata#17, airport#18, city#19, state#20, country#21, lat#22, long#23]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nReadSchema: struct<iata:string,airport:string,city:string,state:string,country:string,lat:double,long:double>\n\n(2) WriteFiles\nInput [7]: [iata#17, airport#18, city#19, state#20, country#21, lat#22, long#23]\n\n(3) Execute InsertIntoHadoopFsRelationCommand\nInput: []\nArguments: s3a://flight-bucket/refined/airports, false, JSON, [path=s3a://flight-bucket/refined/airports], ErrorIfExists, [iata, airport, city, state, country, lat, long]\n\n","sparkPlanInfo":{"nodeName":"Execute InsertIntoHadoopFsRelationCommand","simpleString":"Execute InsertIntoHadoopFsRelationCommand s3a://flight-bucket/refined/airports, false, JSON, [path=s3a://flight-bucket/refined/airports], ErrorIfExists, [iata, airport, city, state, country, lat, long]","children":[{"nodeName":"WriteFiles","simpleString":"WriteFiles","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [iata#17,airport#18,city#19,state#20,country#21,lat#22,long#23] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<iata:string,airport:string,city:string,state:string,country:string,lat:double,long:double>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<iata:string,airport:string,city:string,state:string,country:string,lat:double,long:double>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":317,"metricType":"sum"},{"name":"number of files read","accumulatorId":318,"metricType":"sum"},{"name":"metadata time","accumulatorId":319,"metricType":"timing"},{"name":"size of files read","accumulatorId":320,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"task commit time","accumulatorId":315,"metricType":"timing"},{"name":"number of written files","accumulatorId":311,"metricType":"sum"},{"name":"job commit time","accumulatorId":316,"metricType":"timing"},{"name":"number of output rows","accumulatorId":313,"metricType":"sum"},{"name":"number of dynamic part","accumulatorId":314,"metricType":"sum"},{"name":"written output","accumulatorId":312,"metricType":"size"}]},"time":1725364262603,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":3,"accumUpdates":[[318,1],[319,22],[320,244438]]}
{"Event":"SparkListenerJobStart","Job ID":5,"Submission Time":1725364263508,"Stage Infos":[{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"json at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"48\",\"name\":\"WriteFiles\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"49\",\"name\":\"Scan csv \"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"FileScanRDD","Scope":"{\"id\":\"49\",\"name\":\"Scan csv \"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.json(DataFrameWriter.scala:774)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[6],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"3","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364236808_1152331944","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"3","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"json at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"48\",\"name\":\"WriteFiles\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"49\",\"name\":\"Scan csv \"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"FileScanRDD","Scope":"{\"id\":\"49\",\"name\":\"Scan csv \"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.json(DataFrameWriter.scala:774)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364263526,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"3","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364236808_1152331944","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"3","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":6,"Stage Attempt ID":0,"Task Info":{"Task ID":5,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364263655,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":6,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":5,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364263655,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364264268,"Failed":false,"Killed":false,"Accumulables":[{"ID":315,"Name":"task commit time","Update":"150","Value":"150","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":317,"Name":"number of output rows","Update":"3376","Value":"3376","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":321,"Name":"internal.metrics.executorDeserializeTime","Update":73,"Value":73,"Internal":true,"Count Failed Values":true},{"ID":322,"Name":"internal.metrics.executorDeserializeCpuTime","Update":37089375,"Value":37089375,"Internal":true,"Count Failed Values":true},{"ID":323,"Name":"internal.metrics.executorRunTime","Update":491,"Value":491,"Internal":true,"Count Failed Values":true},{"ID":324,"Name":"internal.metrics.executorCpuTime","Update":211823584,"Value":211823584,"Internal":true,"Count Failed Values":true},{"ID":325,"Name":"internal.metrics.resultSize","Update":2502,"Value":2502,"Internal":true,"Count Failed Values":true},{"ID":327,"Name":"internal.metrics.resultSerializationTime","Update":5,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.input.bytesRead","Update":244438,"Value":244438,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.input.recordsRead","Update":3376,"Value":3376,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.output.bytesWritten","Update":436863,"Value":436863,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.output.recordsWritten","Update":3376,"Value":3376,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":73,"Executor Deserialize CPU Time":37089375,"Executor Run Time":491,"Executor CPU Time":211823584,"Peak Execution Memory":0,"Result Size":2502,"JVM GC Time":0,"Result Serialization Time":5,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":244438,"Records Read":3376},"Output Metrics":{"Bytes Written":436863,"Records Written":3376},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":6,"Stage Attempt ID":0,"Stage Name":"json at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":23,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"48\",\"name\":\"WriteFiles\"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[22],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":22,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"49\",\"name\":\"Scan csv \"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[21],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":21,"Name":"FileScanRDD","Scope":"{\"id\":\"49\",\"name\":\"Scan csv \"}","Callsite":"json at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.json(DataFrameWriter.scala:774)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364263526,"Completion Time":1725364264276,"Accumulables":[{"ID":315,"Name":"task commit time","Value":"150","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":317,"Name":"number of output rows","Value":"3376","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":321,"Name":"internal.metrics.executorDeserializeTime","Value":73,"Internal":true,"Count Failed Values":true},{"ID":322,"Name":"internal.metrics.executorDeserializeCpuTime","Value":37089375,"Internal":true,"Count Failed Values":true},{"ID":323,"Name":"internal.metrics.executorRunTime","Value":491,"Internal":true,"Count Failed Values":true},{"ID":324,"Name":"internal.metrics.executorCpuTime","Value":211823584,"Internal":true,"Count Failed Values":true},{"ID":325,"Name":"internal.metrics.resultSize","Value":2502,"Internal":true,"Count Failed Values":true},{"ID":327,"Name":"internal.metrics.resultSerializationTime","Value":5,"Internal":true,"Count Failed Values":true},{"ID":352,"Name":"internal.metrics.input.bytesRead","Value":244438,"Internal":true,"Count Failed Values":true},{"ID":353,"Name":"internal.metrics.input.recordsRead","Value":3376,"Internal":true,"Count Failed Values":true},{"ID":354,"Name":"internal.metrics.output.bytesWritten","Value":436863,"Internal":true,"Count Failed Values":true},{"ID":355,"Name":"internal.metrics.output.recordsWritten","Value":3376,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":5,"Completion Time":1725364264282,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":3,"accumUpdates":[[311,1],[316,495],[313,3376],[314,0],[312,436863]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":3,"time":1725364264805,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":4,"rootExecutionId":4,"description":"Started by: admin","details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nCollectLimit (3)\n+- * Project (2)\n   +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput [29]: [year#94, month#95, dayOfMonth#96, dayOfWeek#97, depTime#98, crsDepTime#99, arrTime#100, crsArrTime#101, uniqueCarrier#102, flightNum#103, tailNum#104, actualElapsedTime#105, crsElapsedTime#106, airTime#107, arrDelay#108, depDelay#109, origin#110, destination#111, distance#112, taxiIn#113, taxiOut#114, cancelled#115, cancellationCode#116, diverted#117, carrierDelay#118, weatherDelay#119, nasDelay#120, securityDelay#121, lateAircraftDelay#122]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/flights]\nReadSchema: struct<year:int,month:int,dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>\n\n(2) Project [codegen id : 1]\nOutput [29]: [toprettystring(year#94, Some(Etc/UTC)) AS toprettystring(year)#181, toprettystring(month#95, Some(Etc/UTC)) AS toprettystring(month)#182, toprettystring(dayOfMonth#96, Some(Etc/UTC)) AS toprettystring(dayOfMonth)#183, toprettystring(dayOfWeek#97, Some(Etc/UTC)) AS toprettystring(dayOfWeek)#184, toprettystring(depTime#98, Some(Etc/UTC)) AS toprettystring(depTime)#185, toprettystring(crsDepTime#99, Some(Etc/UTC)) AS toprettystring(crsDepTime)#186, toprettystring(arrTime#100, Some(Etc/UTC)) AS toprettystring(arrTime)#187, toprettystring(crsArrTime#101, Some(Etc/UTC)) AS toprettystring(crsArrTime)#188, toprettystring(uniqueCarrier#102, Some(Etc/UTC)) AS toprettystring(uniqueCarrier)#189, toprettystring(flightNum#103, Some(Etc/UTC)) AS toprettystring(flightNum)#190, toprettystring(tailNum#104, Some(Etc/UTC)) AS toprettystring(tailNum)#191, toprettystring(actualElapsedTime#105, Some(Etc/UTC)) AS toprettystring(actualElapsedTime)#192, toprettystring(crsElapsedTime#106, Some(Etc/UTC)) AS toprettystring(crsElapsedTime)#193, toprettystring(airTime#107, Some(Etc/UTC)) AS toprettystring(airTime)#194, toprettystring(arrDelay#108, Some(Etc/UTC)) AS toprettystring(arrDelay)#195, toprettystring(depDelay#109, Some(Etc/UTC)) AS toprettystring(depDelay)#196, toprettystring(origin#110, Some(Etc/UTC)) AS toprettystring(origin)#197, toprettystring(destination#111, Some(Etc/UTC)) AS toprettystring(destination)#198, toprettystring(distance#112, Some(Etc/UTC)) AS toprettystring(distance)#199, toprettystring(taxiIn#113, Some(Etc/UTC)) AS toprettystring(taxiIn)#200, toprettystring(taxiOut#114, Some(Etc/UTC)) AS toprettystring(taxiOut)#201, toprettystring(cancelled#115, Some(Etc/UTC)) AS toprettystring(cancelled)#202, toprettystring(cancellationCode#116, Some(Etc/UTC)) AS toprettystring(cancellationCode)#203, toprettystring(diverted#117, Some(Etc/UTC)) AS toprettystring(diverted)#204, toprettystring(carrierDelay#118, Some(Etc/UTC)) AS toprettystring(carrierDelay)#205, toprettystring(weatherDelay#119, Some(Etc/UTC)) AS toprettystring(weatherDelay)#206, toprettystring(nasDelay#120, Some(Etc/UTC)) AS toprettystring(nasDelay)#207, toprettystring(securityDelay#121, Some(Etc/UTC)) AS toprettystring(securityDelay)#208, toprettystring(lateAircraftDelay#122, Some(Etc/UTC)) AS toprettystring(lateAircraftDelay)#209]\nInput [29]: [year#94, month#95, dayOfMonth#96, dayOfWeek#97, depTime#98, crsDepTime#99, arrTime#100, crsArrTime#101, uniqueCarrier#102, flightNum#103, tailNum#104, actualElapsedTime#105, crsElapsedTime#106, airTime#107, arrDelay#108, depDelay#109, origin#110, destination#111, distance#112, taxiIn#113, taxiOut#114, cancelled#115, cancellationCode#116, diverted#117, carrierDelay#118, weatherDelay#119, nasDelay#120, securityDelay#121, lateAircraftDelay#122]\n\n(3) CollectLimit\nInput [29]: [toprettystring(year)#181, toprettystring(month)#182, toprettystring(dayOfMonth)#183, toprettystring(dayOfWeek)#184, toprettystring(depTime)#185, toprettystring(crsDepTime)#186, toprettystring(arrTime)#187, toprettystring(crsArrTime)#188, toprettystring(uniqueCarrier)#189, toprettystring(flightNum)#190, toprettystring(tailNum)#191, toprettystring(actualElapsedTime)#192, toprettystring(crsElapsedTime)#193, toprettystring(airTime)#194, toprettystring(arrDelay)#195, toprettystring(depDelay)#196, toprettystring(origin)#197, toprettystring(destination)#198, toprettystring(distance)#199, toprettystring(taxiIn)#200, toprettystring(taxiOut)#201, toprettystring(cancelled)#202, toprettystring(cancellationCode)#203, toprettystring(diverted)#204, toprettystring(carrierDelay)#205, toprettystring(weatherDelay)#206, toprettystring(nasDelay)#207, toprettystring(securityDelay)#208, toprettystring(lateAircraftDelay)#209]\nArguments: 6\n\n","sparkPlanInfo":{"nodeName":"CollectLimit","simpleString":"CollectLimit 6","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [toprettystring(year#94, Some(Etc/UTC)) AS toprettystring(year)#181, toprettystring(month#95, Some(Etc/UTC)) AS toprettystring(month)#182, toprettystring(dayOfMonth#96, Some(Etc/UTC)) AS toprettystring(dayOfMonth)#183, toprettystring(dayOfWeek#97, Some(Etc/UTC)) AS toprettystring(dayOfWeek)#184, toprettystring(depTime#98, Some(Etc/UTC)) AS toprettystring(depTime)#185, toprettystring(crsDepTime#99, Some(Etc/UTC)) AS toprettystring(crsDepTime)#186, toprettystring(arrTime#100, Some(Etc/UTC)) AS toprettystring(arrTime)#187, toprettystring(crsArrTime#101, Some(Etc/UTC)) AS toprettystring(crsArrTime)#188, toprettystring(uniqueCarrier#102, Some(Etc/UTC)) AS toprettystring(uniqueCarrier)#189, toprettystring(flightNum#103, Some(Etc/UTC)) AS toprettystring(flightNum)#190, toprettystring(tailNum#104, Some(Etc/UTC)) AS toprettystring(tailNum)#191, toprettystring(actualElapsedTime#105, Some(Etc/UTC)) AS toprettystring(actualElapsedTime)#192, toprettystring(crsElapsedTime#106, Some(Etc/UTC)) AS toprettystring(crsElapsedTime)#193, toprettystring(airTime#107, Some(Etc/UTC)) AS toprettystring(airTime)#194, toprettystring(arrDelay#108, Some(Etc/UTC)) AS toprettystring(arrDelay)#195, toprettystring(depDelay#109, Some(Etc/UTC)) AS toprettystring(depDelay)#196, toprettystring(origin#110, Some(Etc/UTC)) AS toprettystring(origin)#197, toprettystring(destination#111, Some(Etc/UTC)) AS toprettystring(destination)#198, toprettystring(distance#112, Some(Etc/UTC)) AS toprettystring(distance)#199, toprettystring(taxiIn#113, Some(Etc/UTC)) AS toprettystring(taxiIn)#200, toprettystring(taxiOut#114, Some(Etc/UTC)) AS toprettystring(taxiOut)#201, toprettystring(cancelled#115, Some(Etc/UTC)) AS toprettystring(cancelled)#202, toprettystring(cancellationCode#116, Some(Etc/UTC)) AS toprettystring(cancellationCode)#203, toprettystring(diverted#117, Some(Etc/UTC)) AS toprettystring(diverted)#204, ... 5 more fields]","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [year#94,month#95,dayOfMonth#96,dayOfWeek#97,depTime#98,crsDepTime#99,arrTime#100,crsArrTime#101,uniqueCarrier#102,flightNum#103,tailNum#104,actualElapsedTime#105,crsElapsedTime#106,airTime#107,arrDelay#108,depDelay#109,origin#110,destination#111,distance#112,taxiIn#113,taxiOut#114,cancelled#115,cancellationCode#116,diverted#117,... 5 more fields] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<year:int,month:int,dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crs...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/flights]","ReadSchema":"struct<year:int,month:int,dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":377,"metricType":"sum"},{"name":"number of files read","accumulatorId":378,"metricType":"sum"},{"name":"metadata time","accumulatorId":379,"metricType":"timing"},{"name":"size of files read","accumulatorId":380,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":376,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":374,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":368,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":375,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":369,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":366,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":363,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":372,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":365,"metricType":"sum"},{"name":"records read","accumulatorId":362,"metricType":"sum"},{"name":"local bytes read","accumulatorId":360,"metricType":"size"},{"name":"fetch wait time","accumulatorId":361,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":358,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":364,"metricType":"sum"},{"name":"local blocks read","accumulatorId":357,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":367,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":356,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":370,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":371,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":359,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":373,"metricType":"size"}]},"time":1725364294897,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":4,"accumUpdates":[[378,5],[379,2],[380,4952708]]}
{"Event":"SparkListenerJobStart","Job ID":6,"Submission Time":1725364295322,"Stage Infos":[{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"57\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"FileScanRDD","Scope":"{\"id\":\"56\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"56\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[7],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"4","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364279940_1907115774","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"4","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"57\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"FileScanRDD","Scope":"{\"id\":\"56\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"56\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364295338,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"4","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364279940_1907115774","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"4","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":7,"Stage Attempt ID":0,"Task Info":{"Task ID":6,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364295658,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":7,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":6,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364295658,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364296046,"Failed":false,"Killed":false,"Accumulables":[{"ID":377,"Name":"number of output rows","Update":"6","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":381,"Name":"internal.metrics.executorDeserializeTime","Update":32,"Value":32,"Internal":true,"Count Failed Values":true},{"ID":382,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9725166,"Value":9725166,"Internal":true,"Count Failed Values":true},{"ID":383,"Name":"internal.metrics.executorRunTime","Update":302,"Value":302,"Internal":true,"Count Failed Values":true},{"ID":384,"Name":"internal.metrics.executorCpuTime","Update":184043745,"Value":184043745,"Internal":true,"Count Failed Values":true},{"ID":385,"Name":"internal.metrics.resultSize","Update":2383,"Value":2383,"Internal":true,"Count Failed Values":true},{"ID":412,"Name":"internal.metrics.input.bytesRead","Update":7470,"Value":7470,"Internal":true,"Count Failed Values":true},{"ID":413,"Name":"internal.metrics.input.recordsRead","Update":6,"Value":6,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":32,"Executor Deserialize CPU Time":9725166,"Executor Run Time":302,"Executor CPU Time":184043745,"Peak Execution Memory":0,"Result Size":2383,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":7470,"Records Read":6},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":7,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":27,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"57\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[26],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":26,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"53\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[25],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":24,"Name":"FileScanRDD","Scope":"{\"id\":\"56\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":25,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"56\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[24],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364295338,"Completion Time":1725364296054,"Accumulables":[{"ID":377,"Name":"number of output rows","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":381,"Name":"internal.metrics.executorDeserializeTime","Value":32,"Internal":true,"Count Failed Values":true},{"ID":382,"Name":"internal.metrics.executorDeserializeCpuTime","Value":9725166,"Internal":true,"Count Failed Values":true},{"ID":383,"Name":"internal.metrics.executorRunTime","Value":302,"Internal":true,"Count Failed Values":true},{"ID":384,"Name":"internal.metrics.executorCpuTime","Value":184043745,"Internal":true,"Count Failed Values":true},{"ID":385,"Name":"internal.metrics.resultSize","Value":2383,"Internal":true,"Count Failed Values":true},{"ID":412,"Name":"internal.metrics.input.bytesRead","Value":7470,"Internal":true,"Count Failed Values":true},{"ID":413,"Name":"internal.metrics.input.recordsRead","Value":6,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":6,"Completion Time":1725364296060,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":4,"time":1725364296263,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":5,"rootExecutionId":5,"description":"Started by: admin","details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (5)\n+- HashAggregate (4)\n   +- Exchange (3)\n      +- HashAggregate (2)\n         +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput: []\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/flights]\nReadSchema: struct<>\n\n(2) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#331L]\nResults [1]: [count#332L]\n\n(3) Exchange\nInput [1]: [count#332L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=96]\n\n(4) HashAggregate\nInput [1]: [count#332L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#328L]\nResults [1]: [count(1)#328L AS count#329L]\n\n(5) AdaptiveSparkPlan\nOutput [1]: [count#329L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=96]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/flights]","ReadSchema":"struct<>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":450,"metricType":"sum"},{"name":"number of files read","accumulatorId":451,"metricType":"sum"},{"name":"metadata time","accumulatorId":452,"metricType":"timing"},{"name":"size of files read","accumulatorId":453,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":446,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":447,"metricType":"timing"},{"name":"peak memory","accumulatorId":445,"metricType":"size"},{"name":"number of output rows","accumulatorId":444,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":449,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":448,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":442,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":436,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":443,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":437,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":434,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":431,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":440,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":433,"metricType":"sum"},{"name":"records read","accumulatorId":430,"metricType":"sum"},{"name":"local bytes read","accumulatorId":428,"metricType":"size"},{"name":"fetch wait time","accumulatorId":429,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":426,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":432,"metricType":"sum"},{"name":"local blocks read","accumulatorId":425,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":435,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":424,"metricType":"sum"},{"name":"data size","accumulatorId":422,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":438,"metricType":"size"},{"name":"number of partitions","accumulatorId":423,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":439,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":427,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":441,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":418,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":419,"metricType":"timing"},{"name":"peak memory","accumulatorId":417,"metricType":"size"},{"name":"number of output rows","accumulatorId":416,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":421,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":420,"metricType":"average"}]}],"metadata":{},"metrics":[]},"time":1725364309243,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":5,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (9)\n+- == Current Plan ==\n   HashAggregate (5)\n   +- ShuffleQueryStage (4)\n      +- Exchange (3)\n         +- * HashAggregate (2)\n            +- Scan csv  (1)\n+- == Initial Plan ==\n   HashAggregate (8)\n   +- Exchange (7)\n      +- HashAggregate (6)\n         +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput: []\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/flights]\nReadSchema: struct<>\n\n(2) HashAggregate [codegen id : 1]\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#331L]\nResults [1]: [count#332L]\n\n(3) Exchange\nInput [1]: [count#332L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=104]\n\n(4) ShuffleQueryStage\nOutput [1]: [count#332L]\nArguments: 0\n\n(5) HashAggregate\nInput [1]: [count#332L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#328L]\nResults [1]: [count(1)#328L AS count#329L]\n\n(6) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#331L]\nResults [1]: [count#332L]\n\n(7) Exchange\nInput [1]: [count#332L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=96]\n\n(8) HashAggregate\nInput [1]: [count#332L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#328L]\nResults [1]: [count(1)#328L AS count#329L]\n\n(9) AdaptiveSparkPlan\nOutput [1]: [count#329L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=104]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/flights]","ReadSchema":"struct<>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":450,"metricType":"sum"},{"name":"number of files read","accumulatorId":451,"metricType":"sum"},{"name":"metadata time","accumulatorId":452,"metricType":"timing"},{"name":"size of files read","accumulatorId":453,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":485,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":486,"metricType":"timing"},{"name":"peak memory","accumulatorId":484,"metricType":"size"},{"name":"number of output rows","accumulatorId":483,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":488,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":487,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":482,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":480,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":474,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":481,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":475,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":472,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":469,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":478,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":471,"metricType":"sum"},{"name":"records read","accumulatorId":468,"metricType":"sum"},{"name":"local bytes read","accumulatorId":466,"metricType":"size"},{"name":"fetch wait time","accumulatorId":467,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":464,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":470,"metricType":"sum"},{"name":"local blocks read","accumulatorId":463,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":473,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":462,"metricType":"sum"},{"name":"data size","accumulatorId":460,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":476,"metricType":"size"},{"name":"number of partitions","accumulatorId":461,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":477,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":465,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":479,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":456,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":457,"metricType":"timing"},{"name":"peak memory","accumulatorId":455,"metricType":"size"},{"name":"number of output rows","accumulatorId":454,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":459,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":458,"metricType":"average"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":5,"accumUpdates":[[451,5],[452,6],[453,4952708]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":5,"accumUpdates":[[461,1]]}
{"Event":"SparkListenerJobStart","Job ID":7,"Submission Time":1725364309366,"Stage Infos":[{"Stage ID":8,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"62\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"66\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"FileScanRDD","Scope":"{\"id\":\"66\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"63\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[8],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"62\",\"name\":\"Exchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"5","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364301208_1859744035","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"5","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":8,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"62\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"66\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"FileScanRDD","Scope":"{\"id\":\"66\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"63\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364309516,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"62\",\"name\":\"Exchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"5","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364301208_1859744035","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"5","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":8,"Stage Attempt ID":0,"Task Info":{"Task ID":7,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364309608,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":8,"Stage Attempt ID":0,"Task Info":{"Task ID":8,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1725364309615,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":8,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":8,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1725364309615,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364309989,"Failed":false,"Killed":false,"Accumulables":[{"ID":450,"Name":"number of output rows","Update":"20000","Value":"20000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":460,"Name":"data size","Update":"16","Value":"16","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":479,"Name":"shuffle bytes written","Update":"59","Value":"59","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":480,"Name":"shuffle records written","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":481,"Name":"shuffle write time","Update":"656182","Value":"656182","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":482,"Name":"duration","Update":"100","Value":"100","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":483,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"time in aggregation build","Update":"99","Value":"99","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"internal.metrics.executorDeserializeTime","Update":190,"Value":190,"Internal":true,"Count Failed Values":true},{"ID":490,"Name":"internal.metrics.executorDeserializeCpuTime","Update":14481667,"Value":14481667,"Internal":true,"Count Failed Values":true},{"ID":491,"Name":"internal.metrics.executorRunTime","Update":106,"Value":106,"Internal":true,"Count Failed Values":true},{"ID":492,"Name":"internal.metrics.executorCpuTime","Update":58337374,"Value":58337374,"Internal":true,"Count Failed Values":true},{"ID":493,"Name":"internal.metrics.resultSize","Update":1922,"Value":1922,"Internal":true,"Count Failed Values":true},{"ID":517,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":59,"Value":59,"Internal":true,"Count Failed Values":true},{"ID":518,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":519,"Name":"internal.metrics.shuffle.write.writeTime","Update":656182,"Value":656182,"Internal":true,"Count Failed Values":true},{"ID":520,"Name":"internal.metrics.input.bytesRead","Update":1962326,"Value":1962326,"Internal":true,"Count Failed Values":true},{"ID":521,"Name":"internal.metrics.input.recordsRead","Update":20000,"Value":20000,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":190,"Executor Deserialize CPU Time":14481667,"Executor Run Time":106,"Executor CPU Time":58337374,"Peak Execution Memory":0,"Result Size":1922,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":59,"Shuffle Write Time":656182,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":1962326,"Records Read":20000},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":8,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":7,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364309608,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364310096,"Failed":false,"Killed":false,"Accumulables":[{"ID":450,"Name":"number of output rows","Update":"30000","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":460,"Name":"data size","Update":"16","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":479,"Name":"shuffle bytes written","Update":"59","Value":"118","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":480,"Name":"shuffle records written","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":481,"Name":"shuffle write time","Update":"7041985","Value":"7698167","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":482,"Name":"duration","Update":"180","Value":"280","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":483,"Name":"number of output rows","Update":"1","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"time in aggregation build","Update":"164","Value":"263","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"internal.metrics.executorDeserializeTime","Update":215,"Value":405,"Internal":true,"Count Failed Values":true},{"ID":490,"Name":"internal.metrics.executorDeserializeCpuTime","Update":27037586,"Value":41519253,"Internal":true,"Count Failed Values":true},{"ID":491,"Name":"internal.metrics.executorRunTime","Update":225,"Value":331,"Internal":true,"Count Failed Values":true},{"ID":492,"Name":"internal.metrics.executorCpuTime","Update":113003418,"Value":171340792,"Internal":true,"Count Failed Values":true},{"ID":493,"Name":"internal.metrics.resultSize","Update":2007,"Value":3929,"Internal":true,"Count Failed Values":true},{"ID":494,"Name":"internal.metrics.jvmGCTime","Update":7,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":495,"Name":"internal.metrics.resultSerializationTime","Update":8,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":517,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":59,"Value":118,"Internal":true,"Count Failed Values":true},{"ID":518,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":1,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":519,"Name":"internal.metrics.shuffle.write.writeTime","Update":7041985,"Value":7698167,"Internal":true,"Count Failed Values":true},{"ID":520,"Name":"internal.metrics.input.bytesRead","Update":2990382,"Value":4952708,"Internal":true,"Count Failed Values":true},{"ID":521,"Name":"internal.metrics.input.recordsRead","Update":30000,"Value":50000,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":215,"Executor Deserialize CPU Time":27037586,"Executor Run Time":225,"Executor CPU Time":113003418,"Peak Execution Memory":0,"Result Size":2007,"JVM GC Time":7,"Result Serialization Time":8,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":59,"Shuffle Write Time":7041985,"Shuffle Records Written":1},"Input Metrics":{"Bytes Read":2990382,"Records Read":30000},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":8,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"62\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"66\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"FileScanRDD","Scope":"{\"id\":\"66\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"63\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364309516,"Completion Time":1725364310098,"Accumulables":[{"ID":450,"Name":"number of output rows","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":460,"Name":"data size","Value":"32","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":479,"Name":"shuffle bytes written","Value":"118","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":480,"Name":"shuffle records written","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":481,"Name":"shuffle write time","Value":"7698167","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":482,"Name":"duration","Value":"280","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":483,"Name":"number of output rows","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":486,"Name":"time in aggregation build","Value":"263","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":489,"Name":"internal.metrics.executorDeserializeTime","Value":405,"Internal":true,"Count Failed Values":true},{"ID":490,"Name":"internal.metrics.executorDeserializeCpuTime","Value":41519253,"Internal":true,"Count Failed Values":true},{"ID":491,"Name":"internal.metrics.executorRunTime","Value":331,"Internal":true,"Count Failed Values":true},{"ID":492,"Name":"internal.metrics.executorCpuTime","Value":171340792,"Internal":true,"Count Failed Values":true},{"ID":493,"Name":"internal.metrics.resultSize","Value":3929,"Internal":true,"Count Failed Values":true},{"ID":494,"Name":"internal.metrics.jvmGCTime","Value":7,"Internal":true,"Count Failed Values":true},{"ID":495,"Name":"internal.metrics.resultSerializationTime","Value":8,"Internal":true,"Count Failed Values":true},{"ID":517,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":118,"Internal":true,"Count Failed Values":true},{"ID":518,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":2,"Internal":true,"Count Failed Values":true},{"ID":519,"Name":"internal.metrics.shuffle.write.writeTime","Value":7698167,"Internal":true,"Count Failed Values":true},{"ID":520,"Name":"internal.metrics.input.bytesRead","Value":4952708,"Internal":true,"Count Failed Values":true},{"ID":521,"Name":"internal.metrics.input.recordsRead","Value":50000,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":7,"Completion Time":1725364310110,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":5,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (9)\n+- == Final Plan ==\n   * HashAggregate (5)\n   +- ShuffleQueryStage (4), Statistics(sizeInBytes=32.0 B, rowCount=2)\n      +- Exchange (3)\n         +- * HashAggregate (2)\n            +- Scan csv  (1)\n+- == Initial Plan ==\n   HashAggregate (8)\n   +- Exchange (7)\n      +- HashAggregate (6)\n         +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput: []\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/flights]\nReadSchema: struct<>\n\n(2) HashAggregate [codegen id : 1]\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#331L]\nResults [1]: [count#332L]\n\n(3) Exchange\nInput [1]: [count#332L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=104]\n\n(4) ShuffleQueryStage\nOutput [1]: [count#332L]\nArguments: 0\n\n(5) HashAggregate [codegen id : 2]\nInput [1]: [count#332L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#328L]\nResults [1]: [count(1)#328L AS count#329L]\n\n(6) HashAggregate\nInput: []\nKeys: []\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#331L]\nResults [1]: [count#332L]\n\n(7) Exchange\nInput [1]: [count#332L]\nArguments: SinglePartition, ENSURE_REQUIREMENTS, [plan_id=96]\n\n(8) HashAggregate\nInput [1]: [count#332L]\nKeys: []\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#328L]\nResults [1]: [count(1)#328L AS count#329L]\n\n(9) AdaptiveSparkPlan\nOutput [1]: [count#329L]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange SinglePartition, ENSURE_REQUIREMENTS, [plan_id=104]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[], functions=[partial_count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/flights]","ReadSchema":"struct<>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":450,"metricType":"sum"},{"name":"number of files read","accumulatorId":451,"metricType":"sum"},{"name":"metadata time","accumulatorId":452,"metricType":"timing"},{"name":"size of files read","accumulatorId":453,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":485,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":486,"metricType":"timing"},{"name":"peak memory","accumulatorId":484,"metricType":"size"},{"name":"number of output rows","accumulatorId":483,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":488,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":487,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":482,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":480,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":474,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":481,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":475,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":472,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":469,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":478,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":471,"metricType":"sum"},{"name":"records read","accumulatorId":468,"metricType":"sum"},{"name":"local bytes read","accumulatorId":466,"metricType":"size"},{"name":"fetch wait time","accumulatorId":467,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":464,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":470,"metricType":"sum"},{"name":"local blocks read","accumulatorId":463,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":473,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":462,"metricType":"sum"},{"name":"data size","accumulatorId":460,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":476,"metricType":"size"},{"name":"number of partitions","accumulatorId":461,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":477,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":465,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":479,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":527,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":528,"metricType":"timing"},{"name":"peak memory","accumulatorId":526,"metricType":"size"},{"name":"number of output rows","accumulatorId":525,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":530,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":529,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":524,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"SparkListenerJobStart","Job ID":8,"Submission Time":1725364310186,"Stage Infos":[{"Stage ID":9,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":31,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"62\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[30],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":29,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"66\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[28],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":28,"Name":"FileScanRDD","Scope":"{\"id\":\"66\",\"name\":\"Scan csv \"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":30,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"63\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[29],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":10,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":34,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"72\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":33,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"67\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":32,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"71\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[31],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[9],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[9,10],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"73\",\"name\":\"collect\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"5","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364301208_1859744035","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"5","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":10,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":34,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"72\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":33,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"67\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":32,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"71\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[31],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[9],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364310200,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"73\",\"name\":\"collect\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"5","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364301208_1859744035","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"5","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":10,"Stage Attempt ID":0,"Task Info":{"Task ID":9,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364310291,"Executor ID":"1","Host":"172.17.0.26","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":10,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":9,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364310291,"Executor ID":"1","Host":"172.17.0.26","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364310549,"Failed":false,"Killed":false,"Accumulables":[{"ID":462,"Name":"remote blocks read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":463,"Name":"local blocks read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":464,"Name":"remote bytes read","Update":"59","Value":"59","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":466,"Name":"local bytes read","Update":"59","Value":"59","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":467,"Name":"fetch wait time","Update":"6","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":468,"Name":"records read","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":477,"Name":"remote reqs duration","Update":"12","Value":"12","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":524,"Name":"duration","Update":"7","Value":"7","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":525,"Name":"number of output rows","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":528,"Name":"time in aggregation build","Update":"7","Value":"7","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":531,"Name":"internal.metrics.executorDeserializeTime","Update":22,"Value":22,"Internal":true,"Count Failed Values":true},{"ID":532,"Name":"internal.metrics.executorDeserializeCpuTime","Update":5114582,"Value":5114582,"Internal":true,"Count Failed Values":true},{"ID":533,"Name":"internal.metrics.executorRunTime","Update":38,"Value":38,"Internal":true,"Count Failed Values":true},{"ID":534,"Name":"internal.metrics.executorCpuTime","Update":10422791,"Value":10422791,"Internal":true,"Count Failed Values":true},{"ID":535,"Name":"internal.metrics.resultSize","Update":4081,"Value":4081,"Internal":true,"Count Failed Values":true},{"ID":536,"Name":"internal.metrics.jvmGCTime","Update":12,"Value":12,"Internal":true,"Count Failed Values":true},{"ID":537,"Name":"internal.metrics.resultSerializationTime","Update":12,"Value":12,"Internal":true,"Count Failed Values":true},{"ID":542,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":543,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":544,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":59,"Value":59,"Internal":true,"Count Failed Values":true},{"ID":545,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":546,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":59,"Value":59,"Internal":true,"Count Failed Values":true},{"ID":547,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":548,"Name":"internal.metrics.shuffle.read.recordsRead","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":549,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":550,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":551,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":552,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":553,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":12,"Value":12,"Internal":true,"Count Failed Values":true},{"ID":558,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":22,"Executor Deserialize CPU Time":5114582,"Executor Run Time":38,"Executor CPU Time":10422791,"Peak Execution Memory":0,"Result Size":4081,"JVM GC Time":12,"Result Serialization Time":12,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":1,"Local Blocks Fetched":1,"Fetch Wait Time":6,"Remote Bytes Read":59,"Remote Bytes Read To Disk":0,"Local Bytes Read":59,"Total Records Read":2,"Remote Requests Duration":12,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":10,"Stage Attempt ID":0,"Stage Name":"count at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":34,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"72\",\"name\":\"mapPartitionsInternal\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[33],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":33,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"67\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[32],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":32,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"71\",\"name\":\"Exchange\"}","Callsite":"count at NativeMethodAccessorImpl.java:0","Parent IDs":[31],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[9],"Details":"org.apache.spark.sql.Dataset.count(Dataset.scala:3615)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364310200,"Completion Time":1725364310556,"Accumulables":[{"ID":462,"Name":"remote blocks read","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":463,"Name":"local blocks read","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":464,"Name":"remote bytes read","Value":"59","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":466,"Name":"local bytes read","Value":"59","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":467,"Name":"fetch wait time","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":468,"Name":"records read","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":477,"Name":"remote reqs duration","Value":"12","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":524,"Name":"duration","Value":"7","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":525,"Name":"number of output rows","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":528,"Name":"time in aggregation build","Value":"7","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":531,"Name":"internal.metrics.executorDeserializeTime","Value":22,"Internal":true,"Count Failed Values":true},{"ID":532,"Name":"internal.metrics.executorDeserializeCpuTime","Value":5114582,"Internal":true,"Count Failed Values":true},{"ID":533,"Name":"internal.metrics.executorRunTime","Value":38,"Internal":true,"Count Failed Values":true},{"ID":534,"Name":"internal.metrics.executorCpuTime","Value":10422791,"Internal":true,"Count Failed Values":true},{"ID":535,"Name":"internal.metrics.resultSize","Value":4081,"Internal":true,"Count Failed Values":true},{"ID":536,"Name":"internal.metrics.jvmGCTime","Value":12,"Internal":true,"Count Failed Values":true},{"ID":537,"Name":"internal.metrics.resultSerializationTime","Value":12,"Internal":true,"Count Failed Values":true},{"ID":542,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":1,"Internal":true,"Count Failed Values":true},{"ID":543,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":1,"Internal":true,"Count Failed Values":true},{"ID":544,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":59,"Internal":true,"Count Failed Values":true},{"ID":545,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":546,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":59,"Internal":true,"Count Failed Values":true},{"ID":547,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":6,"Internal":true,"Count Failed Values":true},{"ID":548,"Name":"internal.metrics.shuffle.read.recordsRead","Value":2,"Internal":true,"Count Failed Values":true},{"ID":549,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":550,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":551,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":552,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":553,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":554,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":555,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":556,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":557,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":12,"Internal":true,"Count Failed Values":true},{"ID":558,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":8,"Completion Time":1725364310693,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":5,"time":1725364310750,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":6,"rootExecutionId":6,"description":"Started by: admin","details":"org.apache.spark.sql.DataFrameWriter.parquet(DataFrameWriter.scala:792)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nExecute InsertIntoHadoopFsRelationCommand (4)\n+- WriteFiles (3)\n   +- * Sort (2)\n      +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput [29]: [year#94, month#95, dayOfMonth#96, dayOfWeek#97, depTime#98, crsDepTime#99, arrTime#100, crsArrTime#101, uniqueCarrier#102, flightNum#103, tailNum#104, actualElapsedTime#105, crsElapsedTime#106, airTime#107, arrDelay#108, depDelay#109, origin#110, destination#111, distance#112, taxiIn#113, taxiOut#114, cancelled#115, cancellationCode#116, diverted#117, carrierDelay#118, weatherDelay#119, nasDelay#120, securityDelay#121, lateAircraftDelay#122]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/flights]\nReadSchema: struct<year:int,month:int,dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>\n\n(2) Sort [codegen id : 1]\nInput [29]: [year#94, month#95, dayOfMonth#96, dayOfWeek#97, depTime#98, crsDepTime#99, arrTime#100, crsArrTime#101, uniqueCarrier#102, flightNum#103, tailNum#104, actualElapsedTime#105, crsElapsedTime#106, airTime#107, arrDelay#108, depDelay#109, origin#110, destination#111, distance#112, taxiIn#113, taxiOut#114, cancelled#115, cancellationCode#116, diverted#117, carrierDelay#118, weatherDelay#119, nasDelay#120, securityDelay#121, lateAircraftDelay#122]\nArguments: [year#94 ASC NULLS FIRST, month#95 ASC NULLS FIRST], false, 0\n\n(3) WriteFiles\nInput [29]: [year#94, month#95, dayOfMonth#96, dayOfWeek#97, depTime#98, crsDepTime#99, arrTime#100, crsArrTime#101, uniqueCarrier#102, flightNum#103, tailNum#104, actualElapsedTime#105, crsElapsedTime#106, airTime#107, arrDelay#108, depDelay#109, origin#110, destination#111, distance#112, taxiIn#113, taxiOut#114, cancelled#115, cancellationCode#116, diverted#117, carrierDelay#118, weatherDelay#119, nasDelay#120, securityDelay#121, lateAircraftDelay#122]\n\n(4) Execute InsertIntoHadoopFsRelationCommand\nInput: []\nArguments: s3a://flight-bucket/refined/flights, false, [year#94, month#95], Parquet, [__partition_columns=[\"year\",\"month\"], path=s3a://flight-bucket/refined/flights], ErrorIfExists, [year, month, dayOfMonth, dayOfWeek, depTime, crsDepTime, arrTime, crsArrTime, uniqueCarrier, flightNum, tailNum, actualElapsedTime, crsElapsedTime, airTime, arrDelay, depDelay, origin, destination, distance, taxiIn, taxiOut, cancelled, cancellationCode, diverted, ... 5 more fields]\n\n","sparkPlanInfo":{"nodeName":"Execute InsertIntoHadoopFsRelationCommand","simpleString":"Execute InsertIntoHadoopFsRelationCommand s3a://flight-bucket/refined/flights, false, [year#94, month#95], Parquet, [__partition_columns=[\"year\",\"month\"], path=s3a://flight-bucket/refined/flights], ErrorIfExists, [year, month, dayOfMonth, dayOfWeek, depTime, crsDepTime, arrTime, crsArrTime, uniqueCarrier, flightNum, tailNum, actualElapsedTime, crsElapsedTime, airTime, arrDelay, depDelay, origin, destination, distance, taxiIn, taxiOut, cancelled, cancellationCode, diverted, ... 5 more fields]","children":[{"nodeName":"WriteFiles","simpleString":"WriteFiles","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Sort","simpleString":"Sort [year#94 ASC NULLS FIRST, month#95 ASC NULLS FIRST], false, 0","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [year#94,month#95,dayOfMonth#96,dayOfWeek#97,depTime#98,crsDepTime#99,arrTime#100,crsArrTime#101,uniqueCarrier#102,flightNum#103,tailNum#104,actualElapsedTime#105,crsElapsedTime#106,airTime#107,arrDelay#108,depDelay#109,origin#110,destination#111,distance#112,taxiIn#113,taxiOut#114,cancelled#115,cancellationCode#116,diverted#117,... 5 more fields] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<year:int,month:int,dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crs...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/flights]","ReadSchema":"struct<year:int,month:int,dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":576,"metricType":"sum"},{"name":"number of files read","accumulatorId":577,"metricType":"sum"},{"name":"metadata time","accumulatorId":578,"metricType":"timing"},{"name":"size of files read","accumulatorId":579,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":573,"metricType":"timing"},{"name":"peak memory","accumulatorId":574,"metricType":"size"},{"name":"spill size","accumulatorId":575,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":572,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"task commit time","accumulatorId":570,"metricType":"timing"},{"name":"number of written files","accumulatorId":566,"metricType":"sum"},{"name":"job commit time","accumulatorId":571,"metricType":"timing"},{"name":"number of output rows","accumulatorId":568,"metricType":"sum"},{"name":"number of dynamic part","accumulatorId":569,"metricType":"sum"},{"name":"written output","accumulatorId":567,"metricType":"size"}]},"time":1725364316535,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":6,"accumUpdates":[[577,5],[578,3],[579,4952708]]}
{"Event":"SparkListenerJobStart","Job ID":9,"Submission Time":1725364317254,"Stage Infos":[{"Stage ID":11,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":38,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"81\",\"name\":\"WriteFiles\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[37],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":35,"Name":"FileScanRDD","Scope":"{\"id\":\"85\",\"name\":\"Scan csv \"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":37,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"82\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[36],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":36,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"85\",\"name\":\"Scan csv \"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[35],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.parquet(DataFrameWriter.scala:792)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[11],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"6","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364308924_253059310","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"6","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":11,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":38,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"81\",\"name\":\"WriteFiles\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[37],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":35,"Name":"FileScanRDD","Scope":"{\"id\":\"85\",\"name\":\"Scan csv \"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":37,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"82\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[36],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":36,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"85\",\"name\":\"Scan csv \"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[35],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.parquet(DataFrameWriter.scala:792)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364317296,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"6","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364308924_253059310","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"6","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":11,"Stage Attempt ID":0,"Task Info":{"Task ID":10,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364317420,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":11,"Stage Attempt ID":0,"Task Info":{"Task ID":11,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1725364317421,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":11,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":10,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364317420,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364319341,"Failed":false,"Killed":false,"Accumulables":[{"ID":570,"Name":"task commit time","Update":"98","Value":"98","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":572,"Name":"duration","Update":"1229","Value":"1229","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":573,"Name":"sort time","Update":"11","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":574,"Name":"peak memory","Update":"17825776","Value":"17825776","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":575,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":576,"Name":"number of output rows","Update":"30000","Value":"30000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":580,"Name":"internal.metrics.executorDeserializeTime","Update":86,"Value":86,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.executorDeserializeCpuTime","Update":32131207,"Value":32131207,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.executorRunTime","Update":1765,"Value":1765,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.executorCpuTime","Update":1170032832,"Value":1170032832,"Internal":true,"Count Failed Values":true},{"ID":584,"Name":"internal.metrics.resultSize","Update":3340,"Value":3340,"Internal":true,"Count Failed Values":true},{"ID":585,"Name":"internal.metrics.jvmGCTime","Update":41,"Value":41,"Internal":true,"Count Failed Values":true},{"ID":586,"Name":"internal.metrics.resultSerializationTime","Update":8,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":589,"Name":"internal.metrics.peakExecutionMemory","Update":17825776,"Value":17825776,"Internal":true,"Count Failed Values":true},{"ID":611,"Name":"internal.metrics.input.bytesRead","Update":2990382,"Value":2990382,"Internal":true,"Count Failed Values":true},{"ID":612,"Name":"internal.metrics.input.recordsRead","Update":30000,"Value":30000,"Internal":true,"Count Failed Values":true},{"ID":613,"Name":"internal.metrics.output.bytesWritten","Update":461116,"Value":461116,"Internal":true,"Count Failed Values":true},{"ID":614,"Name":"internal.metrics.output.recordsWritten","Update":30000,"Value":30000,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":86,"Executor Deserialize CPU Time":32131207,"Executor Run Time":1765,"Executor CPU Time":1170032832,"Peak Execution Memory":17825776,"Result Size":3340,"JVM GC Time":41,"Result Serialization Time":8,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":2990382,"Records Read":30000},"Output Metrics":{"Bytes Written":461116,"Records Written":30000},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":11,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":11,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1725364317421,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364319390,"Failed":false,"Killed":false,"Accumulables":[{"ID":570,"Name":"task commit time","Update":"134","Value":"232","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":572,"Name":"duration","Update":"1269","Value":"2498","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":573,"Name":"sort time","Update":"10","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":574,"Name":"peak memory","Update":"17301488","Value":"35127264","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":575,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":576,"Name":"number of output rows","Update":"20000","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":580,"Name":"internal.metrics.executorDeserializeTime","Update":110,"Value":196,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.executorDeserializeCpuTime","Update":64506414,"Value":96637621,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.executorRunTime","Update":1831,"Value":3596,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.executorCpuTime","Update":1176660248,"Value":2346693080,"Internal":true,"Count Failed Values":true},{"ID":584,"Name":"internal.metrics.resultSize","Update":3340,"Value":6680,"Internal":true,"Count Failed Values":true},{"ID":585,"Name":"internal.metrics.jvmGCTime","Update":38,"Value":79,"Internal":true,"Count Failed Values":true},{"ID":586,"Name":"internal.metrics.resultSerializationTime","Update":8,"Value":16,"Internal":true,"Count Failed Values":true},{"ID":589,"Name":"internal.metrics.peakExecutionMemory","Update":17301488,"Value":35127264,"Internal":true,"Count Failed Values":true},{"ID":611,"Name":"internal.metrics.input.bytesRead","Update":1962326,"Value":4952708,"Internal":true,"Count Failed Values":true},{"ID":612,"Name":"internal.metrics.input.recordsRead","Update":20000,"Value":50000,"Internal":true,"Count Failed Values":true},{"ID":613,"Name":"internal.metrics.output.bytesWritten","Update":377251,"Value":838367,"Internal":true,"Count Failed Values":true},{"ID":614,"Name":"internal.metrics.output.recordsWritten","Update":20000,"Value":50000,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":110,"Executor Deserialize CPU Time":64506414,"Executor Run Time":1831,"Executor CPU Time":1176660248,"Peak Execution Memory":17301488,"Result Size":3340,"JVM GC Time":38,"Result Serialization Time":8,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":1962326,"Records Read":20000},"Output Metrics":{"Bytes Written":377251,"Records Written":20000},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":11,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":38,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"81\",\"name\":\"WriteFiles\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[37],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":35,"Name":"FileScanRDD","Scope":"{\"id\":\"85\",\"name\":\"Scan csv \"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":37,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"82\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[36],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":36,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"85\",\"name\":\"Scan csv \"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[35],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.parquet(DataFrameWriter.scala:792)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364317296,"Completion Time":1725364319394,"Accumulables":[{"ID":570,"Name":"task commit time","Value":"232","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":572,"Name":"duration","Value":"2498","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":573,"Name":"sort time","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":574,"Name":"peak memory","Value":"35127264","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":575,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":576,"Name":"number of output rows","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":580,"Name":"internal.metrics.executorDeserializeTime","Value":196,"Internal":true,"Count Failed Values":true},{"ID":581,"Name":"internal.metrics.executorDeserializeCpuTime","Value":96637621,"Internal":true,"Count Failed Values":true},{"ID":582,"Name":"internal.metrics.executorRunTime","Value":3596,"Internal":true,"Count Failed Values":true},{"ID":583,"Name":"internal.metrics.executorCpuTime","Value":2346693080,"Internal":true,"Count Failed Values":true},{"ID":584,"Name":"internal.metrics.resultSize","Value":6680,"Internal":true,"Count Failed Values":true},{"ID":585,"Name":"internal.metrics.jvmGCTime","Value":79,"Internal":true,"Count Failed Values":true},{"ID":586,"Name":"internal.metrics.resultSerializationTime","Value":16,"Internal":true,"Count Failed Values":true},{"ID":589,"Name":"internal.metrics.peakExecutionMemory","Value":35127264,"Internal":true,"Count Failed Values":true},{"ID":611,"Name":"internal.metrics.input.bytesRead","Value":4952708,"Internal":true,"Count Failed Values":true},{"ID":612,"Name":"internal.metrics.input.recordsRead","Value":50000,"Internal":true,"Count Failed Values":true},{"ID":613,"Name":"internal.metrics.output.bytesWritten","Value":838367,"Internal":true,"Count Failed Values":true},{"ID":614,"Name":"internal.metrics.output.recordsWritten","Value":50000,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":9,"Completion Time":1725364319398,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":6,"accumUpdates":[[566,2],[571,446],[568,50000],[569,2],[567,838367]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":6,"time":1725364319866,"errorMessage":""}
{"Event":"SparkListenerJobStart","Job ID":10,"Submission Time":1725364330185,"Stage Infos":[{"Stage ID":12,"Stage Attempt ID":0,"Stage Name":"load at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"91\",\"name\":\"mapPartitions\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"90\",\"name\":\"parallelize\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:186)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[12],"Properties":{"spark.rdd.scope":"{\"id\":\"92\",\"name\":\"collect\"}","spark.job.interruptOnCancel":"false","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364316141_1960094936","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":12,"Stage Attempt ID":0,"Stage Name":"load at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"91\",\"name\":\"mapPartitions\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"90\",\"name\":\"parallelize\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:186)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364330196,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.rdd.scope":"{\"id\":\"92\",\"name\":\"collect\"}","spark.job.interruptOnCancel":"false","resource.executor.cores":"1","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364316141_1960094936","spark.rdd.scope.noOverride":"true"}}
{"Event":"SparkListenerTaskStart","Stage ID":12,"Stage Attempt ID":0,"Task Info":{"Task ID":12,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364330297,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":12,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":12,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364330297,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364330533,"Failed":false,"Killed":false,"Accumulables":[{"ID":615,"Name":"internal.metrics.executorDeserializeTime","Update":44,"Value":44,"Internal":true,"Count Failed Values":true},{"ID":616,"Name":"internal.metrics.executorDeserializeCpuTime","Update":17581374,"Value":17581374,"Internal":true,"Count Failed Values":true},{"ID":617,"Name":"internal.metrics.executorRunTime","Update":49,"Value":49,"Internal":true,"Count Failed Values":true},{"ID":618,"Name":"internal.metrics.executorCpuTime","Update":9207667,"Value":9207667,"Internal":true,"Count Failed Values":true},{"ID":619,"Name":"internal.metrics.resultSize","Update":2832,"Value":2832,"Internal":true,"Count Failed Values":true},{"ID":620,"Name":"internal.metrics.jvmGCTime","Update":7,"Value":7,"Internal":true,"Count Failed Values":true},{"ID":621,"Name":"internal.metrics.resultSerializationTime","Update":8,"Value":8,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":44,"Executor Deserialize CPU Time":17581374,"Executor Run Time":49,"Executor CPU Time":9207667,"Peak Execution Memory":0,"Result Size":2832,"JVM GC Time":7,"Result Serialization Time":8,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":12,"Stage Attempt ID":0,"Stage Name":"load at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":40,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"91\",\"name\":\"mapPartitions\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[39],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":39,"Name":"ParallelCollectionRDD","Scope":"{\"id\":\"90\",\"name\":\"parallelize\"}","Callsite":"load at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameReader.load(DataFrameReader.scala:186)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364330196,"Completion Time":1725364330554,"Accumulables":[{"ID":615,"Name":"internal.metrics.executorDeserializeTime","Value":44,"Internal":true,"Count Failed Values":true},{"ID":616,"Name":"internal.metrics.executorDeserializeCpuTime","Value":17581374,"Internal":true,"Count Failed Values":true},{"ID":617,"Name":"internal.metrics.executorRunTime","Value":49,"Internal":true,"Count Failed Values":true},{"ID":618,"Name":"internal.metrics.executorCpuTime","Value":9207667,"Internal":true,"Count Failed Values":true},{"ID":619,"Name":"internal.metrics.resultSize","Value":2832,"Internal":true,"Count Failed Values":true},{"ID":620,"Name":"internal.metrics.jvmGCTime","Value":7,"Internal":true,"Count Failed Values":true},{"ID":621,"Name":"internal.metrics.resultSerializationTime","Value":8,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":10,"Completion Time":1725364330562,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":7,"rootExecutionId":7,"description":"Started by: admin","details":"org.apache.spark.sql.Dataset.createOrReplaceTempView(Dataset.scala:3910)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nExecute CreateViewCommand (1)\n   +- CreateViewCommand (2)\n         +- LogicalRelation (3)\n\n\n(1) Execute CreateViewCommand\nOutput: []\n\n(2) CreateViewCommand\nArguments: `flights`, false, true, LocalTempView, true\n\n(3) LogicalRelation\nArguments: parquet, [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, ... 5 more fields], false\n\n","sparkPlanInfo":{"nodeName":"Execute CreateViewCommand","simpleString":"Execute CreateViewCommand","children":[],"metadata":{},"metrics":[]},"time":1725364336320,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":7,"time":1725364336333,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":8,"rootExecutionId":8,"description":"Started by: admin","details":"org.apache.spark.sql.Dataset.createOrReplaceTempView(Dataset.scala:3910)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nExecute CreateViewCommand (1)\n   +- CreateViewCommand (2)\n         +- LogicalRelation (3)\n\n\n(1) Execute CreateViewCommand\nOutput: []\n\n(2) CreateViewCommand\nArguments: `airports`, false, true, LocalTempView, true\n\n(3) LogicalRelation\nArguments: csv, [iata#17, airport#18, city#19, state#20, country#21, lat#22, long#23], false\n\n","sparkPlanInfo":{"nodeName":"Execute CreateViewCommand","simpleString":"Execute CreateViewCommand","children":[],"metadata":{},"metrics":[]},"time":1725364336342,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":8,"time":1725364336343,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":9,"rootExecutionId":9,"description":"Started by: admin","details":"org.apache.spark.sql.SparkSession.sql(SparkSession.scala:659)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nShowTables (1)\n\n\n(1) ShowTables\nOutput [3]: [namespace#449, tableName#450, isTemporary#451]\nArguments: [namespace#449, tableName#450, isTemporary#451], org.apache.spark.sql.delta.catalog.DeltaCatalog@164a57f6, [default]\n\n","sparkPlanInfo":{"nodeName":"ShowTables","simpleString":"ShowTables [namespace#449, tableName#450, isTemporary#451], org.apache.spark.sql.delta.catalog.DeltaCatalog@164a57f6, [default]","children":[],"metadata":{},"metrics":[]},"time":1725364343675,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":9,"time":1725364343792,"errorMessage":"java.lang.NoClassDefFoundError: org/apache/hadoop/hive/conf/HiveConf\n\tat java.base/java.lang.Class.getDeclaredConstructors0(Native Method)\n\tat java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3137)\n\tat java.base/java.lang.Class.getConstructors(Class.java:1943)\n\tat org.apache.spark.sql.hive.client.IsolatedClientLoader.createClient(IsolatedClientLoader.scala:317)\n\tat org.apache.spark.sql.hive.HiveUtils$.newClientForMetadata(HiveUtils.scala:488)\n\tat org.apache.spark.sql.hive.HiveUtils$.newClientForMetadata(HiveUtils.scala:376)\n\tat org.apache.spark.sql.hive.HiveExternalCatalog.client$lzycompute(HiveExternalCatalog.scala:68)\n\tat org.apache.spark.sql.hive.HiveExternalCatalog.client(HiveExternalCatalog.scala:67)\n\tat org.apache.spark.sql.hive.HiveExternalCatalog.$anonfun$databaseExists$1(HiveExternalCatalog.scala:224)\n\tat scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)\n\tat org.apache.spark.sql.hive.HiveExternalCatalog.withClient(HiveExternalCatalog.scala:99)\n\tat org.apache.spark.sql.hive.HiveExternalCatalog.databaseExists(HiveExternalCatalog.scala:224)\n\tat org.apache.spark.sql.internal.SharedState.externalCatalog$lzycompute(SharedState.scala:146)\n\tat org.apache.spark.sql.internal.SharedState.externalCatalog(SharedState.scala:140)\n\tat org.apache.spark.sql.internal.SharedState.globalTempViewManager$lzycompute(SharedState.scala:176)\n\tat org.apache.spark.sql.internal.SharedState.globalTempViewManager(SharedState.scala:174)\n\tat org.apache.spark.sql.hive.HiveSessionStateBuilder.$anonfun$catalog$2(HiveSessionStateBuilder.scala:70)\n\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.globalTempViewManager$lzycompute(SessionCatalog.scala:123)\n\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.globalTempViewManager(SessionCatalog.scala:123)\n\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.listTables(SessionCatalog.scala:1060)\n\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.listTables(SessionCatalog.scala:1046)\n\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.listTables(SessionCatalog.scala:1038)\n\tat org.apache.spark.sql.execution.datasources.v2.V2SessionCatalog.listTables(V2SessionCatalog.scala:65)\n\tat org.apache.spark.sql.connector.catalog.DelegatingCatalogExtension.listTables(DelegatingCatalogExtension.java:68)\n\tat org.apache.spark.sql.execution.datasources.v2.ShowTablesExec.run(ShowTablesExec.scala:40)\n\tat org.apache.spark.sql.execution.datasources.v2.V2CommandExec.result$lzycompute(V2CommandExec.scala:43)\n\tat org.apache.spark.sql.execution.datasources.v2.V2CommandExec.result(V2CommandExec.scala:43)\n\tat org.apache.spark.sql.execution.datasources.v2.V2CommandExec.executeCollect(V2CommandExec.scala:49)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)\n\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)\n\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)\n\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)\n\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)\n\tat org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)\n\tat org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)\n\tat org.apache.spark.sql.Dataset.<init>(Dataset.scala:220)\n\tat org.apache.spark.sql.Dataset$.$anonfun$ofRows$2(Dataset.scala:100)\n\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)\n\tat org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:97)\n\tat org.apache.spark.sql.SparkSession.$anonfun$sql$1(SparkSession.scala:638)\n\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)\n\tat org.apache.spark.sql.SparkSession.sql(SparkSession.scala:629)\n\tat org.apache.spark.sql.SparkSession.sql(SparkSession.scala:659)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.GatewayConnection.run(GatewayConnection.java:238)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: java.lang.ClassNotFoundException: org.apache.hadoop.hive.conf.HiveConf\n\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:476)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:594)\n\tat org.apache.spark.sql.hive.client.IsolatedClientLoader$$anon$1.doLoadClass(IsolatedClientLoader.scala:274)\n\tat org.apache.spark.sql.hive.client.IsolatedClientLoader$$anon$1.loadClass(IsolatedClientLoader.scala:263)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:527)\n\t... 67 more\n"}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":10,"rootExecutionId":10,"description":"Started by: admin","details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nCollectLimit (2)\n+- Scan csv  (1)\n\n\n(1) Scan csv \nOutput [7]: [iata#17, airport#18, city#19, state#20, country#21, lat#22, long#23]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nReadSchema: struct<iata:string,airport:string,city:string,state:string,country:string,lat:double,long:double>\n\n(2) CollectLimit\nInput [7]: [iata#17, airport#18, city#19, state#20, country#21, lat#22, long#23]\nArguments: 1001\n\n","sparkPlanInfo":{"nodeName":"CollectLimit","simpleString":"CollectLimit 1001","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [iata#17,airport#18,city#19,state#20,country#21,lat#22,long#23] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<iata:string,airport:string,city:string,state:string,country:string,lat:double,long:double>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<iata:string,airport:string,city:string,state:string,country:string,lat:double,long:double>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":670,"metricType":"sum"},{"name":"number of files read","accumulatorId":671,"metricType":"sum"},{"name":"metadata time","accumulatorId":672,"metricType":"timing"},{"name":"size of files read","accumulatorId":673,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":668,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":662,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":669,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":663,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":660,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":657,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":666,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":659,"metricType":"sum"},{"name":"records read","accumulatorId":656,"metricType":"sum"},{"name":"local bytes read","accumulatorId":654,"metricType":"size"},{"name":"fetch wait time","accumulatorId":655,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":652,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":658,"metricType":"sum"},{"name":"local blocks read","accumulatorId":651,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":661,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":650,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":664,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":665,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":653,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":667,"metricType":"size"}]},"time":1725364371160,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":10,"accumUpdates":[[671,1],[672,5],[673,244438]]}
{"Event":"SparkListenerJobStart","Job ID":11,"Submission Time":1725364371298,"Stage Infos":[{"Stage ID":13,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"96\",\"name\":\"mapPartitionsInternal\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":41,"Name":"FileScanRDD","Scope":"{\"id\":\"95\",\"name\":\"Scan csv \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"95\",\"name\":\"Scan csv \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[41],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[13],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"10","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364343352_1506853057","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"10","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":13,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"96\",\"name\":\"mapPartitionsInternal\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":41,"Name":"FileScanRDD","Scope":"{\"id\":\"95\",\"name\":\"Scan csv \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"95\",\"name\":\"Scan csv \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[41],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364371310,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"10","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364343352_1506853057","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"10","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":13,"Stage Attempt ID":0,"Task Info":{"Task ID":13,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364371528,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":13,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":13,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364371528,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364371686,"Failed":false,"Killed":false,"Accumulables":[{"ID":670,"Name":"number of output rows","Update":"1001","Value":"1001","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":674,"Name":"internal.metrics.executorDeserializeTime","Update":30,"Value":30,"Internal":true,"Count Failed Values":true},{"ID":675,"Name":"internal.metrics.executorDeserializeCpuTime","Update":7196042,"Value":7196042,"Internal":true,"Count Failed Values":true},{"ID":676,"Name":"internal.metrics.executorRunTime","Update":96,"Value":96,"Internal":true,"Count Failed Values":true},{"ID":677,"Name":"internal.metrics.executorCpuTime","Update":41923080,"Value":41923080,"Internal":true,"Count Failed Values":true},{"ID":678,"Name":"internal.metrics.resultSize","Update":63102,"Value":63102,"Internal":true,"Count Failed Values":true},{"ID":679,"Name":"internal.metrics.jvmGCTime","Update":14,"Value":14,"Internal":true,"Count Failed Values":true},{"ID":705,"Name":"internal.metrics.input.bytesRead","Update":108064,"Value":108064,"Internal":true,"Count Failed Values":true},{"ID":706,"Name":"internal.metrics.input.recordsRead","Update":1001,"Value":1001,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":30,"Executor Deserialize CPU Time":7196042,"Executor Run Time":96,"Executor CPU Time":41923080,"Peak Execution Memory":0,"Result Size":63102,"JVM GC Time":14,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":108064,"Records Read":1001},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":13,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":43,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"96\",\"name\":\"mapPartitionsInternal\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[42],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":41,"Name":"FileScanRDD","Scope":"{\"id\":\"95\",\"name\":\"Scan csv \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":42,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"95\",\"name\":\"Scan csv \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[41],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364371310,"Completion Time":1725364371692,"Accumulables":[{"ID":670,"Name":"number of output rows","Value":"1001","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":674,"Name":"internal.metrics.executorDeserializeTime","Value":30,"Internal":true,"Count Failed Values":true},{"ID":675,"Name":"internal.metrics.executorDeserializeCpuTime","Value":7196042,"Internal":true,"Count Failed Values":true},{"ID":676,"Name":"internal.metrics.executorRunTime","Value":96,"Internal":true,"Count Failed Values":true},{"ID":677,"Name":"internal.metrics.executorCpuTime","Value":41923080,"Internal":true,"Count Failed Values":true},{"ID":678,"Name":"internal.metrics.resultSize","Value":63102,"Internal":true,"Count Failed Values":true},{"ID":679,"Name":"internal.metrics.jvmGCTime","Value":14,"Internal":true,"Count Failed Values":true},{"ID":705,"Name":"internal.metrics.input.bytesRead","Value":108064,"Internal":true,"Count Failed Values":true},{"ID":706,"Name":"internal.metrics.input.recordsRead","Value":1001,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":11,"Completion Time":1725364371700,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":10,"time":1725364371842,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":11,"rootExecutionId":11,"description":"Started by: admin","details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (6)\n+- CollectLimit (5)\n   +- HashAggregate (4)\n      +- Exchange (3)\n         +- HashAggregate (2)\n            +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput [2]: [state#20, country#21]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nReadSchema: struct<state:string,country:string>\n\n(2) HashAggregate\nInput [2]: [state#20, country#21]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#492L]\nResults [3]: [country#21, state#20, count#493L]\n\n(3) Exchange\nInput [3]: [country#21, state#20, count#493L]\nArguments: hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=165]\n\n(4) HashAggregate\nInput [3]: [country#21, state#20, count#493L]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#484L]\nResults [3]: [country#21, state#20, count(1)#484L AS count(1)#485L]\n\n(5) CollectLimit\nInput [3]: [country#21, state#20, count(1)#485L]\nArguments: 1001\n\n(6) AdaptiveSparkPlan\nOutput [3]: [country#21, state#20, count(1)#485L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 1001","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[count(1)])","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=165]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[partial_count(1)])","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [state#20,country#21] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<state:string,country:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<state:string,country:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":763,"metricType":"sum"},{"name":"number of files read","accumulatorId":764,"metricType":"sum"},{"name":"metadata time","accumulatorId":765,"metricType":"timing"},{"name":"size of files read","accumulatorId":766,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":759,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":760,"metricType":"timing"},{"name":"peak memory","accumulatorId":758,"metricType":"size"},{"name":"number of output rows","accumulatorId":757,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":762,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":761,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":755,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":749,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":756,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":750,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":747,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":744,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":753,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":746,"metricType":"sum"},{"name":"records read","accumulatorId":743,"metricType":"sum"},{"name":"local bytes read","accumulatorId":741,"metricType":"size"},{"name":"fetch wait time","accumulatorId":742,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":739,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":745,"metricType":"sum"},{"name":"local blocks read","accumulatorId":738,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":748,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":737,"metricType":"sum"},{"name":"data size","accumulatorId":735,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":751,"metricType":"size"},{"name":"number of partitions","accumulatorId":736,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":752,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":740,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":754,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":731,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":732,"metricType":"timing"},{"name":"peak memory","accumulatorId":730,"metricType":"size"},{"name":"number of output rows","accumulatorId":729,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":734,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":733,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":727,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":721,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":728,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":722,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":719,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":716,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":725,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":718,"metricType":"sum"},{"name":"records read","accumulatorId":715,"metricType":"sum"},{"name":"local bytes read","accumulatorId":713,"metricType":"size"},{"name":"fetch wait time","accumulatorId":714,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":711,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":717,"metricType":"sum"},{"name":"local blocks read","accumulatorId":710,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":720,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":709,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":723,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":724,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":712,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":726,"metricType":"size"}]}],"metadata":{},"metrics":[]},"time":1725364383383,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":11,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (11)\n+- == Current Plan ==\n   CollectLimit (6)\n   +- HashAggregate (5)\n      +- ShuffleQueryStage (4)\n         +- Exchange (3)\n            +- * HashAggregate (2)\n               +- Scan csv  (1)\n+- == Initial Plan ==\n   CollectLimit (10)\n   +- HashAggregate (9)\n      +- Exchange (8)\n         +- HashAggregate (7)\n            +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput [2]: [state#20, country#21]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nReadSchema: struct<state:string,country:string>\n\n(2) HashAggregate [codegen id : 1]\nInput [2]: [state#20, country#21]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#492L]\nResults [3]: [country#21, state#20, count#493L]\n\n(3) Exchange\nInput [3]: [country#21, state#20, count#493L]\nArguments: hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=176]\n\n(4) ShuffleQueryStage\nOutput [3]: [country#21, state#20, count#493L]\nArguments: 0\n\n(5) HashAggregate\nInput [3]: [country#21, state#20, count#493L]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#484L]\nResults [3]: [country#21, state#20, count(1)#484L AS count(1)#485L]\n\n(6) CollectLimit\nInput [3]: [country#21, state#20, count(1)#485L]\nArguments: 1001\n\n(7) HashAggregate\nInput [2]: [state#20, country#21]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#492L]\nResults [3]: [country#21, state#20, count#493L]\n\n(8) Exchange\nInput [3]: [country#21, state#20, count#493L]\nArguments: hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=165]\n\n(9) HashAggregate\nInput [3]: [country#21, state#20, count#493L]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#484L]\nResults [3]: [country#21, state#20, count(1)#484L AS count(1)#485L]\n\n(10) CollectLimit\nInput [3]: [country#21, state#20, count(1)#485L]\nArguments: 1001\n\n(11) AdaptiveSparkPlan\nOutput [3]: [country#21, state#20, count(1)#485L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 1001","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[count(1)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=176]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[partial_count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [state#20,country#21] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<state:string,country:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<state:string,country:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":763,"metricType":"sum"},{"name":"number of files read","accumulatorId":764,"metricType":"sum"},{"name":"metadata time","accumulatorId":765,"metricType":"timing"},{"name":"size of files read","accumulatorId":766,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":818,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":819,"metricType":"timing"},{"name":"peak memory","accumulatorId":817,"metricType":"size"},{"name":"number of output rows","accumulatorId":816,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":821,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":820,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":815,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":813,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":807,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":814,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":808,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":805,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":802,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":811,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":804,"metricType":"sum"},{"name":"records read","accumulatorId":801,"metricType":"sum"},{"name":"local bytes read","accumulatorId":799,"metricType":"size"},{"name":"fetch wait time","accumulatorId":800,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":797,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":803,"metricType":"sum"},{"name":"local blocks read","accumulatorId":796,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":806,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":795,"metricType":"sum"},{"name":"data size","accumulatorId":793,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":809,"metricType":"size"},{"name":"number of partitions","accumulatorId":794,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":810,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":798,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":812,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":789,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":790,"metricType":"timing"},{"name":"peak memory","accumulatorId":788,"metricType":"size"},{"name":"number of output rows","accumulatorId":787,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":792,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":791,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":785,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":779,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":786,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":780,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":777,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":774,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":783,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":776,"metricType":"sum"},{"name":"records read","accumulatorId":773,"metricType":"sum"},{"name":"local bytes read","accumulatorId":771,"metricType":"size"},{"name":"fetch wait time","accumulatorId":772,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":769,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":775,"metricType":"sum"},{"name":"local blocks read","accumulatorId":768,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":778,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":767,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":781,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":782,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":770,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":784,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":11,"accumUpdates":[[764,1],[765,6],[766,244438]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":11,"accumUpdates":[[794,200]]}
{"Event":"SparkListenerJobStart","Job ID":12,"Submission Time":1725364384054,"Stage Infos":[{"Stage ID":14,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":47,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"100\",\"name\":\"Exchange\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[46],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":46,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"101\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[45],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"FileScanRDD","Scope":"{\"id\":\"104\",\"name\":\"Scan csv \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":45,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"104\",\"name\":\"Scan csv \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[14],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"100\",\"name\":\"Exchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"11","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364370931_1829030947","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"11","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":14,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":47,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"100\",\"name\":\"Exchange\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[46],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":46,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"101\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[45],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"FileScanRDD","Scope":"{\"id\":\"104\",\"name\":\"Scan csv \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":45,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"104\",\"name\":\"Scan csv \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364384080,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"100\",\"name\":\"Exchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"11","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364370931_1829030947","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"11","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":14,"Stage Attempt ID":0,"Task Info":{"Task ID":14,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364384153,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":14,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":14,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364384153,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364384605,"Failed":false,"Killed":false,"Accumulables":[{"ID":763,"Name":"number of output rows","Update":"3376","Value":"3376","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":793,"Name":"data size","Update":"2968","Value":"2968","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":812,"Name":"shuffle bytes written","Update":"4714","Value":"4714","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":813,"Name":"shuffle records written","Update":"61","Value":"61","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":814,"Name":"shuffle write time","Update":"9587965","Value":"9587965","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":815,"Name":"duration","Update":"183","Value":"183","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":816,"Name":"number of output rows","Update":"61","Value":"61","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":817,"Name":"peak memory","Update":"262144","Value":"262144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":819,"Name":"time in aggregation build","Update":"91","Value":"91","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":822,"Name":"internal.metrics.executorDeserializeTime","Update":52,"Value":52,"Internal":true,"Count Failed Values":true},{"ID":823,"Name":"internal.metrics.executorDeserializeCpuTime","Update":34732292,"Value":34732292,"Internal":true,"Count Failed Values":true},{"ID":824,"Name":"internal.metrics.executorRunTime","Update":372,"Value":372,"Internal":true,"Count Failed Values":true},{"ID":825,"Name":"internal.metrics.executorCpuTime","Update":137458332,"Value":137458332,"Internal":true,"Count Failed Values":true},{"ID":826,"Name":"internal.metrics.resultSize","Update":2802,"Value":2802,"Internal":true,"Count Failed Values":true},{"ID":827,"Name":"internal.metrics.jvmGCTime","Update":13,"Value":13,"Internal":true,"Count Failed Values":true},{"ID":828,"Name":"internal.metrics.resultSerializationTime","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":831,"Name":"internal.metrics.peakExecutionMemory","Update":262144,"Value":262144,"Internal":true,"Count Failed Values":true},{"ID":850,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":4714,"Value":4714,"Internal":true,"Count Failed Values":true},{"ID":851,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":61,"Value":61,"Internal":true,"Count Failed Values":true},{"ID":852,"Name":"internal.metrics.shuffle.write.writeTime","Update":9587965,"Value":9587965,"Internal":true,"Count Failed Values":true},{"ID":853,"Name":"internal.metrics.input.bytesRead","Update":244438,"Value":244438,"Internal":true,"Count Failed Values":true},{"ID":854,"Name":"internal.metrics.input.recordsRead","Update":3376,"Value":3376,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":52,"Executor Deserialize CPU Time":34732292,"Executor Run Time":372,"Executor CPU Time":137458332,"Peak Execution Memory":262144,"Result Size":2802,"JVM GC Time":13,"Result Serialization Time":4,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":4714,"Shuffle Write Time":9587965,"Shuffle Records Written":61},"Input Metrics":{"Bytes Read":244438,"Records Read":3376},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":14,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":47,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"100\",\"name\":\"Exchange\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[46],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":46,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"101\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[45],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"FileScanRDD","Scope":"{\"id\":\"104\",\"name\":\"Scan csv \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":45,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"104\",\"name\":\"Scan csv \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364384080,"Completion Time":1725364384615,"Accumulables":[{"ID":763,"Name":"number of output rows","Value":"3376","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":793,"Name":"data size","Value":"2968","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":812,"Name":"shuffle bytes written","Value":"4714","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":813,"Name":"shuffle records written","Value":"61","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":814,"Name":"shuffle write time","Value":"9587965","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":815,"Name":"duration","Value":"183","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":816,"Name":"number of output rows","Value":"61","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":817,"Name":"peak memory","Value":"262144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":819,"Name":"time in aggregation build","Value":"91","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":822,"Name":"internal.metrics.executorDeserializeTime","Value":52,"Internal":true,"Count Failed Values":true},{"ID":823,"Name":"internal.metrics.executorDeserializeCpuTime","Value":34732292,"Internal":true,"Count Failed Values":true},{"ID":824,"Name":"internal.metrics.executorRunTime","Value":372,"Internal":true,"Count Failed Values":true},{"ID":825,"Name":"internal.metrics.executorCpuTime","Value":137458332,"Internal":true,"Count Failed Values":true},{"ID":826,"Name":"internal.metrics.resultSize","Value":2802,"Internal":true,"Count Failed Values":true},{"ID":827,"Name":"internal.metrics.jvmGCTime","Value":13,"Internal":true,"Count Failed Values":true},{"ID":828,"Name":"internal.metrics.resultSerializationTime","Value":4,"Internal":true,"Count Failed Values":true},{"ID":831,"Name":"internal.metrics.peakExecutionMemory","Value":262144,"Internal":true,"Count Failed Values":true},{"ID":850,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":4714,"Internal":true,"Count Failed Values":true},{"ID":851,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":61,"Internal":true,"Count Failed Values":true},{"ID":852,"Name":"internal.metrics.shuffle.write.writeTime","Value":9587965,"Internal":true,"Count Failed Values":true},{"ID":853,"Name":"internal.metrics.input.bytesRead","Value":244438,"Internal":true,"Count Failed Values":true},{"ID":854,"Name":"internal.metrics.input.recordsRead","Value":3376,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":12,"Completion Time":1725364384635,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":11,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (11)\n+- == Final Plan ==\n   * HashAggregate (6)\n   +- AQEShuffleRead (5)\n      +- ShuffleQueryStage (4), Statistics(sizeInBytes=2.9 KiB, rowCount=61)\n         +- Exchange (3)\n            +- * HashAggregate (2)\n               +- Scan csv  (1)\n+- == Initial Plan ==\n   CollectLimit (10)\n   +- HashAggregate (9)\n      +- Exchange (8)\n         +- HashAggregate (7)\n            +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput [2]: [state#20, country#21]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nReadSchema: struct<state:string,country:string>\n\n(2) HashAggregate [codegen id : 1]\nInput [2]: [state#20, country#21]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#492L]\nResults [3]: [country#21, state#20, count#493L]\n\n(3) Exchange\nInput [3]: [country#21, state#20, count#493L]\nArguments: hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=176]\n\n(4) ShuffleQueryStage\nOutput [3]: [country#21, state#20, count#493L]\nArguments: 0\n\n(5) AQEShuffleRead\nInput [3]: [country#21, state#20, count#493L]\nArguments: coalesced\n\n(6) HashAggregate [codegen id : 2]\nInput [3]: [country#21, state#20, count#493L]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#484L]\nResults [3]: [country#21, state#20, count(1)#484L AS count(1)#485L]\n\n(7) HashAggregate\nInput [2]: [state#20, country#21]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#492L]\nResults [3]: [country#21, state#20, count#493L]\n\n(8) Exchange\nInput [3]: [country#21, state#20, count#493L]\nArguments: hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=165]\n\n(9) HashAggregate\nInput [3]: [country#21, state#20, count#493L]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#484L]\nResults [3]: [country#21, state#20, count(1)#484L AS count(1)#485L]\n\n(10) CollectLimit\nInput [3]: [country#21, state#20, count(1)#485L]\nArguments: 1001\n\n(11) AdaptiveSparkPlan\nOutput [3]: [country#21, state#20, count(1)#485L]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=176]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[partial_count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [state#20,country#21] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<state:string,country:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<state:string,country:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of output rows","accumulatorId":763,"metricType":"sum"},{"name":"number of files read","accumulatorId":764,"metricType":"sum"},{"name":"metadata time","accumulatorId":765,"metricType":"timing"},{"name":"size of files read","accumulatorId":766,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":818,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":819,"metricType":"timing"},{"name":"peak memory","accumulatorId":817,"metricType":"size"},{"name":"number of output rows","accumulatorId":816,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":821,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":820,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":815,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":813,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":807,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":814,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":808,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":805,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":802,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":811,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":804,"metricType":"sum"},{"name":"records read","accumulatorId":801,"metricType":"sum"},{"name":"local bytes read","accumulatorId":799,"metricType":"size"},{"name":"fetch wait time","accumulatorId":800,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":797,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":803,"metricType":"sum"},{"name":"local blocks read","accumulatorId":796,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":806,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":795,"metricType":"sum"},{"name":"data size","accumulatorId":793,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":809,"metricType":"size"},{"name":"number of partitions","accumulatorId":794,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":810,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":798,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":812,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":864,"metricType":"sum"},{"name":"partition data size","accumulatorId":865,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":866,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":860,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":861,"metricType":"timing"},{"name":"peak memory","accumulatorId":859,"metricType":"size"},{"name":"number of output rows","accumulatorId":858,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":863,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":862,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":857,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":11,"accumUpdates":[[864,1],[866,1],[865,4834]]}
{"Event":"SparkListenerJobStart","Job ID":13,"Submission Time":1725364384949,"Stage Infos":[{"Stage ID":15,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":47,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"100\",\"name\":\"Exchange\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[46],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":46,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"101\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[45],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":44,"Name":"FileScanRDD","Scope":"{\"id\":\"104\",\"name\":\"Scan csv \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":45,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"104\",\"name\":\"Scan csv \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[44],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":16,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"109\",\"name\":\"mapPartitionsInternal\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":48,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"108\",\"name\":\"AQEShuffleRead\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[47],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"105\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[15],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[15,16],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"110\",\"name\":\"collect\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"11","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364370931_1829030947","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"11","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":16,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"109\",\"name\":\"mapPartitionsInternal\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":48,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"108\",\"name\":\"AQEShuffleRead\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[47],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"105\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[15],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364384969,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"110\",\"name\":\"collect\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"11","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364370931_1829030947","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"11","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":16,"Stage Attempt ID":0,"Task Info":{"Task ID":15,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364385037,"Executor ID":"1","Host":"172.17.0.26","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":16,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":15,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364385037,"Executor ID":"1","Host":"172.17.0.26","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364385514,"Failed":false,"Killed":false,"Accumulables":[{"ID":796,"Name":"local blocks read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":799,"Name":"local bytes read","Update":"4714","Value":"4714","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":800,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":801,"Name":"records read","Update":"61","Value":"61","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":857,"Name":"duration","Update":"11","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":858,"Name":"number of output rows","Update":"61","Value":"61","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":859,"Name":"peak memory","Update":"17039344","Value":"17039344","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":861,"Name":"time in aggregation build","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":862,"Name":"avg hash probes per key","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":867,"Name":"internal.metrics.executorDeserializeTime","Update":246,"Value":246,"Internal":true,"Count Failed Values":true},{"ID":868,"Name":"internal.metrics.executorDeserializeCpuTime","Update":16683082,"Value":16683082,"Internal":true,"Count Failed Values":true},{"ID":869,"Name":"internal.metrics.executorRunTime","Update":92,"Value":92,"Internal":true,"Count Failed Values":true},{"ID":870,"Name":"internal.metrics.executorCpuTime","Update":22329419,"Value":22329419,"Internal":true,"Count Failed Values":true},{"ID":871,"Name":"internal.metrics.resultSize","Update":6152,"Value":6152,"Internal":true,"Count Failed Values":true},{"ID":872,"Name":"internal.metrics.jvmGCTime","Update":10,"Value":10,"Internal":true,"Count Failed Values":true},{"ID":873,"Name":"internal.metrics.resultSerializationTime","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":876,"Name":"internal.metrics.peakExecutionMemory","Update":17039344,"Value":17039344,"Internal":true,"Count Failed Values":true},{"ID":878,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":879,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":880,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":881,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":882,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":4714,"Value":4714,"Internal":true,"Count Failed Values":true},{"ID":883,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":884,"Name":"internal.metrics.shuffle.read.recordsRead","Update":61,"Value":61,"Internal":true,"Count Failed Values":true},{"ID":885,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":886,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":887,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":888,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":889,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":890,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":891,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":892,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":893,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":894,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":246,"Executor Deserialize CPU Time":16683082,"Executor Run Time":92,"Executor CPU Time":22329419,"Peak Execution Memory":17039344,"Result Size":6152,"JVM GC Time":10,"Result Serialization Time":4,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":4714,"Total Records Read":61,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":16,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":50,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"109\",\"name\":\"mapPartitionsInternal\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[49],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":48,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"108\",\"name\":\"AQEShuffleRead\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[47],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":49,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"105\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[48],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[15],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364384969,"Completion Time":1725364385532,"Accumulables":[{"ID":796,"Name":"local blocks read","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":799,"Name":"local bytes read","Value":"4714","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":800,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":801,"Name":"records read","Value":"61","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":857,"Name":"duration","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":858,"Name":"number of output rows","Value":"61","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":859,"Name":"peak memory","Value":"17039344","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":861,"Name":"time in aggregation build","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":862,"Name":"avg hash probes per key","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":867,"Name":"internal.metrics.executorDeserializeTime","Value":246,"Internal":true,"Count Failed Values":true},{"ID":868,"Name":"internal.metrics.executorDeserializeCpuTime","Value":16683082,"Internal":true,"Count Failed Values":true},{"ID":869,"Name":"internal.metrics.executorRunTime","Value":92,"Internal":true,"Count Failed Values":true},{"ID":870,"Name":"internal.metrics.executorCpuTime","Value":22329419,"Internal":true,"Count Failed Values":true},{"ID":871,"Name":"internal.metrics.resultSize","Value":6152,"Internal":true,"Count Failed Values":true},{"ID":872,"Name":"internal.metrics.jvmGCTime","Value":10,"Internal":true,"Count Failed Values":true},{"ID":873,"Name":"internal.metrics.resultSerializationTime","Value":4,"Internal":true,"Count Failed Values":true},{"ID":876,"Name":"internal.metrics.peakExecutionMemory","Value":17039344,"Internal":true,"Count Failed Values":true},{"ID":878,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":879,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":1,"Internal":true,"Count Failed Values":true},{"ID":880,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":881,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":882,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":4714,"Internal":true,"Count Failed Values":true},{"ID":883,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":884,"Name":"internal.metrics.shuffle.read.recordsRead","Value":61,"Internal":true,"Count Failed Values":true},{"ID":885,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":886,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":887,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":888,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":889,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":890,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":891,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":892,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":893,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":894,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":13,"Completion Time":1725364385540,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":11,"time":1725364385666,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":12,"rootExecutionId":12,"description":"Started by: admin","details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (7)\n+- CollectLimit (6)\n   +- HashAggregate (5)\n      +- Exchange (4)\n         +- HashAggregate (3)\n            +- Filter (2)\n               +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput [2]: [state#20, country#21]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(country), EqualTo(country,USA)]\nReadSchema: struct<state:string,country:string>\n\n(2) Filter\nInput [2]: [state#20, country#21]\nCondition : (isnotnull(country#21) AND (country#21 = USA))\n\n(3) HashAggregate\nInput [2]: [state#20, country#21]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#508L]\nResults [3]: [country#21, state#20, count#509L]\n\n(4) Exchange\nInput [3]: [country#21, state#20, count#509L]\nArguments: hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=213]\n\n(5) HashAggregate\nInput [3]: [country#21, state#20, count#509L]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#500L]\nResults [3]: [country#21, state#20, count(1)#500L AS count(1)#501L]\n\n(6) CollectLimit\nInput [3]: [country#21, state#20, count(1)#501L]\nArguments: 1001\n\n(7) AdaptiveSparkPlan\nOutput [3]: [country#21, state#20, count(1)#501L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 1001","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[count(1)])","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=213]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[partial_count(1)])","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(country#21) AND (country#21 = USA))","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [state#20,country#21] Batched: false, DataFilters: [isnotnull(country#21), (country#21 = USA)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(country), EqualTo(country,USA)], ReadSchema: struct<state:string,country:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<state:string,country:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(country), EqualTo(country,USA)]","DataFilters":"[isnotnull(country#21), (country#21 = USA)]"},"metrics":[{"name":"number of output rows","accumulatorId":957,"metricType":"sum"},{"name":"number of files read","accumulatorId":958,"metricType":"sum"},{"name":"metadata time","accumulatorId":959,"metricType":"timing"},{"name":"size of files read","accumulatorId":960,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":956,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":952,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":953,"metricType":"timing"},{"name":"peak memory","accumulatorId":951,"metricType":"size"},{"name":"number of output rows","accumulatorId":950,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":955,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":954,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":948,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":942,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":949,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":943,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":940,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":937,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":946,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":939,"metricType":"sum"},{"name":"records read","accumulatorId":936,"metricType":"sum"},{"name":"local bytes read","accumulatorId":934,"metricType":"size"},{"name":"fetch wait time","accumulatorId":935,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":932,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":938,"metricType":"sum"},{"name":"local blocks read","accumulatorId":931,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":941,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":930,"metricType":"sum"},{"name":"data size","accumulatorId":928,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":944,"metricType":"size"},{"name":"number of partitions","accumulatorId":929,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":945,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":933,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":947,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":924,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":925,"metricType":"timing"},{"name":"peak memory","accumulatorId":923,"metricType":"size"},{"name":"number of output rows","accumulatorId":922,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":927,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":926,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":920,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":914,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":921,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":915,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":912,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":909,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":918,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":911,"metricType":"sum"},{"name":"records read","accumulatorId":908,"metricType":"sum"},{"name":"local bytes read","accumulatorId":906,"metricType":"size"},{"name":"fetch wait time","accumulatorId":907,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":904,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":910,"metricType":"sum"},{"name":"local blocks read","accumulatorId":903,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":913,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":902,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":916,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":917,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":905,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":919,"metricType":"size"}]}],"metadata":{},"metrics":[]},"time":1725364393796,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":12,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (13)\n+- == Current Plan ==\n   CollectLimit (7)\n   +- HashAggregate (6)\n      +- ShuffleQueryStage (5)\n         +- Exchange (4)\n            +- * HashAggregate (3)\n               +- * Filter (2)\n                  +- Scan csv  (1)\n+- == Initial Plan ==\n   CollectLimit (12)\n   +- HashAggregate (11)\n      +- Exchange (10)\n         +- HashAggregate (9)\n            +- Filter (8)\n               +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput [2]: [state#20, country#21]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(country), EqualTo(country,USA)]\nReadSchema: struct<state:string,country:string>\n\n(2) Filter [codegen id : 1]\nInput [2]: [state#20, country#21]\nCondition : (isnotnull(country#21) AND (country#21 = USA))\n\n(3) HashAggregate [codegen id : 1]\nInput [2]: [state#20, country#21]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#508L]\nResults [3]: [country#21, state#20, count#509L]\n\n(4) Exchange\nInput [3]: [country#21, state#20, count#509L]\nArguments: hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=227]\n\n(5) ShuffleQueryStage\nOutput [3]: [country#21, state#20, count#509L]\nArguments: 0\n\n(6) HashAggregate\nInput [3]: [country#21, state#20, count#509L]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#500L]\nResults [3]: [country#21, state#20, count(1)#500L AS count(1)#501L]\n\n(7) CollectLimit\nInput [3]: [country#21, state#20, count(1)#501L]\nArguments: 1001\n\n(8) Filter\nInput [2]: [state#20, country#21]\nCondition : (isnotnull(country#21) AND (country#21 = USA))\n\n(9) HashAggregate\nInput [2]: [state#20, country#21]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#508L]\nResults [3]: [country#21, state#20, count#509L]\n\n(10) Exchange\nInput [3]: [country#21, state#20, count#509L]\nArguments: hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=213]\n\n(11) HashAggregate\nInput [3]: [country#21, state#20, count#509L]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#500L]\nResults [3]: [country#21, state#20, count(1)#500L AS count(1)#501L]\n\n(12) CollectLimit\nInput [3]: [country#21, state#20, count(1)#501L]\nArguments: 1001\n\n(13) AdaptiveSparkPlan\nOutput [3]: [country#21, state#20, count(1)#501L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 1001","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[count(1)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=227]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[partial_count(1)])","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(country#21) AND (country#21 = USA))","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [state#20,country#21] Batched: false, DataFilters: [isnotnull(country#21), (country#21 = USA)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(country), EqualTo(country,USA)], ReadSchema: struct<state:string,country:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<state:string,country:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(country), EqualTo(country,USA)]","DataFilters":"[isnotnull(country#21), (country#21 = USA)]"},"metrics":[{"name":"number of output rows","accumulatorId":957,"metricType":"sum"},{"name":"number of files read","accumulatorId":958,"metricType":"sum"},{"name":"metadata time","accumulatorId":959,"metricType":"timing"},{"name":"size of files read","accumulatorId":960,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1016,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1012,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1013,"metricType":"timing"},{"name":"peak memory","accumulatorId":1011,"metricType":"size"},{"name":"number of output rows","accumulatorId":1010,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1015,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1014,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1009,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1007,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1001,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1008,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1002,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":999,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":996,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1005,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":998,"metricType":"sum"},{"name":"records read","accumulatorId":995,"metricType":"sum"},{"name":"local bytes read","accumulatorId":993,"metricType":"size"},{"name":"fetch wait time","accumulatorId":994,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":991,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":997,"metricType":"sum"},{"name":"local blocks read","accumulatorId":990,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1000,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":989,"metricType":"sum"},{"name":"data size","accumulatorId":987,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":1003,"metricType":"size"},{"name":"number of partitions","accumulatorId":988,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":1004,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":992,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1006,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":983,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":984,"metricType":"timing"},{"name":"peak memory","accumulatorId":982,"metricType":"size"},{"name":"number of output rows","accumulatorId":981,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":986,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":985,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":979,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":973,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":980,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":974,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":971,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":968,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":977,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":970,"metricType":"sum"},{"name":"records read","accumulatorId":967,"metricType":"sum"},{"name":"local bytes read","accumulatorId":965,"metricType":"size"},{"name":"fetch wait time","accumulatorId":966,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":963,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":969,"metricType":"sum"},{"name":"local blocks read","accumulatorId":962,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":972,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":961,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":975,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":976,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":964,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":978,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":12,"accumUpdates":[[958,1],[959,12],[960,244438]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":12,"accumUpdates":[[988,200]]}
{"Event":"SparkListenerJobStart","Job ID":14,"Submission Time":1725364394606,"Stage Infos":[{"Stage ID":17,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":54,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"118\",\"name\":\"Exchange\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[53],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":53,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"119\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[52],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":52,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"123\",\"name\":\"Scan csv \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[51],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"FileScanRDD","Scope":"{\"id\":\"123\",\"name\":\"Scan csv \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[17],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"118\",\"name\":\"Exchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"12","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364383079_1413635462","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"12","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":17,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":54,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"118\",\"name\":\"Exchange\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[53],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":53,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"119\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[52],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":52,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"123\",\"name\":\"Scan csv \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[51],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"FileScanRDD","Scope":"{\"id\":\"123\",\"name\":\"Scan csv \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364394634,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"118\",\"name\":\"Exchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"12","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364383079_1413635462","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"12","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":17,"Stage Attempt ID":0,"Task Info":{"Task ID":16,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364394689,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":17,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":16,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364394689,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364395075,"Failed":false,"Killed":false,"Accumulables":[{"ID":957,"Name":"number of output rows","Update":"3372","Value":"3372","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":987,"Name":"data size","Update":"2736","Value":"2736","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1006,"Name":"shuffle bytes written","Update":"4431","Value":"4431","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1007,"Name":"shuffle records written","Update":"57","Value":"57","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1008,"Name":"shuffle write time","Update":"12564184","Value":"12564184","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1009,"Name":"duration","Update":"122","Value":"122","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1010,"Name":"number of output rows","Update":"57","Value":"57","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1011,"Name":"peak memory","Update":"262144","Value":"262144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1013,"Name":"time in aggregation build","Update":"90","Value":"90","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1016,"Name":"number of output rows","Update":"3372","Value":"3372","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1017,"Name":"internal.metrics.executorDeserializeTime","Update":51,"Value":51,"Internal":true,"Count Failed Values":true},{"ID":1018,"Name":"internal.metrics.executorDeserializeCpuTime","Update":21515833,"Value":21515833,"Internal":true,"Count Failed Values":true},{"ID":1019,"Name":"internal.metrics.executorRunTime","Update":290,"Value":290,"Internal":true,"Count Failed Values":true},{"ID":1020,"Name":"internal.metrics.executorCpuTime","Update":73914079,"Value":73914079,"Internal":true,"Count Failed Values":true},{"ID":1021,"Name":"internal.metrics.resultSize","Update":2858,"Value":2858,"Internal":true,"Count Failed Values":true},{"ID":1022,"Name":"internal.metrics.jvmGCTime","Update":14,"Value":14,"Internal":true,"Count Failed Values":true},{"ID":1023,"Name":"internal.metrics.resultSerializationTime","Update":3,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":1026,"Name":"internal.metrics.peakExecutionMemory","Update":262144,"Value":262144,"Internal":true,"Count Failed Values":true},{"ID":1045,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":4431,"Value":4431,"Internal":true,"Count Failed Values":true},{"ID":1046,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":57,"Value":57,"Internal":true,"Count Failed Values":true},{"ID":1047,"Name":"internal.metrics.shuffle.write.writeTime","Update":12564184,"Value":12564184,"Internal":true,"Count Failed Values":true},{"ID":1048,"Name":"internal.metrics.input.bytesRead","Update":244438,"Value":244438,"Internal":true,"Count Failed Values":true},{"ID":1049,"Name":"internal.metrics.input.recordsRead","Update":3372,"Value":3372,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":51,"Executor Deserialize CPU Time":21515833,"Executor Run Time":290,"Executor CPU Time":73914079,"Peak Execution Memory":262144,"Result Size":2858,"JVM GC Time":14,"Result Serialization Time":3,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":4431,"Shuffle Write Time":12564184,"Shuffle Records Written":57},"Input Metrics":{"Bytes Read":244438,"Records Read":3372},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":17,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":54,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"118\",\"name\":\"Exchange\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[53],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":53,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"119\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[52],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":52,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"123\",\"name\":\"Scan csv \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[51],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"FileScanRDD","Scope":"{\"id\":\"123\",\"name\":\"Scan csv \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364394634,"Completion Time":1725364395091,"Accumulables":[{"ID":957,"Name":"number of output rows","Value":"3372","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":987,"Name":"data size","Value":"2736","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1006,"Name":"shuffle bytes written","Value":"4431","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1007,"Name":"shuffle records written","Value":"57","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1008,"Name":"shuffle write time","Value":"12564184","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1009,"Name":"duration","Value":"122","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1010,"Name":"number of output rows","Value":"57","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1011,"Name":"peak memory","Value":"262144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1013,"Name":"time in aggregation build","Value":"90","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1016,"Name":"number of output rows","Value":"3372","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1017,"Name":"internal.metrics.executorDeserializeTime","Value":51,"Internal":true,"Count Failed Values":true},{"ID":1018,"Name":"internal.metrics.executorDeserializeCpuTime","Value":21515833,"Internal":true,"Count Failed Values":true},{"ID":1019,"Name":"internal.metrics.executorRunTime","Value":290,"Internal":true,"Count Failed Values":true},{"ID":1020,"Name":"internal.metrics.executorCpuTime","Value":73914079,"Internal":true,"Count Failed Values":true},{"ID":1021,"Name":"internal.metrics.resultSize","Value":2858,"Internal":true,"Count Failed Values":true},{"ID":1022,"Name":"internal.metrics.jvmGCTime","Value":14,"Internal":true,"Count Failed Values":true},{"ID":1023,"Name":"internal.metrics.resultSerializationTime","Value":3,"Internal":true,"Count Failed Values":true},{"ID":1026,"Name":"internal.metrics.peakExecutionMemory","Value":262144,"Internal":true,"Count Failed Values":true},{"ID":1045,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":4431,"Internal":true,"Count Failed Values":true},{"ID":1046,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":57,"Internal":true,"Count Failed Values":true},{"ID":1047,"Name":"internal.metrics.shuffle.write.writeTime","Value":12564184,"Internal":true,"Count Failed Values":true},{"ID":1048,"Name":"internal.metrics.input.bytesRead","Value":244438,"Internal":true,"Count Failed Values":true},{"ID":1049,"Name":"internal.metrics.input.recordsRead","Value":3372,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":14,"Completion Time":1725364395103,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":12,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (13)\n+- == Final Plan ==\n   * HashAggregate (7)\n   +- AQEShuffleRead (6)\n      +- ShuffleQueryStage (5), Statistics(sizeInBytes=2.7 KiB, rowCount=57)\n         +- Exchange (4)\n            +- * HashAggregate (3)\n               +- * Filter (2)\n                  +- Scan csv  (1)\n+- == Initial Plan ==\n   CollectLimit (12)\n   +- HashAggregate (11)\n      +- Exchange (10)\n         +- HashAggregate (9)\n            +- Filter (8)\n               +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput [2]: [state#20, country#21]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(country), EqualTo(country,USA)]\nReadSchema: struct<state:string,country:string>\n\n(2) Filter [codegen id : 1]\nInput [2]: [state#20, country#21]\nCondition : (isnotnull(country#21) AND (country#21 = USA))\n\n(3) HashAggregate [codegen id : 1]\nInput [2]: [state#20, country#21]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#508L]\nResults [3]: [country#21, state#20, count#509L]\n\n(4) Exchange\nInput [3]: [country#21, state#20, count#509L]\nArguments: hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=227]\n\n(5) ShuffleQueryStage\nOutput [3]: [country#21, state#20, count#509L]\nArguments: 0\n\n(6) AQEShuffleRead\nInput [3]: [country#21, state#20, count#509L]\nArguments: coalesced\n\n(7) HashAggregate [codegen id : 2]\nInput [3]: [country#21, state#20, count#509L]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#500L]\nResults [3]: [country#21, state#20, count(1)#500L AS count(1)#501L]\n\n(8) Filter\nInput [2]: [state#20, country#21]\nCondition : (isnotnull(country#21) AND (country#21 = USA))\n\n(9) HashAggregate\nInput [2]: [state#20, country#21]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#508L]\nResults [3]: [country#21, state#20, count#509L]\n\n(10) Exchange\nInput [3]: [country#21, state#20, count#509L]\nArguments: hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=213]\n\n(11) HashAggregate\nInput [3]: [country#21, state#20, count#509L]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#500L]\nResults [3]: [country#21, state#20, count(1)#500L AS count(1)#501L]\n\n(12) CollectLimit\nInput [3]: [country#21, state#20, count(1)#501L]\nArguments: 1001\n\n(13) AdaptiveSparkPlan\nOutput [3]: [country#21, state#20, count(1)#501L]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=227]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[partial_count(1)])","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(country#21) AND (country#21 = USA))","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [state#20,country#21] Batched: false, DataFilters: [isnotnull(country#21), (country#21 = USA)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(country), EqualTo(country,USA)], ReadSchema: struct<state:string,country:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<state:string,country:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(country), EqualTo(country,USA)]","DataFilters":"[isnotnull(country#21), (country#21 = USA)]"},"metrics":[{"name":"number of output rows","accumulatorId":957,"metricType":"sum"},{"name":"number of files read","accumulatorId":958,"metricType":"sum"},{"name":"metadata time","accumulatorId":959,"metricType":"timing"},{"name":"size of files read","accumulatorId":960,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1016,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1012,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1013,"metricType":"timing"},{"name":"peak memory","accumulatorId":1011,"metricType":"size"},{"name":"number of output rows","accumulatorId":1010,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1015,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1014,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1009,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1007,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1001,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1008,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1002,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":999,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":996,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1005,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":998,"metricType":"sum"},{"name":"records read","accumulatorId":995,"metricType":"sum"},{"name":"local bytes read","accumulatorId":993,"metricType":"size"},{"name":"fetch wait time","accumulatorId":994,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":991,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":997,"metricType":"sum"},{"name":"local blocks read","accumulatorId":990,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1000,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":989,"metricType":"sum"},{"name":"data size","accumulatorId":987,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":1003,"metricType":"size"},{"name":"number of partitions","accumulatorId":988,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":1004,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":992,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1006,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":1059,"metricType":"sum"},{"name":"partition data size","accumulatorId":1060,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":1061,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1055,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1056,"metricType":"timing"},{"name":"peak memory","accumulatorId":1054,"metricType":"size"},{"name":"number of output rows","accumulatorId":1053,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1058,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1057,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1052,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":12,"accumUpdates":[[1059,1],[1061,1],[1060,4537]]}
{"Event":"SparkListenerJobStart","Job ID":15,"Submission Time":1725364395239,"Stage Infos":[{"Stage ID":19,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":57,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"128\",\"name\":\"mapPartitionsInternal\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[56],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":56,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"124\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[55],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":55,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"127\",\"name\":\"AQEShuffleRead\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[54],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[18],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":18,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":54,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"118\",\"name\":\"Exchange\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[53],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":53,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"119\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[52],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":52,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"123\",\"name\":\"Scan csv \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[51],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":51,"Name":"FileScanRDD","Scope":"{\"id\":\"123\",\"name\":\"Scan csv \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[19,18],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"129\",\"name\":\"collect\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"12","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364383079_1413635462","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"12","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":19,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":57,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"128\",\"name\":\"mapPartitionsInternal\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[56],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":56,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"124\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[55],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":55,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"127\",\"name\":\"AQEShuffleRead\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[54],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[18],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364395262,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"129\",\"name\":\"collect\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"12","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364383079_1413635462","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"12","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":19,"Stage Attempt ID":0,"Task Info":{"Task ID":17,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364395328,"Executor ID":"1","Host":"172.17.0.26","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":19,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":17,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364395328,"Executor ID":"1","Host":"172.17.0.26","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364395539,"Failed":false,"Killed":false,"Accumulables":[{"ID":990,"Name":"local blocks read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":993,"Name":"local bytes read","Update":"4431","Value":"4431","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":994,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":995,"Name":"records read","Update":"57","Value":"57","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1052,"Name":"duration","Update":"3","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1053,"Name":"number of output rows","Update":"57","Value":"57","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1054,"Name":"peak memory","Update":"17039344","Value":"17039344","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1056,"Name":"time in aggregation build","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1057,"Name":"avg hash probes per key","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1062,"Name":"internal.metrics.executorDeserializeTime","Update":16,"Value":16,"Internal":true,"Count Failed Values":true},{"ID":1063,"Name":"internal.metrics.executorDeserializeCpuTime","Update":5647374,"Value":5647374,"Internal":true,"Count Failed Values":true},{"ID":1064,"Name":"internal.metrics.executorRunTime","Update":153,"Value":153,"Internal":true,"Count Failed Values":true},{"ID":1065,"Name":"internal.metrics.executorCpuTime","Update":6782583,"Value":6782583,"Internal":true,"Count Failed Values":true},{"ID":1066,"Name":"internal.metrics.resultSize","Update":6019,"Value":6019,"Internal":true,"Count Failed Values":true},{"ID":1067,"Name":"internal.metrics.jvmGCTime","Update":10,"Value":10,"Internal":true,"Count Failed Values":true},{"ID":1071,"Name":"internal.metrics.peakExecutionMemory","Update":17039344,"Value":17039344,"Internal":true,"Count Failed Values":true},{"ID":1073,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1074,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":1075,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1076,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1077,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":4431,"Value":4431,"Internal":true,"Count Failed Values":true},{"ID":1078,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1079,"Name":"internal.metrics.shuffle.read.recordsRead","Update":57,"Value":57,"Internal":true,"Count Failed Values":true},{"ID":1080,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1081,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1082,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1083,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1084,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1085,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1086,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1087,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1088,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1089,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":16,"Executor Deserialize CPU Time":5647374,"Executor Run Time":153,"Executor CPU Time":6782583,"Peak Execution Memory":17039344,"Result Size":6019,"JVM GC Time":10,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":4431,"Total Records Read":57,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":19,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":57,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"128\",\"name\":\"mapPartitionsInternal\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[56],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":56,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"124\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[55],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":55,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"127\",\"name\":\"AQEShuffleRead\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[54],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[18],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364395262,"Completion Time":1725364395566,"Accumulables":[{"ID":990,"Name":"local blocks read","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":993,"Name":"local bytes read","Value":"4431","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":994,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":995,"Name":"records read","Value":"57","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1052,"Name":"duration","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1053,"Name":"number of output rows","Value":"57","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1054,"Name":"peak memory","Value":"17039344","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1056,"Name":"time in aggregation build","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1057,"Name":"avg hash probes per key","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1062,"Name":"internal.metrics.executorDeserializeTime","Value":16,"Internal":true,"Count Failed Values":true},{"ID":1063,"Name":"internal.metrics.executorDeserializeCpuTime","Value":5647374,"Internal":true,"Count Failed Values":true},{"ID":1064,"Name":"internal.metrics.executorRunTime","Value":153,"Internal":true,"Count Failed Values":true},{"ID":1065,"Name":"internal.metrics.executorCpuTime","Value":6782583,"Internal":true,"Count Failed Values":true},{"ID":1066,"Name":"internal.metrics.resultSize","Value":6019,"Internal":true,"Count Failed Values":true},{"ID":1067,"Name":"internal.metrics.jvmGCTime","Value":10,"Internal":true,"Count Failed Values":true},{"ID":1071,"Name":"internal.metrics.peakExecutionMemory","Value":17039344,"Internal":true,"Count Failed Values":true},{"ID":1073,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1074,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":1,"Internal":true,"Count Failed Values":true},{"ID":1075,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1076,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1077,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":4431,"Internal":true,"Count Failed Values":true},{"ID":1078,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1079,"Name":"internal.metrics.shuffle.read.recordsRead","Value":57,"Internal":true,"Count Failed Values":true},{"ID":1080,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1081,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1082,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1083,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1084,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1085,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1086,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1087,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1088,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1089,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":15,"Completion Time":1725364395569,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":12,"time":1725364395654,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":13,"rootExecutionId":13,"description":"Started by: admin","details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (7)\n+- CollectLimit (6)\n   +- HashAggregate (5)\n      +- Exchange (4)\n         +- HashAggregate (3)\n            +- Filter (2)\n               +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput [2]: [state#20, country#21]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(country), EqualTo(country,USA)]\nReadSchema: struct<state:string,country:string>\n\n(2) Filter\nInput [2]: [state#20, country#21]\nCondition : (isnotnull(country#21) AND (country#21 = USA))\n\n(3) HashAggregate\nInput [2]: [state#20, country#21]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#530L]\nResults [3]: [country#21, state#20, count#531L]\n\n(4) Exchange\nInput [3]: [country#21, state#20, count#531L]\nArguments: hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=266]\n\n(5) HashAggregate\nInput [3]: [country#21, state#20, count#531L]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#516L]\nResults [3]: [toprettystring(country#21, Some(Etc/UTC)) AS toprettystring(country)#524, toprettystring(state#20, Some(Etc/UTC)) AS toprettystring(state)#525, toprettystring(count(1)#516L, Some(Etc/UTC)) AS toprettystring(count(1))#526]\n\n(6) CollectLimit\nInput [3]: [toprettystring(country)#524, toprettystring(state)#525, toprettystring(count(1))#526]\nArguments: 21\n\n(7) AdaptiveSparkPlan\nOutput [3]: [toprettystring(country)#524, toprettystring(state)#525, toprettystring(count(1))#526]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 21","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[count(1)])","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=266]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[partial_count(1)])","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(country#21) AND (country#21 = USA))","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [state#20,country#21] Batched: false, DataFilters: [isnotnull(country#21), (country#21 = USA)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(country), EqualTo(country,USA)], ReadSchema: struct<state:string,country:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<state:string,country:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(country), EqualTo(country,USA)]","DataFilters":"[isnotnull(country#21), (country#21 = USA)]"},"metrics":[{"name":"number of output rows","accumulatorId":1152,"metricType":"sum"},{"name":"number of files read","accumulatorId":1153,"metricType":"sum"},{"name":"metadata time","accumulatorId":1154,"metricType":"timing"},{"name":"size of files read","accumulatorId":1155,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1151,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1147,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1148,"metricType":"timing"},{"name":"peak memory","accumulatorId":1146,"metricType":"size"},{"name":"number of output rows","accumulatorId":1145,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1150,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1149,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1143,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1137,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1144,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1138,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1135,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1132,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1141,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1134,"metricType":"sum"},{"name":"records read","accumulatorId":1131,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1129,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1130,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1127,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1133,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1126,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1136,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1125,"metricType":"sum"},{"name":"data size","accumulatorId":1123,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":1139,"metricType":"size"},{"name":"number of partitions","accumulatorId":1124,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":1140,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1128,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1142,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1119,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1120,"metricType":"timing"},{"name":"peak memory","accumulatorId":1118,"metricType":"size"},{"name":"number of output rows","accumulatorId":1117,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1122,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1121,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1115,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1109,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1116,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1110,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1107,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1104,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1113,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1106,"metricType":"sum"},{"name":"records read","accumulatorId":1103,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1101,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1102,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1099,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1105,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1098,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1108,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1097,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":1111,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":1112,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1100,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1114,"metricType":"size"}]}],"metadata":{},"metrics":[]},"time":1725364409424,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":13,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (13)\n+- == Current Plan ==\n   CollectLimit (7)\n   +- HashAggregate (6)\n      +- ShuffleQueryStage (5)\n         +- Exchange (4)\n            +- * HashAggregate (3)\n               +- * Filter (2)\n                  +- Scan csv  (1)\n+- == Initial Plan ==\n   CollectLimit (12)\n   +- HashAggregate (11)\n      +- Exchange (10)\n         +- HashAggregate (9)\n            +- Filter (8)\n               +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput [2]: [state#20, country#21]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(country), EqualTo(country,USA)]\nReadSchema: struct<state:string,country:string>\n\n(2) Filter [codegen id : 1]\nInput [2]: [state#20, country#21]\nCondition : (isnotnull(country#21) AND (country#21 = USA))\n\n(3) HashAggregate [codegen id : 1]\nInput [2]: [state#20, country#21]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#530L]\nResults [3]: [country#21, state#20, count#531L]\n\n(4) Exchange\nInput [3]: [country#21, state#20, count#531L]\nArguments: hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=280]\n\n(5) ShuffleQueryStage\nOutput [3]: [country#21, state#20, count#531L]\nArguments: 0\n\n(6) HashAggregate\nInput [3]: [country#21, state#20, count#531L]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#516L]\nResults [3]: [toprettystring(country#21, Some(Etc/UTC)) AS toprettystring(country)#524, toprettystring(state#20, Some(Etc/UTC)) AS toprettystring(state)#525, toprettystring(count(1)#516L, Some(Etc/UTC)) AS toprettystring(count(1))#526]\n\n(7) CollectLimit\nInput [3]: [toprettystring(country)#524, toprettystring(state)#525, toprettystring(count(1))#526]\nArguments: 21\n\n(8) Filter\nInput [2]: [state#20, country#21]\nCondition : (isnotnull(country#21) AND (country#21 = USA))\n\n(9) HashAggregate\nInput [2]: [state#20, country#21]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#530L]\nResults [3]: [country#21, state#20, count#531L]\n\n(10) Exchange\nInput [3]: [country#21, state#20, count#531L]\nArguments: hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=266]\n\n(11) HashAggregate\nInput [3]: [country#21, state#20, count#531L]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#516L]\nResults [3]: [toprettystring(country#21, Some(Etc/UTC)) AS toprettystring(country)#524, toprettystring(state#20, Some(Etc/UTC)) AS toprettystring(state)#525, toprettystring(count(1)#516L, Some(Etc/UTC)) AS toprettystring(count(1))#526]\n\n(12) CollectLimit\nInput [3]: [toprettystring(country)#524, toprettystring(state)#525, toprettystring(count(1))#526]\nArguments: 21\n\n(13) AdaptiveSparkPlan\nOutput [3]: [toprettystring(country)#524, toprettystring(state)#525, toprettystring(count(1))#526]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 21","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[count(1)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=280]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[partial_count(1)])","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(country#21) AND (country#21 = USA))","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [state#20,country#21] Batched: false, DataFilters: [isnotnull(country#21), (country#21 = USA)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(country), EqualTo(country,USA)], ReadSchema: struct<state:string,country:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<state:string,country:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(country), EqualTo(country,USA)]","DataFilters":"[isnotnull(country#21), (country#21 = USA)]"},"metrics":[{"name":"number of output rows","accumulatorId":1152,"metricType":"sum"},{"name":"number of files read","accumulatorId":1153,"metricType":"sum"},{"name":"metadata time","accumulatorId":1154,"metricType":"timing"},{"name":"size of files read","accumulatorId":1155,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1211,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1207,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1208,"metricType":"timing"},{"name":"peak memory","accumulatorId":1206,"metricType":"size"},{"name":"number of output rows","accumulatorId":1205,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1210,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1209,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1204,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1202,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1196,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1203,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1197,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1194,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1191,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1200,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1193,"metricType":"sum"},{"name":"records read","accumulatorId":1190,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1188,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1189,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1186,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1192,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1185,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1195,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1184,"metricType":"sum"},{"name":"data size","accumulatorId":1182,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":1198,"metricType":"size"},{"name":"number of partitions","accumulatorId":1183,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":1199,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1187,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1201,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1178,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1179,"metricType":"timing"},{"name":"peak memory","accumulatorId":1177,"metricType":"size"},{"name":"number of output rows","accumulatorId":1176,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1181,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1180,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1174,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1168,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1175,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1169,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1166,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1163,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1172,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1165,"metricType":"sum"},{"name":"records read","accumulatorId":1162,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1160,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1161,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1158,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1164,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1157,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1167,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1156,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":1170,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":1171,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1159,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1173,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":13,"accumUpdates":[[1153,1],[1154,4],[1155,244438]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":13,"accumUpdates":[[1183,200]]}
{"Event":"SparkListenerJobStart","Job ID":16,"Submission Time":1725364409562,"Stage Infos":[{"Stage ID":20,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":61,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"137\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[60],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":60,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"138\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[59],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":59,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"142\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[58],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":58,"Name":"FileScanRDD","Scope":"{\"id\":\"142\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[20],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"137\",\"name\":\"Exchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"13","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364393521_120942272","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"13","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":20,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":61,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"137\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[60],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":60,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"138\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[59],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":59,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"142\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[58],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":58,"Name":"FileScanRDD","Scope":"{\"id\":\"142\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364409796,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"137\",\"name\":\"Exchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"13","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364393521_120942272","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"13","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":20,"Stage Attempt ID":0,"Task Info":{"Task ID":18,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364409897,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":20,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":18,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364409897,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364410583,"Failed":false,"Killed":false,"Accumulables":[{"ID":1152,"Name":"number of output rows","Update":"3372","Value":"3372","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1182,"Name":"data size","Update":"2736","Value":"2736","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1201,"Name":"shuffle bytes written","Update":"4431","Value":"4431","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1202,"Name":"shuffle records written","Update":"57","Value":"57","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1203,"Name":"shuffle write time","Update":"9140083","Value":"9140083","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1204,"Name":"duration","Update":"236","Value":"236","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1205,"Name":"number of output rows","Update":"57","Value":"57","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1206,"Name":"peak memory","Update":"262144","Value":"262144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1208,"Name":"time in aggregation build","Update":"102","Value":"102","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1211,"Name":"number of output rows","Update":"3372","Value":"3372","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1212,"Name":"internal.metrics.executorDeserializeTime","Update":172,"Value":172,"Internal":true,"Count Failed Values":true},{"ID":1213,"Name":"internal.metrics.executorDeserializeCpuTime","Update":57621833,"Value":57621833,"Internal":true,"Count Failed Values":true},{"ID":1214,"Name":"internal.metrics.executorRunTime","Update":357,"Value":357,"Internal":true,"Count Failed Values":true},{"ID":1215,"Name":"internal.metrics.executorCpuTime","Update":176471288,"Value":176471288,"Internal":true,"Count Failed Values":true},{"ID":1216,"Name":"internal.metrics.resultSize","Update":2857,"Value":2857,"Internal":true,"Count Failed Values":true},{"ID":1217,"Name":"internal.metrics.jvmGCTime","Update":26,"Value":26,"Internal":true,"Count Failed Values":true},{"ID":1218,"Name":"internal.metrics.resultSerializationTime","Update":8,"Value":8,"Internal":true,"Count Failed Values":true},{"ID":1221,"Name":"internal.metrics.peakExecutionMemory","Update":262144,"Value":262144,"Internal":true,"Count Failed Values":true},{"ID":1240,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":4431,"Value":4431,"Internal":true,"Count Failed Values":true},{"ID":1241,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":57,"Value":57,"Internal":true,"Count Failed Values":true},{"ID":1242,"Name":"internal.metrics.shuffle.write.writeTime","Update":9140083,"Value":9140083,"Internal":true,"Count Failed Values":true},{"ID":1243,"Name":"internal.metrics.input.bytesRead","Update":244438,"Value":244438,"Internal":true,"Count Failed Values":true},{"ID":1244,"Name":"internal.metrics.input.recordsRead","Update":3372,"Value":3372,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":172,"Executor Deserialize CPU Time":57621833,"Executor Run Time":357,"Executor CPU Time":176471288,"Peak Execution Memory":262144,"Result Size":2857,"JVM GC Time":26,"Result Serialization Time":8,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":4431,"Shuffle Write Time":9140083,"Shuffle Records Written":57},"Input Metrics":{"Bytes Read":244438,"Records Read":3372},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":20,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":61,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"137\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[60],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":60,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"138\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[59],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":59,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"142\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[58],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":58,"Name":"FileScanRDD","Scope":"{\"id\":\"142\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364409796,"Completion Time":1725364410599,"Accumulables":[{"ID":1152,"Name":"number of output rows","Value":"3372","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1182,"Name":"data size","Value":"2736","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1201,"Name":"shuffle bytes written","Value":"4431","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1202,"Name":"shuffle records written","Value":"57","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1203,"Name":"shuffle write time","Value":"9140083","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1204,"Name":"duration","Value":"236","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1205,"Name":"number of output rows","Value":"57","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1206,"Name":"peak memory","Value":"262144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1208,"Name":"time in aggregation build","Value":"102","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1211,"Name":"number of output rows","Value":"3372","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1212,"Name":"internal.metrics.executorDeserializeTime","Value":172,"Internal":true,"Count Failed Values":true},{"ID":1213,"Name":"internal.metrics.executorDeserializeCpuTime","Value":57621833,"Internal":true,"Count Failed Values":true},{"ID":1214,"Name":"internal.metrics.executorRunTime","Value":357,"Internal":true,"Count Failed Values":true},{"ID":1215,"Name":"internal.metrics.executorCpuTime","Value":176471288,"Internal":true,"Count Failed Values":true},{"ID":1216,"Name":"internal.metrics.resultSize","Value":2857,"Internal":true,"Count Failed Values":true},{"ID":1217,"Name":"internal.metrics.jvmGCTime","Value":26,"Internal":true,"Count Failed Values":true},{"ID":1218,"Name":"internal.metrics.resultSerializationTime","Value":8,"Internal":true,"Count Failed Values":true},{"ID":1221,"Name":"internal.metrics.peakExecutionMemory","Value":262144,"Internal":true,"Count Failed Values":true},{"ID":1240,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":4431,"Internal":true,"Count Failed Values":true},{"ID":1241,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":57,"Internal":true,"Count Failed Values":true},{"ID":1242,"Name":"internal.metrics.shuffle.write.writeTime","Value":9140083,"Internal":true,"Count Failed Values":true},{"ID":1243,"Name":"internal.metrics.input.bytesRead","Value":244438,"Internal":true,"Count Failed Values":true},{"ID":1244,"Name":"internal.metrics.input.recordsRead","Value":3372,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":16,"Completion Time":1725364410626,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":13,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (14)\n+- == Final Plan ==\n   CollectLimit (8)\n   +- * HashAggregate (7)\n      +- AQEShuffleRead (6)\n         +- ShuffleQueryStage (5), Statistics(sizeInBytes=2.7 KiB, rowCount=57)\n            +- Exchange (4)\n               +- * HashAggregate (3)\n                  +- * Filter (2)\n                     +- Scan csv  (1)\n+- == Initial Plan ==\n   CollectLimit (13)\n   +- HashAggregate (12)\n      +- Exchange (11)\n         +- HashAggregate (10)\n            +- Filter (9)\n               +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput [2]: [state#20, country#21]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(country), EqualTo(country,USA)]\nReadSchema: struct<state:string,country:string>\n\n(2) Filter [codegen id : 1]\nInput [2]: [state#20, country#21]\nCondition : (isnotnull(country#21) AND (country#21 = USA))\n\n(3) HashAggregate [codegen id : 1]\nInput [2]: [state#20, country#21]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#530L]\nResults [3]: [country#21, state#20, count#531L]\n\n(4) Exchange\nInput [3]: [country#21, state#20, count#531L]\nArguments: hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=280]\n\n(5) ShuffleQueryStage\nOutput [3]: [country#21, state#20, count#531L]\nArguments: 0\n\n(6) AQEShuffleRead\nInput [3]: [country#21, state#20, count#531L]\nArguments: coalesced\n\n(7) HashAggregate [codegen id : 2]\nInput [3]: [country#21, state#20, count#531L]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#516L]\nResults [3]: [toprettystring(country#21, Some(Etc/UTC)) AS toprettystring(country)#524, toprettystring(state#20, Some(Etc/UTC)) AS toprettystring(state)#525, toprettystring(count(1)#516L, Some(Etc/UTC)) AS toprettystring(count(1))#526]\n\n(8) CollectLimit\nInput [3]: [toprettystring(country)#524, toprettystring(state)#525, toprettystring(count(1))#526]\nArguments: 21\n\n(9) Filter\nInput [2]: [state#20, country#21]\nCondition : (isnotnull(country#21) AND (country#21 = USA))\n\n(10) HashAggregate\nInput [2]: [state#20, country#21]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#530L]\nResults [3]: [country#21, state#20, count#531L]\n\n(11) Exchange\nInput [3]: [country#21, state#20, count#531L]\nArguments: hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=266]\n\n(12) HashAggregate\nInput [3]: [country#21, state#20, count#531L]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#516L]\nResults [3]: [toprettystring(country#21, Some(Etc/UTC)) AS toprettystring(country)#524, toprettystring(state#20, Some(Etc/UTC)) AS toprettystring(state)#525, toprettystring(count(1)#516L, Some(Etc/UTC)) AS toprettystring(count(1))#526]\n\n(13) CollectLimit\nInput [3]: [toprettystring(country)#524, toprettystring(state)#525, toprettystring(count(1))#526]\nArguments: 21\n\n(14) AdaptiveSparkPlan\nOutput [3]: [toprettystring(country)#524, toprettystring(state)#525, toprettystring(count(1))#526]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 21","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=280]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[partial_count(1)])","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(country#21) AND (country#21 = USA))","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [state#20,country#21] Batched: false, DataFilters: [isnotnull(country#21), (country#21 = USA)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(country), EqualTo(country,USA)], ReadSchema: struct<state:string,country:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<state:string,country:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(country), EqualTo(country,USA)]","DataFilters":"[isnotnull(country#21), (country#21 = USA)]"},"metrics":[{"name":"number of output rows","accumulatorId":1152,"metricType":"sum"},{"name":"number of files read","accumulatorId":1153,"metricType":"sum"},{"name":"metadata time","accumulatorId":1154,"metricType":"timing"},{"name":"size of files read","accumulatorId":1155,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1211,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1207,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1208,"metricType":"timing"},{"name":"peak memory","accumulatorId":1206,"metricType":"size"},{"name":"number of output rows","accumulatorId":1205,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1210,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1209,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1204,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1202,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1196,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1203,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1197,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1194,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1191,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1200,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1193,"metricType":"sum"},{"name":"records read","accumulatorId":1190,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1188,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1189,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1186,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1192,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1185,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1195,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1184,"metricType":"sum"},{"name":"data size","accumulatorId":1182,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":1198,"metricType":"size"},{"name":"number of partitions","accumulatorId":1183,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":1199,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1187,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1201,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":1274,"metricType":"sum"},{"name":"partition data size","accumulatorId":1275,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":1276,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1270,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1271,"metricType":"timing"},{"name":"peak memory","accumulatorId":1269,"metricType":"size"},{"name":"number of output rows","accumulatorId":1268,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1273,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1272,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1267,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1265,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1259,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1266,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1260,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1257,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1254,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1263,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1256,"metricType":"sum"},{"name":"records read","accumulatorId":1253,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1251,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1252,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1249,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1255,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1248,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1258,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1247,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":1261,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":1262,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1250,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1264,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":13,"accumUpdates":[[1274,1],[1276,1],[1275,4537]]}
{"Event":"SparkListenerJobStart","Job ID":17,"Submission Time":1725364410956,"Stage Infos":[{"Stage ID":21,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":61,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"137\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[60],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":60,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"138\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[59],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":59,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"142\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[58],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":58,"Name":"FileScanRDD","Scope":"{\"id\":\"142\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":22,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":64,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"147\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[63],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":63,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"143\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[62],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":62,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"146\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[61],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[21],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[21,22],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"13","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364393521_120942272","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"13","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":22,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":64,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"147\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[63],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":63,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"143\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[62],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":62,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"146\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[61],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[21],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364410985,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"13","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364393521_120942272","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"13","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":22,"Stage Attempt ID":0,"Task Info":{"Task ID":19,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364411055,"Executor ID":"0","Host":"172.17.0.9","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":22,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":19,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364411055,"Executor ID":"0","Host":"172.17.0.9","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364411554,"Failed":false,"Killed":false,"Accumulables":[{"ID":1185,"Name":"local blocks read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1188,"Name":"local bytes read","Update":"4431","Value":"4431","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1189,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1190,"Name":"records read","Update":"57","Value":"57","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1268,"Name":"number of output rows","Update":"21","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1269,"Name":"peak memory","Update":"17039344","Value":"17039344","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1271,"Name":"time in aggregation build","Update":"6","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1272,"Name":"avg hash probes per key","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1277,"Name":"internal.metrics.executorDeserializeTime","Update":222,"Value":222,"Internal":true,"Count Failed Values":true},{"ID":1278,"Name":"internal.metrics.executorDeserializeCpuTime","Update":18630878,"Value":18630878,"Internal":true,"Count Failed Values":true},{"ID":1279,"Name":"internal.metrics.executorRunTime","Update":219,"Value":219,"Internal":true,"Count Failed Values":true},{"ID":1280,"Name":"internal.metrics.executorCpuTime","Update":58408963,"Value":58408963,"Internal":true,"Count Failed Values":true},{"ID":1281,"Name":"internal.metrics.resultSize","Update":5469,"Value":5469,"Internal":true,"Count Failed Values":true},{"ID":1282,"Name":"internal.metrics.jvmGCTime","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":1286,"Name":"internal.metrics.peakExecutionMemory","Update":17039344,"Value":17039344,"Internal":true,"Count Failed Values":true},{"ID":1288,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1289,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":1290,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1291,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1292,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":4431,"Value":4431,"Internal":true,"Count Failed Values":true},{"ID":1293,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1294,"Name":"internal.metrics.shuffle.read.recordsRead","Update":57,"Value":57,"Internal":true,"Count Failed Values":true},{"ID":1295,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1296,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1297,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1298,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1299,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1300,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1301,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1302,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1303,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1304,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":222,"Executor Deserialize CPU Time":18630878,"Executor Run Time":219,"Executor CPU Time":58408963,"Peak Execution Memory":17039344,"Result Size":5469,"JVM GC Time":6,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":4431,"Total Records Read":57,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":22,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":64,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"147\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[63],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":63,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"143\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[62],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":62,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"146\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[61],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[21],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364410985,"Completion Time":1725364411573,"Accumulables":[{"ID":1185,"Name":"local blocks read","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1188,"Name":"local bytes read","Value":"4431","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1189,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1190,"Name":"records read","Value":"57","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1268,"Name":"number of output rows","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1269,"Name":"peak memory","Value":"17039344","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1271,"Name":"time in aggregation build","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1272,"Name":"avg hash probes per key","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1277,"Name":"internal.metrics.executorDeserializeTime","Value":222,"Internal":true,"Count Failed Values":true},{"ID":1278,"Name":"internal.metrics.executorDeserializeCpuTime","Value":18630878,"Internal":true,"Count Failed Values":true},{"ID":1279,"Name":"internal.metrics.executorRunTime","Value":219,"Internal":true,"Count Failed Values":true},{"ID":1280,"Name":"internal.metrics.executorCpuTime","Value":58408963,"Internal":true,"Count Failed Values":true},{"ID":1281,"Name":"internal.metrics.resultSize","Value":5469,"Internal":true,"Count Failed Values":true},{"ID":1282,"Name":"internal.metrics.jvmGCTime","Value":6,"Internal":true,"Count Failed Values":true},{"ID":1286,"Name":"internal.metrics.peakExecutionMemory","Value":17039344,"Internal":true,"Count Failed Values":true},{"ID":1288,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1289,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":1,"Internal":true,"Count Failed Values":true},{"ID":1290,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1291,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1292,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":4431,"Internal":true,"Count Failed Values":true},{"ID":1293,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1294,"Name":"internal.metrics.shuffle.read.recordsRead","Value":57,"Internal":true,"Count Failed Values":true},{"ID":1295,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1296,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1297,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1298,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1299,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1300,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1301,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1302,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1303,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1304,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":17,"Completion Time":1725364411584,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":13,"time":1725364411724,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":14,"rootExecutionId":14,"description":"Started by: admin","details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (7)\n+- CollectLimit (6)\n   +- HashAggregate (5)\n      +- Exchange (4)\n         +- HashAggregate (3)\n            +- Filter (2)\n               +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput [2]: [state#20, country#21]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(country), EqualTo(country,USA)]\nReadSchema: struct<state:string,country:string>\n\n(2) Filter\nInput [2]: [state#20, country#21]\nCondition : (isnotnull(country#21) AND (country#21 = USA))\n\n(3) HashAggregate\nInput [2]: [state#20, country#21]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#556L]\nResults [3]: [country#21, state#20, count#557L]\n\n(4) Exchange\nInput [3]: [country#21, state#20, count#557L]\nArguments: hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=323]\n\n(5) HashAggregate\nInput [3]: [country#21, state#20, count#557L]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#542L]\nResults [3]: [toprettystring(country#21, Some(Etc/UTC)) AS toprettystring(country)#550, toprettystring(state#20, Some(Etc/UTC)) AS toprettystring(state)#551, toprettystring(count(1)#542L, Some(Etc/UTC)) AS toprettystring(count)#552]\n\n(6) CollectLimit\nInput [3]: [toprettystring(country)#550, toprettystring(state)#551, toprettystring(count)#552]\nArguments: 21\n\n(7) AdaptiveSparkPlan\nOutput [3]: [toprettystring(country)#550, toprettystring(state)#551, toprettystring(count)#552]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 21","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[count(1)])","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=323]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[partial_count(1)])","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(country#21) AND (country#21 = USA))","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [state#20,country#21] Batched: false, DataFilters: [isnotnull(country#21), (country#21 = USA)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(country), EqualTo(country,USA)], ReadSchema: struct<state:string,country:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<state:string,country:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(country), EqualTo(country,USA)]","DataFilters":"[isnotnull(country#21), (country#21 = USA)]"},"metrics":[{"name":"number of output rows","accumulatorId":1367,"metricType":"sum"},{"name":"number of files read","accumulatorId":1368,"metricType":"sum"},{"name":"metadata time","accumulatorId":1369,"metricType":"timing"},{"name":"size of files read","accumulatorId":1370,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1366,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1362,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1363,"metricType":"timing"},{"name":"peak memory","accumulatorId":1361,"metricType":"size"},{"name":"number of output rows","accumulatorId":1360,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1365,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1364,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1358,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1352,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1359,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1353,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1350,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1347,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1356,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1349,"metricType":"sum"},{"name":"records read","accumulatorId":1346,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1344,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1345,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1342,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1348,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1341,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1351,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1340,"metricType":"sum"},{"name":"data size","accumulatorId":1338,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":1354,"metricType":"size"},{"name":"number of partitions","accumulatorId":1339,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":1355,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1343,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1357,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1334,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1335,"metricType":"timing"},{"name":"peak memory","accumulatorId":1333,"metricType":"size"},{"name":"number of output rows","accumulatorId":1332,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1337,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1336,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1330,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1324,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1331,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1325,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1322,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1319,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1328,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1321,"metricType":"sum"},{"name":"records read","accumulatorId":1318,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1316,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1317,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1314,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1320,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1313,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1323,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1312,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":1326,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":1327,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1315,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1329,"metricType":"size"}]}],"metadata":{},"metrics":[]},"time":1725364427564,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":14,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (13)\n+- == Current Plan ==\n   CollectLimit (7)\n   +- HashAggregate (6)\n      +- ShuffleQueryStage (5)\n         +- Exchange (4)\n            +- * HashAggregate (3)\n               +- * Filter (2)\n                  +- Scan csv  (1)\n+- == Initial Plan ==\n   CollectLimit (12)\n   +- HashAggregate (11)\n      +- Exchange (10)\n         +- HashAggregate (9)\n            +- Filter (8)\n               +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput [2]: [state#20, country#21]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(country), EqualTo(country,USA)]\nReadSchema: struct<state:string,country:string>\n\n(2) Filter [codegen id : 1]\nInput [2]: [state#20, country#21]\nCondition : (isnotnull(country#21) AND (country#21 = USA))\n\n(3) HashAggregate [codegen id : 1]\nInput [2]: [state#20, country#21]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#556L]\nResults [3]: [country#21, state#20, count#557L]\n\n(4) Exchange\nInput [3]: [country#21, state#20, count#557L]\nArguments: hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=337]\n\n(5) ShuffleQueryStage\nOutput [3]: [country#21, state#20, count#557L]\nArguments: 0\n\n(6) HashAggregate\nInput [3]: [country#21, state#20, count#557L]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#542L]\nResults [3]: [toprettystring(country#21, Some(Etc/UTC)) AS toprettystring(country)#550, toprettystring(state#20, Some(Etc/UTC)) AS toprettystring(state)#551, toprettystring(count(1)#542L, Some(Etc/UTC)) AS toprettystring(count)#552]\n\n(7) CollectLimit\nInput [3]: [toprettystring(country)#550, toprettystring(state)#551, toprettystring(count)#552]\nArguments: 21\n\n(8) Filter\nInput [2]: [state#20, country#21]\nCondition : (isnotnull(country#21) AND (country#21 = USA))\n\n(9) HashAggregate\nInput [2]: [state#20, country#21]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#556L]\nResults [3]: [country#21, state#20, count#557L]\n\n(10) Exchange\nInput [3]: [country#21, state#20, count#557L]\nArguments: hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=323]\n\n(11) HashAggregate\nInput [3]: [country#21, state#20, count#557L]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#542L]\nResults [3]: [toprettystring(country#21, Some(Etc/UTC)) AS toprettystring(country)#550, toprettystring(state#20, Some(Etc/UTC)) AS toprettystring(state)#551, toprettystring(count(1)#542L, Some(Etc/UTC)) AS toprettystring(count)#552]\n\n(12) CollectLimit\nInput [3]: [toprettystring(country)#550, toprettystring(state)#551, toprettystring(count)#552]\nArguments: 21\n\n(13) AdaptiveSparkPlan\nOutput [3]: [toprettystring(country)#550, toprettystring(state)#551, toprettystring(count)#552]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 21","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[count(1)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=337]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[partial_count(1)])","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(country#21) AND (country#21 = USA))","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [state#20,country#21] Batched: false, DataFilters: [isnotnull(country#21), (country#21 = USA)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(country), EqualTo(country,USA)], ReadSchema: struct<state:string,country:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<state:string,country:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(country), EqualTo(country,USA)]","DataFilters":"[isnotnull(country#21), (country#21 = USA)]"},"metrics":[{"name":"number of output rows","accumulatorId":1367,"metricType":"sum"},{"name":"number of files read","accumulatorId":1368,"metricType":"sum"},{"name":"metadata time","accumulatorId":1369,"metricType":"timing"},{"name":"size of files read","accumulatorId":1370,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1426,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1422,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1423,"metricType":"timing"},{"name":"peak memory","accumulatorId":1421,"metricType":"size"},{"name":"number of output rows","accumulatorId":1420,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1425,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1424,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1419,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1417,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1411,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1418,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1412,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1409,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1406,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1415,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1408,"metricType":"sum"},{"name":"records read","accumulatorId":1405,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1403,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1404,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1401,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1407,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1400,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1410,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1399,"metricType":"sum"},{"name":"data size","accumulatorId":1397,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":1413,"metricType":"size"},{"name":"number of partitions","accumulatorId":1398,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":1414,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1402,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1416,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1393,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1394,"metricType":"timing"},{"name":"peak memory","accumulatorId":1392,"metricType":"size"},{"name":"number of output rows","accumulatorId":1391,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1396,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1395,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1389,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1383,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1390,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1384,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1381,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1378,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1387,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1380,"metricType":"sum"},{"name":"records read","accumulatorId":1377,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1375,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1376,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1373,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1379,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1372,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1382,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1371,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":1385,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":1386,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1374,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1388,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":14,"accumUpdates":[[1368,1],[1369,6],[1370,244438]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":14,"accumUpdates":[[1398,200]]}
{"Event":"SparkListenerJobStart","Job ID":18,"Submission Time":1725364428004,"Stage Infos":[{"Stage ID":23,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":68,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"155\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[67],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":67,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"156\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[66],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":66,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"160\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[65],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":65,"Name":"FileScanRDD","Scope":"{\"id\":\"160\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[23],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"155\",\"name\":\"Exchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"14","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364409005_1925841353","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"14","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":23,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":68,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"155\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[67],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":67,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"156\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[66],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":66,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"160\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[65],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":65,"Name":"FileScanRDD","Scope":"{\"id\":\"160\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364428040,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"155\",\"name\":\"Exchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"14","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364409005_1925841353","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"14","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":23,"Stage Attempt ID":0,"Task Info":{"Task ID":20,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364428115,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":23,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":20,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364428115,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364428408,"Failed":false,"Killed":false,"Accumulables":[{"ID":1367,"Name":"number of output rows","Update":"3372","Value":"3372","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1397,"Name":"data size","Update":"2736","Value":"2736","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1416,"Name":"shuffle bytes written","Update":"4431","Value":"4431","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1417,"Name":"shuffle records written","Update":"57","Value":"57","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1418,"Name":"shuffle write time","Update":"7741550","Value":"7741550","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1419,"Name":"duration","Update":"231","Value":"231","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1420,"Name":"number of output rows","Update":"57","Value":"57","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1421,"Name":"peak memory","Update":"262144","Value":"262144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1423,"Name":"time in aggregation build","Update":"209","Value":"209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1426,"Name":"number of output rows","Update":"3372","Value":"3372","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1427,"Name":"internal.metrics.executorDeserializeTime","Update":25,"Value":25,"Internal":true,"Count Failed Values":true},{"ID":1428,"Name":"internal.metrics.executorDeserializeCpuTime","Update":6885124,"Value":6885124,"Internal":true,"Count Failed Values":true},{"ID":1429,"Name":"internal.metrics.executorRunTime","Update":237,"Value":237,"Internal":true,"Count Failed Values":true},{"ID":1430,"Name":"internal.metrics.executorCpuTime","Update":38671500,"Value":38671500,"Internal":true,"Count Failed Values":true},{"ID":1431,"Name":"internal.metrics.resultSize","Update":2814,"Value":2814,"Internal":true,"Count Failed Values":true},{"ID":1432,"Name":"internal.metrics.jvmGCTime","Update":12,"Value":12,"Internal":true,"Count Failed Values":true},{"ID":1436,"Name":"internal.metrics.peakExecutionMemory","Update":262144,"Value":262144,"Internal":true,"Count Failed Values":true},{"ID":1455,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":4431,"Value":4431,"Internal":true,"Count Failed Values":true},{"ID":1456,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":57,"Value":57,"Internal":true,"Count Failed Values":true},{"ID":1457,"Name":"internal.metrics.shuffle.write.writeTime","Update":7741550,"Value":7741550,"Internal":true,"Count Failed Values":true},{"ID":1458,"Name":"internal.metrics.input.bytesRead","Update":244438,"Value":244438,"Internal":true,"Count Failed Values":true},{"ID":1459,"Name":"internal.metrics.input.recordsRead","Update":3372,"Value":3372,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":25,"Executor Deserialize CPU Time":6885124,"Executor Run Time":237,"Executor CPU Time":38671500,"Peak Execution Memory":262144,"Result Size":2814,"JVM GC Time":12,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":4431,"Shuffle Write Time":7741550,"Shuffle Records Written":57},"Input Metrics":{"Bytes Read":244438,"Records Read":3372},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":23,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":68,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"155\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[67],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":67,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"156\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[66],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":66,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"160\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[65],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":65,"Name":"FileScanRDD","Scope":"{\"id\":\"160\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364428040,"Completion Time":1725364428415,"Accumulables":[{"ID":1367,"Name":"number of output rows","Value":"3372","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1397,"Name":"data size","Value":"2736","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1416,"Name":"shuffle bytes written","Value":"4431","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1417,"Name":"shuffle records written","Value":"57","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1418,"Name":"shuffle write time","Value":"7741550","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1419,"Name":"duration","Value":"231","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1420,"Name":"number of output rows","Value":"57","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1421,"Name":"peak memory","Value":"262144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1423,"Name":"time in aggregation build","Value":"209","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1426,"Name":"number of output rows","Value":"3372","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1427,"Name":"internal.metrics.executorDeserializeTime","Value":25,"Internal":true,"Count Failed Values":true},{"ID":1428,"Name":"internal.metrics.executorDeserializeCpuTime","Value":6885124,"Internal":true,"Count Failed Values":true},{"ID":1429,"Name":"internal.metrics.executorRunTime","Value":237,"Internal":true,"Count Failed Values":true},{"ID":1430,"Name":"internal.metrics.executorCpuTime","Value":38671500,"Internal":true,"Count Failed Values":true},{"ID":1431,"Name":"internal.metrics.resultSize","Value":2814,"Internal":true,"Count Failed Values":true},{"ID":1432,"Name":"internal.metrics.jvmGCTime","Value":12,"Internal":true,"Count Failed Values":true},{"ID":1436,"Name":"internal.metrics.peakExecutionMemory","Value":262144,"Internal":true,"Count Failed Values":true},{"ID":1455,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":4431,"Internal":true,"Count Failed Values":true},{"ID":1456,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":57,"Internal":true,"Count Failed Values":true},{"ID":1457,"Name":"internal.metrics.shuffle.write.writeTime","Value":7741550,"Internal":true,"Count Failed Values":true},{"ID":1458,"Name":"internal.metrics.input.bytesRead","Value":244438,"Internal":true,"Count Failed Values":true},{"ID":1459,"Name":"internal.metrics.input.recordsRead","Value":3372,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":18,"Completion Time":1725364428428,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":14,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (14)\n+- == Final Plan ==\n   CollectLimit (8)\n   +- * HashAggregate (7)\n      +- AQEShuffleRead (6)\n         +- ShuffleQueryStage (5), Statistics(sizeInBytes=2.7 KiB, rowCount=57)\n            +- Exchange (4)\n               +- * HashAggregate (3)\n                  +- * Filter (2)\n                     +- Scan csv  (1)\n+- == Initial Plan ==\n   CollectLimit (13)\n   +- HashAggregate (12)\n      +- Exchange (11)\n         +- HashAggregate (10)\n            +- Filter (9)\n               +- Scan csv  (1)\n\n\n(1) Scan csv \nOutput [2]: [state#20, country#21]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(country), EqualTo(country,USA)]\nReadSchema: struct<state:string,country:string>\n\n(2) Filter [codegen id : 1]\nInput [2]: [state#20, country#21]\nCondition : (isnotnull(country#21) AND (country#21 = USA))\n\n(3) HashAggregate [codegen id : 1]\nInput [2]: [state#20, country#21]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#556L]\nResults [3]: [country#21, state#20, count#557L]\n\n(4) Exchange\nInput [3]: [country#21, state#20, count#557L]\nArguments: hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=337]\n\n(5) ShuffleQueryStage\nOutput [3]: [country#21, state#20, count#557L]\nArguments: 0\n\n(6) AQEShuffleRead\nInput [3]: [country#21, state#20, count#557L]\nArguments: coalesced\n\n(7) HashAggregate [codegen id : 2]\nInput [3]: [country#21, state#20, count#557L]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#542L]\nResults [3]: [toprettystring(country#21, Some(Etc/UTC)) AS toprettystring(country)#550, toprettystring(state#20, Some(Etc/UTC)) AS toprettystring(state)#551, toprettystring(count(1)#542L, Some(Etc/UTC)) AS toprettystring(count)#552]\n\n(8) CollectLimit\nInput [3]: [toprettystring(country)#550, toprettystring(state)#551, toprettystring(count)#552]\nArguments: 21\n\n(9) Filter\nInput [2]: [state#20, country#21]\nCondition : (isnotnull(country#21) AND (country#21 = USA))\n\n(10) HashAggregate\nInput [2]: [state#20, country#21]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#556L]\nResults [3]: [country#21, state#20, count#557L]\n\n(11) Exchange\nInput [3]: [country#21, state#20, count#557L]\nArguments: hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=323]\n\n(12) HashAggregate\nInput [3]: [country#21, state#20, count#557L]\nKeys [2]: [country#21, state#20]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#542L]\nResults [3]: [toprettystring(country#21, Some(Etc/UTC)) AS toprettystring(country)#550, toprettystring(state#20, Some(Etc/UTC)) AS toprettystring(state)#551, toprettystring(count(1)#542L, Some(Etc/UTC)) AS toprettystring(count)#552]\n\n(13) CollectLimit\nInput [3]: [toprettystring(country)#550, toprettystring(state)#551, toprettystring(count)#552]\nArguments: 21\n\n(14) AdaptiveSparkPlan\nOutput [3]: [toprettystring(country)#550, toprettystring(state)#551, toprettystring(count)#552]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 21","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(country#21, state#20, 200), ENSURE_REQUIREMENTS, [plan_id=337]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[country#21, state#20], functions=[partial_count(1)])","children":[{"nodeName":"Filter","simpleString":"Filter (isnotnull(country#21) AND (country#21 = USA))","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [state#20,country#21] Batched: false, DataFilters: [isnotnull(country#21), (country#21 = USA)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(country), EqualTo(country,USA)], ReadSchema: struct<state:string,country:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<state:string,country:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(country), EqualTo(country,USA)]","DataFilters":"[isnotnull(country#21), (country#21 = USA)]"},"metrics":[{"name":"number of output rows","accumulatorId":1367,"metricType":"sum"},{"name":"number of files read","accumulatorId":1368,"metricType":"sum"},{"name":"metadata time","accumulatorId":1369,"metricType":"timing"},{"name":"size of files read","accumulatorId":1370,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1426,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1422,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1423,"metricType":"timing"},{"name":"peak memory","accumulatorId":1421,"metricType":"size"},{"name":"number of output rows","accumulatorId":1420,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1425,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1424,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1419,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1417,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1411,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1418,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1412,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1409,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1406,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1415,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1408,"metricType":"sum"},{"name":"records read","accumulatorId":1405,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1403,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1404,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1401,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1407,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1400,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1410,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1399,"metricType":"sum"},{"name":"data size","accumulatorId":1397,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":1413,"metricType":"size"},{"name":"number of partitions","accumulatorId":1398,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":1414,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1402,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1416,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":1489,"metricType":"sum"},{"name":"partition data size","accumulatorId":1490,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":1491,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":1485,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":1486,"metricType":"timing"},{"name":"peak memory","accumulatorId":1484,"metricType":"size"},{"name":"number of output rows","accumulatorId":1483,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":1488,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":1487,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1482,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1480,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1474,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1481,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1475,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1472,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1469,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1478,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1471,"metricType":"sum"},{"name":"records read","accumulatorId":1468,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1466,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1467,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1464,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1470,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1463,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1473,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1462,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":1476,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":1477,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1465,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1479,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":14,"accumUpdates":[[1489,1],[1491,1],[1490,4537]]}
{"Event":"SparkListenerJobStart","Job ID":19,"Submission Time":1725364428547,"Stage Infos":[{"Stage ID":24,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":68,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"155\",\"name\":\"Exchange\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[67],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":67,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"156\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[66],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":66,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"160\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[65],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":65,"Name":"FileScanRDD","Scope":"{\"id\":\"160\",\"name\":\"Scan csv \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":25,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":71,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"165\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[70],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":69,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"164\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[68],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":70,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"161\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[69],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[24],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[24,25],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"14","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364409005_1925841353","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"14","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":25,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":71,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"165\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[70],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":69,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"164\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[68],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":70,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"161\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[69],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[24],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364428572,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"14","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364409005_1925841353","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"14","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":25,"Stage Attempt ID":0,"Task Info":{"Task ID":21,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364428623,"Executor ID":"0","Host":"172.17.0.9","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":25,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":21,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364428623,"Executor ID":"0","Host":"172.17.0.9","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364428971,"Failed":false,"Killed":false,"Accumulables":[{"ID":1400,"Name":"local blocks read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1403,"Name":"local bytes read","Update":"4431","Value":"4431","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1404,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1405,"Name":"records read","Update":"57","Value":"57","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1483,"Name":"number of output rows","Update":"21","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1484,"Name":"peak memory","Update":"17039344","Value":"17039344","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1486,"Name":"time in aggregation build","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1487,"Name":"avg hash probes per key","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1492,"Name":"internal.metrics.executorDeserializeTime","Update":229,"Value":229,"Internal":true,"Count Failed Values":true},{"ID":1493,"Name":"internal.metrics.executorDeserializeCpuTime","Update":5738919,"Value":5738919,"Internal":true,"Count Failed Values":true},{"ID":1494,"Name":"internal.metrics.executorRunTime","Update":51,"Value":51,"Internal":true,"Count Failed Values":true},{"ID":1495,"Name":"internal.metrics.executorCpuTime","Update":8145792,"Value":8145792,"Internal":true,"Count Failed Values":true},{"ID":1496,"Name":"internal.metrics.resultSize","Update":5469,"Value":5469,"Internal":true,"Count Failed Values":true},{"ID":1497,"Name":"internal.metrics.jvmGCTime","Update":9,"Value":9,"Internal":true,"Count Failed Values":true},{"ID":1501,"Name":"internal.metrics.peakExecutionMemory","Update":17039344,"Value":17039344,"Internal":true,"Count Failed Values":true},{"ID":1503,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1504,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":1505,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1506,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1507,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":4431,"Value":4431,"Internal":true,"Count Failed Values":true},{"ID":1508,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1509,"Name":"internal.metrics.shuffle.read.recordsRead","Update":57,"Value":57,"Internal":true,"Count Failed Values":true},{"ID":1510,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1511,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1512,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1513,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1514,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1515,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1516,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1517,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1518,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":1519,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":229,"Executor Deserialize CPU Time":5738919,"Executor Run Time":51,"Executor CPU Time":8145792,"Peak Execution Memory":17039344,"Result Size":5469,"JVM GC Time":9,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":4431,"Total Records Read":57,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":25,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":71,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"165\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[70],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":69,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"164\",\"name\":\"AQEShuffleRead\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[68],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":70,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"161\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[69],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[24],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364428572,"Completion Time":1725364429093,"Accumulables":[{"ID":1400,"Name":"local blocks read","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1403,"Name":"local bytes read","Value":"4431","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1404,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1405,"Name":"records read","Value":"57","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1483,"Name":"number of output rows","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1484,"Name":"peak memory","Value":"17039344","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1486,"Name":"time in aggregation build","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1487,"Name":"avg hash probes per key","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1492,"Name":"internal.metrics.executorDeserializeTime","Value":229,"Internal":true,"Count Failed Values":true},{"ID":1493,"Name":"internal.metrics.executorDeserializeCpuTime","Value":5738919,"Internal":true,"Count Failed Values":true},{"ID":1494,"Name":"internal.metrics.executorRunTime","Value":51,"Internal":true,"Count Failed Values":true},{"ID":1495,"Name":"internal.metrics.executorCpuTime","Value":8145792,"Internal":true,"Count Failed Values":true},{"ID":1496,"Name":"internal.metrics.resultSize","Value":5469,"Internal":true,"Count Failed Values":true},{"ID":1497,"Name":"internal.metrics.jvmGCTime","Value":9,"Internal":true,"Count Failed Values":true},{"ID":1501,"Name":"internal.metrics.peakExecutionMemory","Value":17039344,"Internal":true,"Count Failed Values":true},{"ID":1503,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1504,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":1,"Internal":true,"Count Failed Values":true},{"ID":1505,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1506,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1507,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":4431,"Internal":true,"Count Failed Values":true},{"ID":1508,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1509,"Name":"internal.metrics.shuffle.read.recordsRead","Value":57,"Internal":true,"Count Failed Values":true},{"ID":1510,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1511,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1512,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1513,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1514,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1515,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1516,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1517,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1518,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":0,"Internal":true,"Count Failed Values":true},{"ID":1519,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":19,"Completion Time":1725364429103,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":14,"time":1725364429188,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":15,"rootExecutionId":15,"description":"Started by: admin","details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (15)\n+- CollectLimit (14)\n   +- Project (13)\n      +- BroadcastHashJoin LeftOuter BuildRight (12)\n         :- LocalLimit (8)\n         :  +- Project (7)\n         :     +- BroadcastHashJoin LeftOuter BuildRight (6)\n         :        :- LocalLimit (2)\n         :        :  +- Scan parquet  (1)\n         :        +- BroadcastExchange (5)\n         :           +- Filter (4)\n         :              +- Scan csv  (3)\n         +- BroadcastExchange (11)\n            +- Filter (10)\n               +- Scan csv  (9)\n\n\n(1) Scan parquet \nOutput [29]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nBatched: true\nLocation: InMemoryFileIndex [s3a://flight-bucket/refined/flights]\nReadSchema: struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>\n\n(2) LocalLimit\nInput [29]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nArguments: 1001\n\n(3) Scan csv \nOutput [3]: [iata#17, airport#18, city#19]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(iata)]\nReadSchema: struct<iata:string,airport:string,city:string>\n\n(4) Filter\nInput [3]: [iata#17, airport#18, city#19]\nCondition : isnotnull(iata#17)\n\n(5) BroadcastExchange\nInput [3]: [iata#17, airport#18, city#19]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=412]\n\n(6) BroadcastHashJoin\nLeft keys [1]: [origin#405]\nRight keys [1]: [iata#17]\nJoin type: LeftOuter\nJoin condition: None\n\n(7) Project\nOutput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nInput [32]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, iata#17, airport#18, city#19]\n\n(8) LocalLimit\nInput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nArguments: 1001\n\n(9) Scan csv \nOutput [3]: [iata#568, airport#569, city#570]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(iata)]\nReadSchema: struct<iata:string,airport:string,city:string>\n\n(10) Filter\nInput [3]: [iata#568, airport#569, city#570]\nCondition : isnotnull(iata#568)\n\n(11) BroadcastExchange\nInput [3]: [iata#568, airport#569, city#570]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=417]\n\n(12) BroadcastHashJoin\nLeft keys [1]: [destination#406]\nRight keys [1]: [iata#568]\nJoin type: LeftOuter\nJoin condition: None\n\n(13) Project\nOutput [33]: [airport#18 AS origin_airport#564, city#19 AS origin_city#565, airport#569 AS desitination_airport#566, city#570 AS destination_city#567, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nInput [34]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19, iata#568, airport#569, city#570]\n\n(14) CollectLimit\nInput [33]: [origin_airport#564, origin_city#565, desitination_airport#566, destination_city#567, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nArguments: 1001\n\n(15) AdaptiveSparkPlan\nOutput [33]: [origin_airport#564, origin_city#565, desitination_airport#566, destination_city#567, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 1001","children":[{"nodeName":"Project","simpleString":"Project [airport#18 AS origin_airport#564, city#19 AS origin_city#565, airport#569 AS desitination_airport#566, city#570 AS destination_city#567, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, ... 9 more fields]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [destination#406], [iata#568], LeftOuter, BuildRight, false","children":[{"nodeName":"LocalLimit","simpleString":"LocalLimit 1001","children":[{"nodeName":"Project","simpleString":"Project [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, ... 7 more fields]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [origin#405], [iata#17], LeftOuter, BuildRight, false","children":[{"nodeName":"LocalLimit","simpleString":"LocalLimit 1001","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [dayOfMonth#391,dayOfWeek#392,depTime#393,crsDepTime#394,arrTime#395,crsArrTime#396,uniqueCarrier#397,flightNum#398,tailNum#399,actualElapsedTime#400,crsElapsedTime#401,airTime#402,arrDelay#403,depDelay#404,origin#405,destination#406,distance#407,taxiIn#408,taxiOut#409,cancelled#410,cancellationCode#411,diverted#412,carrierDelay#413,weatherDelay#414,... 5 more fields] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueC...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights]","ReadSchema":"struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":1551,"metricType":"sum"},{"name":"scan time","accumulatorId":1550,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":1555,"metricType":"timing"},{"name":"metadata time","accumulatorId":1552,"metricType":"timing"},{"name":"size of files read","accumulatorId":1553,"metricType":"size"},{"name":"number of output rows","accumulatorId":1549,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":1554,"metricType":"sum"}]}],"metadata":{},"metrics":[]},{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=412]","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(iata#17)","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [iata#17,airport#18,city#19] Batched: false, DataFilters: [isnotnull(iata#17)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(iata)], ReadSchema: struct<iata:string,airport:string,city:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<iata:string,airport:string,city:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(iata)]","DataFilters":"[isnotnull(iata#17)]"},"metrics":[{"name":"number of output rows","accumulatorId":1562,"metricType":"sum"},{"name":"number of files read","accumulatorId":1563,"metricType":"sum"},{"name":"metadata time","accumulatorId":1564,"metricType":"timing"},{"name":"size of files read","accumulatorId":1565,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1561,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":1560,"metricType":"timing"},{"name":"time to build","accumulatorId":1559,"metricType":"timing"},{"name":"time to collect","accumulatorId":1558,"metricType":"timing"},{"name":"number of output rows","accumulatorId":1557,"metricType":"sum"},{"name":"data size","accumulatorId":1556,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1548,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]},{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=417]","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(iata#568)","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [iata#568,airport#569,city#570] Batched: false, DataFilters: [isnotnull(iata#568)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(iata)], ReadSchema: struct<iata:string,airport:string,city:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<iata:string,airport:string,city:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(iata)]","DataFilters":"[isnotnull(iata#568)]"},"metrics":[{"name":"number of output rows","accumulatorId":1572,"metricType":"sum"},{"name":"number of files read","accumulatorId":1573,"metricType":"sum"},{"name":"metadata time","accumulatorId":1574,"metricType":"timing"},{"name":"size of files read","accumulatorId":1575,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1571,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":1570,"metricType":"timing"},{"name":"time to build","accumulatorId":1569,"metricType":"timing"},{"name":"time to collect","accumulatorId":1568,"metricType":"timing"},{"name":"number of output rows","accumulatorId":1567,"metricType":"sum"},{"name":"data size","accumulatorId":1566,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1547,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1545,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1539,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1546,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1540,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1537,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1534,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1543,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1536,"metricType":"sum"},{"name":"records read","accumulatorId":1533,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1531,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1532,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1529,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1535,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1528,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1538,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1527,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":1541,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":1542,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1530,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1544,"metricType":"size"}]}],"metadata":{},"metrics":[]},"time":1725364437477,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":15,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (26)\n+- == Current Plan ==\n   CollectLimit (14)\n   +- Project (13)\n      +- BroadcastHashJoin LeftOuter BuildRight (12)\n         :- LocalLimit (9)\n         :  +- Project (8)\n         :     +- BroadcastHashJoin LeftOuter BuildRight (7)\n         :        :- LocalLimit (2)\n         :        :  +- Scan parquet  (1)\n         :        +- BroadcastQueryStage (6)\n         :           +- BroadcastExchange (5)\n         :              +- * Filter (4)\n         :                 +- Scan csv  (3)\n         +- BroadcastQueryStage (11)\n            +- ReusedExchange (10)\n+- == Initial Plan ==\n   CollectLimit (25)\n   +- Project (24)\n      +- BroadcastHashJoin LeftOuter BuildRight (23)\n         :- LocalLimit (19)\n         :  +- Project (18)\n         :     +- BroadcastHashJoin LeftOuter BuildRight (17)\n         :        :- LocalLimit (2)\n         :        :  +- Scan parquet  (1)\n         :        +- BroadcastExchange (16)\n         :           +- Filter (15)\n         :              +- Scan csv  (3)\n         +- BroadcastExchange (22)\n            +- Filter (21)\n               +- Scan csv  (20)\n\n\n(1) Scan parquet \nOutput [29]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nBatched: true\nLocation: InMemoryFileIndex [s3a://flight-bucket/refined/flights]\nReadSchema: struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>\n\n(2) LocalLimit\nInput [29]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nArguments: 1001\n\n(3) Scan csv \nOutput [3]: [iata#17, airport#18, city#19]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(iata)]\nReadSchema: struct<iata:string,airport:string,city:string>\n\n(4) Filter [codegen id : 1]\nInput [3]: [iata#17, airport#18, city#19]\nCondition : isnotnull(iata#17)\n\n(5) BroadcastExchange\nInput [3]: [iata#17, airport#18, city#19]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=428]\n\n(6) BroadcastQueryStage\nOutput [3]: [iata#17, airport#18, city#19]\nArguments: 0\n\n(7) BroadcastHashJoin\nLeft keys [1]: [origin#405]\nRight keys [1]: [iata#17]\nJoin type: LeftOuter\nJoin condition: None\n\n(8) Project\nOutput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nInput [32]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, iata#17, airport#18, city#19]\n\n(9) LocalLimit\nInput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nArguments: 1001\n\n(10) ReusedExchange [Reuses operator id: 5]\nOutput [3]: [iata#568, airport#569, city#570]\n\n(11) BroadcastQueryStage\nOutput [3]: [iata#568, airport#569, city#570]\nArguments: 2\n\n(12) BroadcastHashJoin\nLeft keys [1]: [destination#406]\nRight keys [1]: [iata#568]\nJoin type: LeftOuter\nJoin condition: None\n\n(13) Project\nOutput [33]: [airport#18 AS origin_airport#564, city#19 AS origin_city#565, airport#569 AS desitination_airport#566, city#570 AS destination_city#567, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nInput [34]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19, iata#568, airport#569, city#570]\n\n(14) CollectLimit\nInput [33]: [origin_airport#564, origin_city#565, desitination_airport#566, destination_city#567, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nArguments: 1001\n\n(15) Filter\nInput [3]: [iata#17, airport#18, city#19]\nCondition : isnotnull(iata#17)\n\n(16) BroadcastExchange\nInput [3]: [iata#17, airport#18, city#19]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=412]\n\n(17) BroadcastHashJoin\nLeft keys [1]: [origin#405]\nRight keys [1]: [iata#17]\nJoin type: LeftOuter\nJoin condition: None\n\n(18) Project\nOutput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nInput [32]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, iata#17, airport#18, city#19]\n\n(19) LocalLimit\nInput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nArguments: 1001\n\n(20) Scan csv \nOutput [3]: [iata#568, airport#569, city#570]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(iata)]\nReadSchema: struct<iata:string,airport:string,city:string>\n\n(21) Filter\nInput [3]: [iata#568, airport#569, city#570]\nCondition : isnotnull(iata#568)\n\n(22) BroadcastExchange\nInput [3]: [iata#568, airport#569, city#570]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=417]\n\n(23) BroadcastHashJoin\nLeft keys [1]: [destination#406]\nRight keys [1]: [iata#568]\nJoin type: LeftOuter\nJoin condition: None\n\n(24) Project\nOutput [33]: [airport#18 AS origin_airport#564, city#19 AS origin_city#565, airport#569 AS desitination_airport#566, city#570 AS destination_city#567, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nInput [34]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19, iata#568, airport#569, city#570]\n\n(25) CollectLimit\nInput [33]: [origin_airport#564, origin_city#565, desitination_airport#566, destination_city#567, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nArguments: 1001\n\n(26) AdaptiveSparkPlan\nOutput [33]: [origin_airport#564, origin_city#565, desitination_airport#566, destination_city#567, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 1001","children":[{"nodeName":"Project","simpleString":"Project [airport#18 AS origin_airport#564, city#19 AS origin_city#565, airport#569 AS desitination_airport#566, city#570 AS destination_city#567, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, ... 9 more fields]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [destination#406], [iata#568], LeftOuter, BuildRight, false","children":[{"nodeName":"LocalLimit","simpleString":"LocalLimit 1001","children":[{"nodeName":"Project","simpleString":"Project [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, ... 7 more fields]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [origin#405], [iata#17], LeftOuter, BuildRight, false","children":[{"nodeName":"LocalLimit","simpleString":"LocalLimit 1001","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [dayOfMonth#391,dayOfWeek#392,depTime#393,crsDepTime#394,arrTime#395,crsArrTime#396,uniqueCarrier#397,flightNum#398,tailNum#399,actualElapsedTime#400,crsElapsedTime#401,airTime#402,arrDelay#403,depDelay#404,origin#405,destination#406,distance#407,taxiIn#408,taxiOut#409,cancelled#410,cancellationCode#411,diverted#412,carrierDelay#413,weatherDelay#414,... 5 more fields] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueC...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights]","ReadSchema":"struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":1551,"metricType":"sum"},{"name":"scan time","accumulatorId":1550,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":1555,"metricType":"timing"},{"name":"metadata time","accumulatorId":1552,"metricType":"timing"},{"name":"size of files read","accumulatorId":1553,"metricType":"size"},{"name":"number of output rows","accumulatorId":1549,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":1554,"metricType":"sum"}]}],"metadata":{},"metrics":[]},{"nodeName":"BroadcastQueryStage","simpleString":"BroadcastQueryStage 0","children":[{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=428]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(iata#17)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [iata#17,airport#18,city#19] Batched: false, DataFilters: [isnotnull(iata#17)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(iata)], ReadSchema: struct<iata:string,airport:string,city:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<iata:string,airport:string,city:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(iata)]","DataFilters":"[isnotnull(iata#17)]"},"metrics":[{"name":"number of output rows","accumulatorId":1562,"metricType":"sum"},{"name":"number of files read","accumulatorId":1563,"metricType":"sum"},{"name":"metadata time","accumulatorId":1564,"metricType":"timing"},{"name":"size of files read","accumulatorId":1565,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1604,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1603,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":1602,"metricType":"timing"},{"name":"time to build","accumulatorId":1601,"metricType":"timing"},{"name":"time to collect","accumulatorId":1600,"metricType":"timing"},{"name":"number of output rows","accumulatorId":1599,"metricType":"sum"},{"name":"data size","accumulatorId":1598,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1597,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]},{"nodeName":"BroadcastQueryStage","simpleString":"BroadcastQueryStage 2","children":[{"nodeName":"ReusedExchange","simpleString":"ReusedExchange [iata#568, airport#569, city#570], BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=428]","children":[{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=428]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(iata#17)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [iata#17,airport#18,city#19] Batched: false, DataFilters: [isnotnull(iata#17)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(iata)], ReadSchema: struct<iata:string,airport:string,city:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<iata:string,airport:string,city:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(iata)]","DataFilters":"[isnotnull(iata#17)]"},"metrics":[{"name":"number of output rows","accumulatorId":1562,"metricType":"sum"},{"name":"number of files read","accumulatorId":1563,"metricType":"sum"},{"name":"metadata time","accumulatorId":1564,"metricType":"timing"},{"name":"size of files read","accumulatorId":1565,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1604,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1603,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":1602,"metricType":"timing"},{"name":"time to build","accumulatorId":1601,"metricType":"timing"},{"name":"time to collect","accumulatorId":1600,"metricType":"timing"},{"name":"number of output rows","accumulatorId":1599,"metricType":"sum"},{"name":"data size","accumulatorId":1598,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1596,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1594,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1588,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1595,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1589,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1586,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1583,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1592,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1585,"metricType":"sum"},{"name":"records read","accumulatorId":1582,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1580,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1581,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1578,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1584,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1577,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1587,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1576,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":1590,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":1591,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1579,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1593,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":15,"accumUpdates":[[1563,1],[1564,8],[1565,244438]]}
{"Event":"SparkListenerJobStart","Job ID":20,"Submission Time":1725364438023,"Stage Infos":[{"Stage ID":26,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Number of Tasks":1,"RDD Info":[{"RDD ID":75,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"173\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[74],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":73,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"178\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[72],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":74,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"175\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[73],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":72,"Name":"FileScanRDD","Scope":"{\"id\":\"178\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:219)\njava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[26],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"173\",\"name\":\"BroadcastExchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"true","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","spark.job.tags":"broadcast exchange (runId 8762a770-d883-40bc-bd10-0665c2471b49)","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"15","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364427091_91575184","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"15","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":26,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Number of Tasks":1,"RDD Info":[{"RDD ID":75,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"173\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[74],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":73,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"178\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[72],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":74,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"175\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[73],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":72,"Name":"FileScanRDD","Scope":"{\"id\":\"178\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:219)\njava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364438048,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"173\",\"name\":\"BroadcastExchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"true","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","spark.job.tags":"broadcast exchange (runId 8762a770-d883-40bc-bd10-0665c2471b49)","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"15","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364427091_91575184","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"15","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":26,"Stage Attempt ID":0,"Task Info":{"Task ID":22,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364438095,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":26,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":22,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364438095,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364438391,"Failed":false,"Killed":false,"Accumulables":[{"ID":1562,"Name":"number of output rows","Update":"3376","Value":"3376","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1603,"Name":"duration","Update":"89","Value":"89","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1604,"Name":"number of output rows","Update":"3376","Value":"3376","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1605,"Name":"internal.metrics.executorDeserializeTime","Update":22,"Value":22,"Internal":true,"Count Failed Values":true},{"ID":1606,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8344210,"Value":8344210,"Internal":true,"Count Failed Values":true},{"ID":1607,"Name":"internal.metrics.executorRunTime","Update":243,"Value":243,"Internal":true,"Count Failed Values":true},{"ID":1608,"Name":"internal.metrics.executorCpuTime","Update":47657833,"Value":47657833,"Internal":true,"Count Failed Values":true},{"ID":1609,"Name":"internal.metrics.resultSize","Update":123229,"Value":123229,"Internal":true,"Count Failed Values":true},{"ID":1610,"Name":"internal.metrics.jvmGCTime","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":1636,"Name":"internal.metrics.input.bytesRead","Update":244438,"Value":244438,"Internal":true,"Count Failed Values":true},{"ID":1637,"Name":"internal.metrics.input.recordsRead","Update":3376,"Value":3376,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":22,"Executor Deserialize CPU Time":8344210,"Executor Run Time":243,"Executor CPU Time":47657833,"Peak Execution Memory":0,"Result Size":123229,"JVM GC Time":4,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":244438,"Records Read":3376},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":26,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Number of Tasks":1,"RDD Info":[{"RDD ID":75,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"173\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[74],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":73,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"178\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[72],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":74,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"175\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[73],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":72,"Name":"FileScanRDD","Scope":"{\"id\":\"178\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:219)\njava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364438048,"Completion Time":1725364438404,"Accumulables":[{"ID":1562,"Name":"number of output rows","Value":"3376","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1603,"Name":"duration","Value":"89","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1604,"Name":"number of output rows","Value":"3376","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1605,"Name":"internal.metrics.executorDeserializeTime","Value":22,"Internal":true,"Count Failed Values":true},{"ID":1606,"Name":"internal.metrics.executorDeserializeCpuTime","Value":8344210,"Internal":true,"Count Failed Values":true},{"ID":1607,"Name":"internal.metrics.executorRunTime","Value":243,"Internal":true,"Count Failed Values":true},{"ID":1608,"Name":"internal.metrics.executorCpuTime","Value":47657833,"Internal":true,"Count Failed Values":true},{"ID":1609,"Name":"internal.metrics.resultSize","Value":123229,"Internal":true,"Count Failed Values":true},{"ID":1610,"Name":"internal.metrics.jvmGCTime","Value":4,"Internal":true,"Count Failed Values":true},{"ID":1636,"Name":"internal.metrics.input.bytesRead","Value":244438,"Internal":true,"Count Failed Values":true},{"ID":1637,"Name":"internal.metrics.input.recordsRead","Value":3376,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":20,"Completion Time":1725364438405,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":15,"accumUpdates":[[1602,171],[1601,187],[1600,859],[1599,3376],[1598,2228208]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":15,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (28)\n+- == Final Plan ==\n   CollectLimit (15)\n   +- * Project (14)\n      +- * BroadcastHashJoin LeftOuter BuildRight (13)\n         :- * LocalLimit (10)\n         :  +- * Project (9)\n         :     +- * BroadcastHashJoin LeftOuter BuildRight (8)\n         :        :- * LocalLimit (3)\n         :        :  +- * ColumnarToRow (2)\n         :        :     +- Scan parquet  (1)\n         :        +- BroadcastQueryStage (7), Statistics(sizeInBytes=2.1 MiB, rowCount=3.38E+3)\n         :           +- BroadcastExchange (6)\n         :              +- * Filter (5)\n         :                 +- Scan csv  (4)\n         +- BroadcastQueryStage (12), Statistics(sizeInBytes=2.1 MiB, rowCount=3.38E+3)\n            +- ReusedExchange (11)\n+- == Initial Plan ==\n   CollectLimit (27)\n   +- Project (26)\n      +- BroadcastHashJoin LeftOuter BuildRight (25)\n         :- LocalLimit (21)\n         :  +- Project (20)\n         :     +- BroadcastHashJoin LeftOuter BuildRight (19)\n         :        :- LocalLimit (16)\n         :        :  +- Scan parquet  (1)\n         :        +- BroadcastExchange (18)\n         :           +- Filter (17)\n         :              +- Scan csv  (4)\n         +- BroadcastExchange (24)\n            +- Filter (23)\n               +- Scan csv  (22)\n\n\n(1) Scan parquet \nOutput [29]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nBatched: true\nLocation: InMemoryFileIndex [s3a://flight-bucket/refined/flights]\nReadSchema: struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>\n\n(2) ColumnarToRow [codegen id : 3]\nInput [29]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\n\n(3) LocalLimit [codegen id : 3]\nInput [29]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nArguments: 1001\n\n(4) Scan csv \nOutput [3]: [iata#17, airport#18, city#19]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(iata)]\nReadSchema: struct<iata:string,airport:string,city:string>\n\n(5) Filter [codegen id : 1]\nInput [3]: [iata#17, airport#18, city#19]\nCondition : isnotnull(iata#17)\n\n(6) BroadcastExchange\nInput [3]: [iata#17, airport#18, city#19]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=428]\n\n(7) BroadcastQueryStage\nOutput [3]: [iata#17, airport#18, city#19]\nArguments: 0\n\n(8) BroadcastHashJoin [codegen id : 3]\nLeft keys [1]: [origin#405]\nRight keys [1]: [iata#17]\nJoin type: LeftOuter\nJoin condition: None\n\n(9) Project [codegen id : 3]\nOutput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nInput [32]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, iata#17, airport#18, city#19]\n\n(10) LocalLimit [codegen id : 3]\nInput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nArguments: 1001\n\n(11) ReusedExchange [Reuses operator id: 6]\nOutput [3]: [iata#568, airport#569, city#570]\n\n(12) BroadcastQueryStage\nOutput [3]: [iata#568, airport#569, city#570]\nArguments: 2\n\n(13) BroadcastHashJoin [codegen id : 3]\nLeft keys [1]: [destination#406]\nRight keys [1]: [iata#568]\nJoin type: LeftOuter\nJoin condition: None\n\n(14) Project [codegen id : 3]\nOutput [33]: [airport#18 AS origin_airport#564, city#19 AS origin_city#565, airport#569 AS desitination_airport#566, city#570 AS destination_city#567, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nInput [34]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19, iata#568, airport#569, city#570]\n\n(15) CollectLimit\nInput [33]: [origin_airport#564, origin_city#565, desitination_airport#566, destination_city#567, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nArguments: 1001\n\n(16) LocalLimit\nInput [29]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nArguments: 1001\n\n(17) Filter\nInput [3]: [iata#17, airport#18, city#19]\nCondition : isnotnull(iata#17)\n\n(18) BroadcastExchange\nInput [3]: [iata#17, airport#18, city#19]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=412]\n\n(19) BroadcastHashJoin\nLeft keys [1]: [origin#405]\nRight keys [1]: [iata#17]\nJoin type: LeftOuter\nJoin condition: None\n\n(20) Project\nOutput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nInput [32]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, iata#17, airport#18, city#19]\n\n(21) LocalLimit\nInput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nArguments: 1001\n\n(22) Scan csv \nOutput [3]: [iata#568, airport#569, city#570]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(iata)]\nReadSchema: struct<iata:string,airport:string,city:string>\n\n(23) Filter\nInput [3]: [iata#568, airport#569, city#570]\nCondition : isnotnull(iata#568)\n\n(24) BroadcastExchange\nInput [3]: [iata#568, airport#569, city#570]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=417]\n\n(25) BroadcastHashJoin\nLeft keys [1]: [destination#406]\nRight keys [1]: [iata#568]\nJoin type: LeftOuter\nJoin condition: None\n\n(26) Project\nOutput [33]: [airport#18 AS origin_airport#564, city#19 AS origin_city#565, airport#569 AS desitination_airport#566, city#570 AS destination_city#567, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nInput [34]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19, iata#568, airport#569, city#570]\n\n(27) CollectLimit\nInput [33]: [origin_airport#564, origin_city#565, desitination_airport#566, destination_city#567, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nArguments: 1001\n\n(28) AdaptiveSparkPlan\nOutput [33]: [origin_airport#564, origin_city#565, desitination_airport#566, destination_city#567, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 1001","children":[{"nodeName":"WholeStageCodegen (3)","simpleString":"WholeStageCodegen (3)","children":[{"nodeName":"Project","simpleString":"Project [airport#18 AS origin_airport#564, city#19 AS origin_city#565, airport#569 AS desitination_airport#566, city#570 AS destination_city#567, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, ... 9 more fields]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [destination#406], [iata#568], LeftOuter, BuildRight, false","children":[{"nodeName":"LocalLimit","simpleString":"LocalLimit 1001","children":[{"nodeName":"Project","simpleString":"Project [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, ... 7 more fields]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [origin#405], [iata#17], LeftOuter, BuildRight, false","children":[{"nodeName":"LocalLimit","simpleString":"LocalLimit 1001","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [dayOfMonth#391,dayOfWeek#392,depTime#393,crsDepTime#394,arrTime#395,crsArrTime#396,uniqueCarrier#397,flightNum#398,tailNum#399,actualElapsedTime#400,crsElapsedTime#401,airTime#402,arrDelay#403,depDelay#404,origin#405,destination#406,distance#407,taxiIn#408,taxiOut#409,cancelled#410,cancellationCode#411,diverted#412,carrierDelay#413,weatherDelay#414,... 5 more fields] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueC...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights]","ReadSchema":"struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":1551,"metricType":"sum"},{"name":"scan time","accumulatorId":1550,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":1555,"metricType":"timing"},{"name":"metadata time","accumulatorId":1552,"metricType":"timing"},{"name":"size of files read","accumulatorId":1553,"metricType":"size"},{"name":"number of output rows","accumulatorId":1549,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":1554,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1663,"metricType":"sum"},{"name":"number of input batches","accumulatorId":1664,"metricType":"sum"}]}],"metadata":{},"metrics":[]},{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"BroadcastQueryStage","simpleString":"BroadcastQueryStage 0","children":[{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=428]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(iata#17)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [iata#17,airport#18,city#19] Batched: false, DataFilters: [isnotnull(iata#17)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(iata)], ReadSchema: struct<iata:string,airport:string,city:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<iata:string,airport:string,city:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(iata)]","DataFilters":"[isnotnull(iata#17)]"},"metrics":[{"name":"number of output rows","accumulatorId":1562,"metricType":"sum"},{"name":"number of files read","accumulatorId":1563,"metricType":"sum"},{"name":"metadata time","accumulatorId":1564,"metricType":"timing"},{"name":"size of files read","accumulatorId":1565,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1604,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1603,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":1602,"metricType":"timing"},{"name":"time to build","accumulatorId":1601,"metricType":"timing"},{"name":"time to collect","accumulatorId":1600,"metricType":"timing"},{"name":"number of output rows","accumulatorId":1599,"metricType":"sum"},{"name":"data size","accumulatorId":1598,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1662,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]},{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"BroadcastQueryStage","simpleString":"BroadcastQueryStage 2","children":[{"nodeName":"ReusedExchange","simpleString":"ReusedExchange [iata#568, airport#569, city#570], BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=428]","children":[{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=428]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(iata#17)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [iata#17,airport#18,city#19] Batched: false, DataFilters: [isnotnull(iata#17)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(iata)], ReadSchema: struct<iata:string,airport:string,city:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<iata:string,airport:string,city:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(iata)]","DataFilters":"[isnotnull(iata#17)]"},"metrics":[{"name":"number of output rows","accumulatorId":1562,"metricType":"sum"},{"name":"number of files read","accumulatorId":1563,"metricType":"sum"},{"name":"metadata time","accumulatorId":1564,"metricType":"timing"},{"name":"size of files read","accumulatorId":1565,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1604,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1603,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":1602,"metricType":"timing"},{"name":"time to build","accumulatorId":1601,"metricType":"timing"},{"name":"time to collect","accumulatorId":1600,"metricType":"timing"},{"name":"number of output rows","accumulatorId":1599,"metricType":"sum"},{"name":"data size","accumulatorId":1598,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1661,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1660,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1658,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1652,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1659,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1653,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1650,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1647,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1656,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1649,"metricType":"sum"},{"name":"records read","accumulatorId":1646,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1644,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1645,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1642,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1648,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1641,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1651,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1640,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":1654,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":1655,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1643,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1657,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":15,"accumUpdates":[[1551,2],[1555,0],[1552,2],[1553,838367],[1554,2]]}
{"Event":"SparkListenerJobStart","Job ID":21,"Submission Time":1725364439192,"Stage Infos":[{"Stage ID":27,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":79,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"203\",\"name\":\"mapPartitionsInternal\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[78],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":77,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"202\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[76],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":76,"Name":"FileScanRDD","Scope":"{\"id\":\"202\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":78,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"183\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[77],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[27],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"15","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364427091_91575184","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"15","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":27,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":79,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"203\",\"name\":\"mapPartitionsInternal\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[78],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":77,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"202\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[76],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":76,"Name":"FileScanRDD","Scope":"{\"id\":\"202\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":78,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"183\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[77],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364439395,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"15","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364427091_91575184","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"15","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":27,"Stage Attempt ID":0,"Task Info":{"Task ID":23,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364439514,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":27,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":23,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364439514,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364439995,"Failed":false,"Killed":false,"Accumulables":[{"ID":1549,"Name":"number of output rows","Update":"4096","Value":"4096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1550,"Name":"scan time","Update":"118","Value":"118","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1661,"Name":"number of output rows","Update":"1001","Value":"1001","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1662,"Name":"number of output rows","Update":"1001","Value":"1001","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1663,"Name":"number of output rows","Update":"4096","Value":"4096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1664,"Name":"number of input batches","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1665,"Name":"internal.metrics.executorDeserializeTime","Update":205,"Value":205,"Internal":true,"Count Failed Values":true},{"ID":1666,"Name":"internal.metrics.executorDeserializeCpuTime","Update":17510709,"Value":17510709,"Internal":true,"Count Failed Values":true},{"ID":1667,"Name":"internal.metrics.executorRunTime","Update":208,"Value":208,"Internal":true,"Count Failed Values":true},{"ID":1668,"Name":"internal.metrics.executorCpuTime","Update":141929308,"Value":141929308,"Internal":true,"Count Failed Values":true},{"ID":1669,"Name":"internal.metrics.resultSize","Update":112729,"Value":112729,"Internal":true,"Count Failed Values":true},{"ID":1670,"Name":"internal.metrics.jvmGCTime","Update":12,"Value":12,"Internal":true,"Count Failed Values":true},{"ID":1671,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":1674,"Name":"internal.metrics.peakExecutionMemory","Update":33816544,"Value":33816544,"Internal":true,"Count Failed Values":true},{"ID":1696,"Name":"internal.metrics.input.bytesRead","Update":459566,"Value":459566,"Internal":true,"Count Failed Values":true},{"ID":1697,"Name":"internal.metrics.input.recordsRead","Update":4096,"Value":4096,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":205,"Executor Deserialize CPU Time":17510709,"Executor Run Time":208,"Executor CPU Time":141929308,"Peak Execution Memory":33816544,"Result Size":112729,"JVM GC Time":12,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":459566,"Records Read":4096},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":27,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":79,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"203\",\"name\":\"mapPartitionsInternal\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[78],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":77,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"202\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[76],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":76,"Name":"FileScanRDD","Scope":"{\"id\":\"202\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":78,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"183\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[77],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364439395,"Completion Time":1725364440004,"Accumulables":[{"ID":1549,"Name":"number of output rows","Value":"4096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1550,"Name":"scan time","Value":"118","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1661,"Name":"number of output rows","Value":"1001","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1662,"Name":"number of output rows","Value":"1001","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1663,"Name":"number of output rows","Value":"4096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1664,"Name":"number of input batches","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1665,"Name":"internal.metrics.executorDeserializeTime","Value":205,"Internal":true,"Count Failed Values":true},{"ID":1666,"Name":"internal.metrics.executorDeserializeCpuTime","Value":17510709,"Internal":true,"Count Failed Values":true},{"ID":1667,"Name":"internal.metrics.executorRunTime","Value":208,"Internal":true,"Count Failed Values":true},{"ID":1668,"Name":"internal.metrics.executorCpuTime","Value":141929308,"Internal":true,"Count Failed Values":true},{"ID":1669,"Name":"internal.metrics.resultSize","Value":112729,"Internal":true,"Count Failed Values":true},{"ID":1670,"Name":"internal.metrics.jvmGCTime","Value":12,"Internal":true,"Count Failed Values":true},{"ID":1671,"Name":"internal.metrics.resultSerializationTime","Value":1,"Internal":true,"Count Failed Values":true},{"ID":1674,"Name":"internal.metrics.peakExecutionMemory","Value":33816544,"Internal":true,"Count Failed Values":true},{"ID":1696,"Name":"internal.metrics.input.bytesRead","Value":459566,"Internal":true,"Count Failed Values":true},{"ID":1697,"Name":"internal.metrics.input.recordsRead","Value":4096,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":21,"Completion Time":1725364440012,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":15,"time":1725364440257,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":16,"rootExecutionId":16,"description":"Started by: admin","details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (15)\n+- CollectLimit (14)\n   +- Project (13)\n      +- BroadcastHashJoin LeftOuter BuildRight (12)\n         :- LocalLimit (8)\n         :  +- Project (7)\n         :     +- BroadcastHashJoin LeftOuter BuildRight (6)\n         :        :- LocalLimit (2)\n         :        :  +- Scan parquet  (1)\n         :        +- BroadcastExchange (5)\n         :           +- Filter (4)\n         :              +- Scan csv  (3)\n         +- BroadcastExchange (11)\n            +- Filter (10)\n               +- Scan csv  (9)\n\n\n(1) Scan parquet \nOutput [29]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nBatched: true\nLocation: InMemoryFileIndex [s3a://flight-bucket/refined/flights]\nReadSchema: struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>\n\n(2) LocalLimit\nInput [29]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nArguments: 21\n\n(3) Scan csv \nOutput [3]: [iata#17, airport#18, city#19]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(iata)]\nReadSchema: struct<iata:string,airport:string,city:string>\n\n(4) Filter\nInput [3]: [iata#17, airport#18, city#19]\nCondition : isnotnull(iata#17)\n\n(5) BroadcastExchange\nInput [3]: [iata#17, airport#18, city#19]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=556]\n\n(6) BroadcastHashJoin\nLeft keys [1]: [origin#405]\nRight keys [1]: [iata#17]\nJoin type: LeftOuter\nJoin condition: None\n\n(7) Project\nOutput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nInput [32]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, iata#17, airport#18, city#19]\n\n(8) LocalLimit\nInput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nArguments: 21\n\n(9) Scan csv \nOutput [3]: [iata#682, airport#683, city#684]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(iata)]\nReadSchema: struct<iata:string,airport:string,city:string>\n\n(10) Filter\nInput [3]: [iata#682, airport#683, city#684]\nCondition : isnotnull(iata#682)\n\n(11) BroadcastExchange\nInput [3]: [iata#682, airport#683, city#684]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=561]\n\n(12) BroadcastHashJoin\nLeft keys [1]: [destination#406]\nRight keys [1]: [iata#682]\nJoin type: LeftOuter\nJoin condition: None\n\n(13) Project\nOutput [33]: [toprettystring(airport#18, Some(Etc/UTC)) AS toprettystring(origin_airport)#755, toprettystring(city#19, Some(Etc/UTC)) AS toprettystring(origin_city)#756, toprettystring(airport#683, Some(Etc/UTC)) AS toprettystring(desitination_airport)#757, toprettystring(city#684, Some(Etc/UTC)) AS toprettystring(destination_city)#758, toprettystring(dayOfMonth#391, Some(Etc/UTC)) AS toprettystring(dayOfMonth)#759, toprettystring(dayOfWeek#392, Some(Etc/UTC)) AS toprettystring(dayOfWeek)#760, toprettystring(depTime#393, Some(Etc/UTC)) AS toprettystring(depTime)#761, toprettystring(crsDepTime#394, Some(Etc/UTC)) AS toprettystring(crsDepTime)#762, toprettystring(arrTime#395, Some(Etc/UTC)) AS toprettystring(arrTime)#763, toprettystring(crsArrTime#396, Some(Etc/UTC)) AS toprettystring(crsArrTime)#764, toprettystring(uniqueCarrier#397, Some(Etc/UTC)) AS toprettystring(uniqueCarrier)#765, toprettystring(flightNum#398, Some(Etc/UTC)) AS toprettystring(flightNum)#766, toprettystring(tailNum#399, Some(Etc/UTC)) AS toprettystring(tailNum)#767, toprettystring(actualElapsedTime#400, Some(Etc/UTC)) AS toprettystring(actualElapsedTime)#768, toprettystring(crsElapsedTime#401, Some(Etc/UTC)) AS toprettystring(crsElapsedTime)#769, toprettystring(airTime#402, Some(Etc/UTC)) AS toprettystring(airTime)#770, toprettystring(arrDelay#403, Some(Etc/UTC)) AS toprettystring(arrDelay)#771, toprettystring(depDelay#404, Some(Etc/UTC)) AS toprettystring(depDelay)#772, toprettystring(origin#405, Some(Etc/UTC)) AS toprettystring(origin)#773, toprettystring(destination#406, Some(Etc/UTC)) AS toprettystring(destination)#774, toprettystring(distance#407, Some(Etc/UTC)) AS toprettystring(distance)#775, toprettystring(taxiIn#408, Some(Etc/UTC)) AS toprettystring(taxiIn)#776, toprettystring(taxiOut#409, Some(Etc/UTC)) AS toprettystring(taxiOut)#777, toprettystring(cancelled#410, Some(Etc/UTC)) AS toprettystring(cancelled)#778, toprettystring(cancellationCode#411, Some(Etc/UTC)) AS toprettystring(cancellationCode)#779, toprettystring(diverted#412, Some(Etc/UTC)) AS toprettystring(diverted)#780, toprettystring(carrierDelay#413, Some(Etc/UTC)) AS toprettystring(carrierDelay)#781, toprettystring(weatherDelay#414, Some(Etc/UTC)) AS toprettystring(weatherDelay)#782, toprettystring(nasDelay#415, Some(Etc/UTC)) AS toprettystring(nasDelay)#783, toprettystring(securityDelay#416, Some(Etc/UTC)) AS toprettystring(securityDelay)#784, toprettystring(lateAircraftDelay#417, Some(Etc/UTC)) AS toprettystring(lateAircraftDelay)#785, toprettystring(year#418, Some(Etc/UTC)) AS toprettystring(year)#786, toprettystring(month#419, Some(Etc/UTC)) AS toprettystring(month)#787]\nInput [34]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19, iata#682, airport#683, city#684]\n\n(14) CollectLimit\nInput [33]: [toprettystring(origin_airport)#755, toprettystring(origin_city)#756, toprettystring(desitination_airport)#757, toprettystring(destination_city)#758, toprettystring(dayOfMonth)#759, toprettystring(dayOfWeek)#760, toprettystring(depTime)#761, toprettystring(crsDepTime)#762, toprettystring(arrTime)#763, toprettystring(crsArrTime)#764, toprettystring(uniqueCarrier)#765, toprettystring(flightNum)#766, toprettystring(tailNum)#767, toprettystring(actualElapsedTime)#768, toprettystring(crsElapsedTime)#769, toprettystring(airTime)#770, toprettystring(arrDelay)#771, toprettystring(depDelay)#772, toprettystring(origin)#773, toprettystring(destination)#774, toprettystring(distance)#775, toprettystring(taxiIn)#776, toprettystring(taxiOut)#777, toprettystring(cancelled)#778, toprettystring(cancellationCode)#779, toprettystring(diverted)#780, toprettystring(carrierDelay)#781, toprettystring(weatherDelay)#782, toprettystring(nasDelay)#783, toprettystring(securityDelay)#784, toprettystring(lateAircraftDelay)#785, toprettystring(year)#786, toprettystring(month)#787]\nArguments: 21\n\n(15) AdaptiveSparkPlan\nOutput [33]: [toprettystring(origin_airport)#755, toprettystring(origin_city)#756, toprettystring(desitination_airport)#757, toprettystring(destination_city)#758, toprettystring(dayOfMonth)#759, toprettystring(dayOfWeek)#760, toprettystring(depTime)#761, toprettystring(crsDepTime)#762, toprettystring(arrTime)#763, toprettystring(crsArrTime)#764, toprettystring(uniqueCarrier)#765, toprettystring(flightNum)#766, toprettystring(tailNum)#767, toprettystring(actualElapsedTime)#768, toprettystring(crsElapsedTime)#769, toprettystring(airTime)#770, toprettystring(arrDelay)#771, toprettystring(depDelay)#772, toprettystring(origin)#773, toprettystring(destination)#774, toprettystring(distance)#775, toprettystring(taxiIn)#776, toprettystring(taxiOut)#777, toprettystring(cancelled)#778, toprettystring(cancellationCode)#779, toprettystring(diverted)#780, toprettystring(carrierDelay)#781, toprettystring(weatherDelay)#782, toprettystring(nasDelay)#783, toprettystring(securityDelay)#784, toprettystring(lateAircraftDelay)#785, toprettystring(year)#786, toprettystring(month)#787]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 21","children":[{"nodeName":"Project","simpleString":"Project [toprettystring(airport#18, Some(Etc/UTC)) AS toprettystring(origin_airport)#755, toprettystring(city#19, Some(Etc/UTC)) AS toprettystring(origin_city)#756, toprettystring(airport#683, Some(Etc/UTC)) AS toprettystring(desitination_airport)#757, toprettystring(city#684, Some(Etc/UTC)) AS toprettystring(destination_city)#758, toprettystring(dayOfMonth#391, Some(Etc/UTC)) AS toprettystring(dayOfMonth)#759, toprettystring(dayOfWeek#392, Some(Etc/UTC)) AS toprettystring(dayOfWeek)#760, toprettystring(depTime#393, Some(Etc/UTC)) AS toprettystring(depTime)#761, toprettystring(crsDepTime#394, Some(Etc/UTC)) AS toprettystring(crsDepTime)#762, toprettystring(arrTime#395, Some(Etc/UTC)) AS toprettystring(arrTime)#763, toprettystring(crsArrTime#396, Some(Etc/UTC)) AS toprettystring(crsArrTime)#764, toprettystring(uniqueCarrier#397, Some(Etc/UTC)) AS toprettystring(uniqueCarrier)#765, toprettystring(flightNum#398, Some(Etc/UTC)) AS toprettystring(flightNum)#766, toprettystring(tailNum#399, Some(Etc/UTC)) AS toprettystring(tailNum)#767, toprettystring(actualElapsedTime#400, Some(Etc/UTC)) AS toprettystring(actualElapsedTime)#768, toprettystring(crsElapsedTime#401, Some(Etc/UTC)) AS toprettystring(crsElapsedTime)#769, toprettystring(airTime#402, Some(Etc/UTC)) AS toprettystring(airTime)#770, toprettystring(arrDelay#403, Some(Etc/UTC)) AS toprettystring(arrDelay)#771, toprettystring(depDelay#404, Some(Etc/UTC)) AS toprettystring(depDelay)#772, toprettystring(origin#405, Some(Etc/UTC)) AS toprettystring(origin)#773, toprettystring(destination#406, Some(Etc/UTC)) AS toprettystring(destination)#774, toprettystring(distance#407, Some(Etc/UTC)) AS toprettystring(distance)#775, toprettystring(taxiIn#408, Some(Etc/UTC)) AS toprettystring(taxiIn)#776, toprettystring(taxiOut#409, Some(Etc/UTC)) AS toprettystring(taxiOut)#777, toprettystring(cancelled#410, Some(Etc/UTC)) AS toprettystring(cancelled)#778, ... 9 more fields]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [destination#406], [iata#682], LeftOuter, BuildRight, false","children":[{"nodeName":"LocalLimit","simpleString":"LocalLimit 21","children":[{"nodeName":"Project","simpleString":"Project [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, ... 7 more fields]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [origin#405], [iata#17], LeftOuter, BuildRight, false","children":[{"nodeName":"LocalLimit","simpleString":"LocalLimit 21","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [dayOfMonth#391,dayOfWeek#392,depTime#393,crsDepTime#394,arrTime#395,crsArrTime#396,uniqueCarrier#397,flightNum#398,tailNum#399,actualElapsedTime#400,crsElapsedTime#401,airTime#402,arrDelay#403,depDelay#404,origin#405,destination#406,distance#407,taxiIn#408,taxiOut#409,cancelled#410,cancellationCode#411,diverted#412,carrierDelay#413,weatherDelay#414,... 5 more fields] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueC...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights]","ReadSchema":"struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":1724,"metricType":"sum"},{"name":"scan time","accumulatorId":1723,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":1728,"metricType":"timing"},{"name":"metadata time","accumulatorId":1725,"metricType":"timing"},{"name":"size of files read","accumulatorId":1726,"metricType":"size"},{"name":"number of output rows","accumulatorId":1722,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":1727,"metricType":"sum"}]}],"metadata":{},"metrics":[]},{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=556]","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(iata#17)","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [iata#17,airport#18,city#19] Batched: false, DataFilters: [isnotnull(iata#17)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(iata)], ReadSchema: struct<iata:string,airport:string,city:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<iata:string,airport:string,city:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(iata)]","DataFilters":"[isnotnull(iata#17)]"},"metrics":[{"name":"number of output rows","accumulatorId":1735,"metricType":"sum"},{"name":"number of files read","accumulatorId":1736,"metricType":"sum"},{"name":"metadata time","accumulatorId":1737,"metricType":"timing"},{"name":"size of files read","accumulatorId":1738,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1734,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":1733,"metricType":"timing"},{"name":"time to build","accumulatorId":1732,"metricType":"timing"},{"name":"time to collect","accumulatorId":1731,"metricType":"timing"},{"name":"number of output rows","accumulatorId":1730,"metricType":"sum"},{"name":"data size","accumulatorId":1729,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1721,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]},{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=561]","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(iata#682)","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [iata#682,airport#683,city#684] Batched: false, DataFilters: [isnotnull(iata#682)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(iata)], ReadSchema: struct<iata:string,airport:string,city:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<iata:string,airport:string,city:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(iata)]","DataFilters":"[isnotnull(iata#682)]"},"metrics":[{"name":"number of output rows","accumulatorId":1745,"metricType":"sum"},{"name":"number of files read","accumulatorId":1746,"metricType":"sum"},{"name":"metadata time","accumulatorId":1747,"metricType":"timing"},{"name":"size of files read","accumulatorId":1748,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1744,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":1743,"metricType":"timing"},{"name":"time to build","accumulatorId":1742,"metricType":"timing"},{"name":"time to collect","accumulatorId":1741,"metricType":"timing"},{"name":"number of output rows","accumulatorId":1740,"metricType":"sum"},{"name":"data size","accumulatorId":1739,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1720,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1718,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1712,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1719,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1713,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1710,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1707,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1716,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1709,"metricType":"sum"},{"name":"records read","accumulatorId":1706,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1704,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1705,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1702,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1708,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1701,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1711,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1700,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":1714,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":1715,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1703,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1717,"metricType":"size"}]}],"metadata":{},"metrics":[]},"time":1725364452621,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":16,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (26)\n+- == Current Plan ==\n   CollectLimit (14)\n   +- Project (13)\n      +- BroadcastHashJoin LeftOuter BuildRight (12)\n         :- LocalLimit (9)\n         :  +- Project (8)\n         :     +- BroadcastHashJoin LeftOuter BuildRight (7)\n         :        :- LocalLimit (2)\n         :        :  +- Scan parquet  (1)\n         :        +- BroadcastQueryStage (6)\n         :           +- BroadcastExchange (5)\n         :              +- * Filter (4)\n         :                 +- Scan csv  (3)\n         +- BroadcastQueryStage (11)\n            +- ReusedExchange (10)\n+- == Initial Plan ==\n   CollectLimit (25)\n   +- Project (24)\n      +- BroadcastHashJoin LeftOuter BuildRight (23)\n         :- LocalLimit (19)\n         :  +- Project (18)\n         :     +- BroadcastHashJoin LeftOuter BuildRight (17)\n         :        :- LocalLimit (2)\n         :        :  +- Scan parquet  (1)\n         :        +- BroadcastExchange (16)\n         :           +- Filter (15)\n         :              +- Scan csv  (3)\n         +- BroadcastExchange (22)\n            +- Filter (21)\n               +- Scan csv  (20)\n\n\n(1) Scan parquet \nOutput [29]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nBatched: true\nLocation: InMemoryFileIndex [s3a://flight-bucket/refined/flights]\nReadSchema: struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>\n\n(2) LocalLimit\nInput [29]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nArguments: 21\n\n(3) Scan csv \nOutput [3]: [iata#17, airport#18, city#19]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(iata)]\nReadSchema: struct<iata:string,airport:string,city:string>\n\n(4) Filter [codegen id : 1]\nInput [3]: [iata#17, airport#18, city#19]\nCondition : isnotnull(iata#17)\n\n(5) BroadcastExchange\nInput [3]: [iata#17, airport#18, city#19]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=572]\n\n(6) BroadcastQueryStage\nOutput [3]: [iata#17, airport#18, city#19]\nArguments: 0\n\n(7) BroadcastHashJoin\nLeft keys [1]: [origin#405]\nRight keys [1]: [iata#17]\nJoin type: LeftOuter\nJoin condition: None\n\n(8) Project\nOutput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nInput [32]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, iata#17, airport#18, city#19]\n\n(9) LocalLimit\nInput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nArguments: 21\n\n(10) ReusedExchange [Reuses operator id: 5]\nOutput [3]: [iata#682, airport#683, city#684]\n\n(11) BroadcastQueryStage\nOutput [3]: [iata#682, airport#683, city#684]\nArguments: 2\n\n(12) BroadcastHashJoin\nLeft keys [1]: [destination#406]\nRight keys [1]: [iata#682]\nJoin type: LeftOuter\nJoin condition: None\n\n(13) Project\nOutput [33]: [toprettystring(airport#18, Some(Etc/UTC)) AS toprettystring(origin_airport)#755, toprettystring(city#19, Some(Etc/UTC)) AS toprettystring(origin_city)#756, toprettystring(airport#683, Some(Etc/UTC)) AS toprettystring(desitination_airport)#757, toprettystring(city#684, Some(Etc/UTC)) AS toprettystring(destination_city)#758, toprettystring(dayOfMonth#391, Some(Etc/UTC)) AS toprettystring(dayOfMonth)#759, toprettystring(dayOfWeek#392, Some(Etc/UTC)) AS toprettystring(dayOfWeek)#760, toprettystring(depTime#393, Some(Etc/UTC)) AS toprettystring(depTime)#761, toprettystring(crsDepTime#394, Some(Etc/UTC)) AS toprettystring(crsDepTime)#762, toprettystring(arrTime#395, Some(Etc/UTC)) AS toprettystring(arrTime)#763, toprettystring(crsArrTime#396, Some(Etc/UTC)) AS toprettystring(crsArrTime)#764, toprettystring(uniqueCarrier#397, Some(Etc/UTC)) AS toprettystring(uniqueCarrier)#765, toprettystring(flightNum#398, Some(Etc/UTC)) AS toprettystring(flightNum)#766, toprettystring(tailNum#399, Some(Etc/UTC)) AS toprettystring(tailNum)#767, toprettystring(actualElapsedTime#400, Some(Etc/UTC)) AS toprettystring(actualElapsedTime)#768, toprettystring(crsElapsedTime#401, Some(Etc/UTC)) AS toprettystring(crsElapsedTime)#769, toprettystring(airTime#402, Some(Etc/UTC)) AS toprettystring(airTime)#770, toprettystring(arrDelay#403, Some(Etc/UTC)) AS toprettystring(arrDelay)#771, toprettystring(depDelay#404, Some(Etc/UTC)) AS toprettystring(depDelay)#772, toprettystring(origin#405, Some(Etc/UTC)) AS toprettystring(origin)#773, toprettystring(destination#406, Some(Etc/UTC)) AS toprettystring(destination)#774, toprettystring(distance#407, Some(Etc/UTC)) AS toprettystring(distance)#775, toprettystring(taxiIn#408, Some(Etc/UTC)) AS toprettystring(taxiIn)#776, toprettystring(taxiOut#409, Some(Etc/UTC)) AS toprettystring(taxiOut)#777, toprettystring(cancelled#410, Some(Etc/UTC)) AS toprettystring(cancelled)#778, toprettystring(cancellationCode#411, Some(Etc/UTC)) AS toprettystring(cancellationCode)#779, toprettystring(diverted#412, Some(Etc/UTC)) AS toprettystring(diverted)#780, toprettystring(carrierDelay#413, Some(Etc/UTC)) AS toprettystring(carrierDelay)#781, toprettystring(weatherDelay#414, Some(Etc/UTC)) AS toprettystring(weatherDelay)#782, toprettystring(nasDelay#415, Some(Etc/UTC)) AS toprettystring(nasDelay)#783, toprettystring(securityDelay#416, Some(Etc/UTC)) AS toprettystring(securityDelay)#784, toprettystring(lateAircraftDelay#417, Some(Etc/UTC)) AS toprettystring(lateAircraftDelay)#785, toprettystring(year#418, Some(Etc/UTC)) AS toprettystring(year)#786, toprettystring(month#419, Some(Etc/UTC)) AS toprettystring(month)#787]\nInput [34]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19, iata#682, airport#683, city#684]\n\n(14) CollectLimit\nInput [33]: [toprettystring(origin_airport)#755, toprettystring(origin_city)#756, toprettystring(desitination_airport)#757, toprettystring(destination_city)#758, toprettystring(dayOfMonth)#759, toprettystring(dayOfWeek)#760, toprettystring(depTime)#761, toprettystring(crsDepTime)#762, toprettystring(arrTime)#763, toprettystring(crsArrTime)#764, toprettystring(uniqueCarrier)#765, toprettystring(flightNum)#766, toprettystring(tailNum)#767, toprettystring(actualElapsedTime)#768, toprettystring(crsElapsedTime)#769, toprettystring(airTime)#770, toprettystring(arrDelay)#771, toprettystring(depDelay)#772, toprettystring(origin)#773, toprettystring(destination)#774, toprettystring(distance)#775, toprettystring(taxiIn)#776, toprettystring(taxiOut)#777, toprettystring(cancelled)#778, toprettystring(cancellationCode)#779, toprettystring(diverted)#780, toprettystring(carrierDelay)#781, toprettystring(weatherDelay)#782, toprettystring(nasDelay)#783, toprettystring(securityDelay)#784, toprettystring(lateAircraftDelay)#785, toprettystring(year)#786, toprettystring(month)#787]\nArguments: 21\n\n(15) Filter\nInput [3]: [iata#17, airport#18, city#19]\nCondition : isnotnull(iata#17)\n\n(16) BroadcastExchange\nInput [3]: [iata#17, airport#18, city#19]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=556]\n\n(17) BroadcastHashJoin\nLeft keys [1]: [origin#405]\nRight keys [1]: [iata#17]\nJoin type: LeftOuter\nJoin condition: None\n\n(18) Project\nOutput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nInput [32]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, iata#17, airport#18, city#19]\n\n(19) LocalLimit\nInput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nArguments: 21\n\n(20) Scan csv \nOutput [3]: [iata#682, airport#683, city#684]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(iata)]\nReadSchema: struct<iata:string,airport:string,city:string>\n\n(21) Filter\nInput [3]: [iata#682, airport#683, city#684]\nCondition : isnotnull(iata#682)\n\n(22) BroadcastExchange\nInput [3]: [iata#682, airport#683, city#684]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=561]\n\n(23) BroadcastHashJoin\nLeft keys [1]: [destination#406]\nRight keys [1]: [iata#682]\nJoin type: LeftOuter\nJoin condition: None\n\n(24) Project\nOutput [33]: [toprettystring(airport#18, Some(Etc/UTC)) AS toprettystring(origin_airport)#755, toprettystring(city#19, Some(Etc/UTC)) AS toprettystring(origin_city)#756, toprettystring(airport#683, Some(Etc/UTC)) AS toprettystring(desitination_airport)#757, toprettystring(city#684, Some(Etc/UTC)) AS toprettystring(destination_city)#758, toprettystring(dayOfMonth#391, Some(Etc/UTC)) AS toprettystring(dayOfMonth)#759, toprettystring(dayOfWeek#392, Some(Etc/UTC)) AS toprettystring(dayOfWeek)#760, toprettystring(depTime#393, Some(Etc/UTC)) AS toprettystring(depTime)#761, toprettystring(crsDepTime#394, Some(Etc/UTC)) AS toprettystring(crsDepTime)#762, toprettystring(arrTime#395, Some(Etc/UTC)) AS toprettystring(arrTime)#763, toprettystring(crsArrTime#396, Some(Etc/UTC)) AS toprettystring(crsArrTime)#764, toprettystring(uniqueCarrier#397, Some(Etc/UTC)) AS toprettystring(uniqueCarrier)#765, toprettystring(flightNum#398, Some(Etc/UTC)) AS toprettystring(flightNum)#766, toprettystring(tailNum#399, Some(Etc/UTC)) AS toprettystring(tailNum)#767, toprettystring(actualElapsedTime#400, Some(Etc/UTC)) AS toprettystring(actualElapsedTime)#768, toprettystring(crsElapsedTime#401, Some(Etc/UTC)) AS toprettystring(crsElapsedTime)#769, toprettystring(airTime#402, Some(Etc/UTC)) AS toprettystring(airTime)#770, toprettystring(arrDelay#403, Some(Etc/UTC)) AS toprettystring(arrDelay)#771, toprettystring(depDelay#404, Some(Etc/UTC)) AS toprettystring(depDelay)#772, toprettystring(origin#405, Some(Etc/UTC)) AS toprettystring(origin)#773, toprettystring(destination#406, Some(Etc/UTC)) AS toprettystring(destination)#774, toprettystring(distance#407, Some(Etc/UTC)) AS toprettystring(distance)#775, toprettystring(taxiIn#408, Some(Etc/UTC)) AS toprettystring(taxiIn)#776, toprettystring(taxiOut#409, Some(Etc/UTC)) AS toprettystring(taxiOut)#777, toprettystring(cancelled#410, Some(Etc/UTC)) AS toprettystring(cancelled)#778, toprettystring(cancellationCode#411, Some(Etc/UTC)) AS toprettystring(cancellationCode)#779, toprettystring(diverted#412, Some(Etc/UTC)) AS toprettystring(diverted)#780, toprettystring(carrierDelay#413, Some(Etc/UTC)) AS toprettystring(carrierDelay)#781, toprettystring(weatherDelay#414, Some(Etc/UTC)) AS toprettystring(weatherDelay)#782, toprettystring(nasDelay#415, Some(Etc/UTC)) AS toprettystring(nasDelay)#783, toprettystring(securityDelay#416, Some(Etc/UTC)) AS toprettystring(securityDelay)#784, toprettystring(lateAircraftDelay#417, Some(Etc/UTC)) AS toprettystring(lateAircraftDelay)#785, toprettystring(year#418, Some(Etc/UTC)) AS toprettystring(year)#786, toprettystring(month#419, Some(Etc/UTC)) AS toprettystring(month)#787]\nInput [34]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19, iata#682, airport#683, city#684]\n\n(25) CollectLimit\nInput [33]: [toprettystring(origin_airport)#755, toprettystring(origin_city)#756, toprettystring(desitination_airport)#757, toprettystring(destination_city)#758, toprettystring(dayOfMonth)#759, toprettystring(dayOfWeek)#760, toprettystring(depTime)#761, toprettystring(crsDepTime)#762, toprettystring(arrTime)#763, toprettystring(crsArrTime)#764, toprettystring(uniqueCarrier)#765, toprettystring(flightNum)#766, toprettystring(tailNum)#767, toprettystring(actualElapsedTime)#768, toprettystring(crsElapsedTime)#769, toprettystring(airTime)#770, toprettystring(arrDelay)#771, toprettystring(depDelay)#772, toprettystring(origin)#773, toprettystring(destination)#774, toprettystring(distance)#775, toprettystring(taxiIn)#776, toprettystring(taxiOut)#777, toprettystring(cancelled)#778, toprettystring(cancellationCode)#779, toprettystring(diverted)#780, toprettystring(carrierDelay)#781, toprettystring(weatherDelay)#782, toprettystring(nasDelay)#783, toprettystring(securityDelay)#784, toprettystring(lateAircraftDelay)#785, toprettystring(year)#786, toprettystring(month)#787]\nArguments: 21\n\n(26) AdaptiveSparkPlan\nOutput [33]: [toprettystring(origin_airport)#755, toprettystring(origin_city)#756, toprettystring(desitination_airport)#757, toprettystring(destination_city)#758, toprettystring(dayOfMonth)#759, toprettystring(dayOfWeek)#760, toprettystring(depTime)#761, toprettystring(crsDepTime)#762, toprettystring(arrTime)#763, toprettystring(crsArrTime)#764, toprettystring(uniqueCarrier)#765, toprettystring(flightNum)#766, toprettystring(tailNum)#767, toprettystring(actualElapsedTime)#768, toprettystring(crsElapsedTime)#769, toprettystring(airTime)#770, toprettystring(arrDelay)#771, toprettystring(depDelay)#772, toprettystring(origin)#773, toprettystring(destination)#774, toprettystring(distance)#775, toprettystring(taxiIn)#776, toprettystring(taxiOut)#777, toprettystring(cancelled)#778, toprettystring(cancellationCode)#779, toprettystring(diverted)#780, toprettystring(carrierDelay)#781, toprettystring(weatherDelay)#782, toprettystring(nasDelay)#783, toprettystring(securityDelay)#784, toprettystring(lateAircraftDelay)#785, toprettystring(year)#786, toprettystring(month)#787]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 21","children":[{"nodeName":"Project","simpleString":"Project [toprettystring(airport#18, Some(Etc/UTC)) AS toprettystring(origin_airport)#755, toprettystring(city#19, Some(Etc/UTC)) AS toprettystring(origin_city)#756, toprettystring(airport#683, Some(Etc/UTC)) AS toprettystring(desitination_airport)#757, toprettystring(city#684, Some(Etc/UTC)) AS toprettystring(destination_city)#758, toprettystring(dayOfMonth#391, Some(Etc/UTC)) AS toprettystring(dayOfMonth)#759, toprettystring(dayOfWeek#392, Some(Etc/UTC)) AS toprettystring(dayOfWeek)#760, toprettystring(depTime#393, Some(Etc/UTC)) AS toprettystring(depTime)#761, toprettystring(crsDepTime#394, Some(Etc/UTC)) AS toprettystring(crsDepTime)#762, toprettystring(arrTime#395, Some(Etc/UTC)) AS toprettystring(arrTime)#763, toprettystring(crsArrTime#396, Some(Etc/UTC)) AS toprettystring(crsArrTime)#764, toprettystring(uniqueCarrier#397, Some(Etc/UTC)) AS toprettystring(uniqueCarrier)#765, toprettystring(flightNum#398, Some(Etc/UTC)) AS toprettystring(flightNum)#766, toprettystring(tailNum#399, Some(Etc/UTC)) AS toprettystring(tailNum)#767, toprettystring(actualElapsedTime#400, Some(Etc/UTC)) AS toprettystring(actualElapsedTime)#768, toprettystring(crsElapsedTime#401, Some(Etc/UTC)) AS toprettystring(crsElapsedTime)#769, toprettystring(airTime#402, Some(Etc/UTC)) AS toprettystring(airTime)#770, toprettystring(arrDelay#403, Some(Etc/UTC)) AS toprettystring(arrDelay)#771, toprettystring(depDelay#404, Some(Etc/UTC)) AS toprettystring(depDelay)#772, toprettystring(origin#405, Some(Etc/UTC)) AS toprettystring(origin)#773, toprettystring(destination#406, Some(Etc/UTC)) AS toprettystring(destination)#774, toprettystring(distance#407, Some(Etc/UTC)) AS toprettystring(distance)#775, toprettystring(taxiIn#408, Some(Etc/UTC)) AS toprettystring(taxiIn)#776, toprettystring(taxiOut#409, Some(Etc/UTC)) AS toprettystring(taxiOut)#777, toprettystring(cancelled#410, Some(Etc/UTC)) AS toprettystring(cancelled)#778, ... 9 more fields]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [destination#406], [iata#682], LeftOuter, BuildRight, false","children":[{"nodeName":"LocalLimit","simpleString":"LocalLimit 21","children":[{"nodeName":"Project","simpleString":"Project [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, ... 7 more fields]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [origin#405], [iata#17], LeftOuter, BuildRight, false","children":[{"nodeName":"LocalLimit","simpleString":"LocalLimit 21","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [dayOfMonth#391,dayOfWeek#392,depTime#393,crsDepTime#394,arrTime#395,crsArrTime#396,uniqueCarrier#397,flightNum#398,tailNum#399,actualElapsedTime#400,crsElapsedTime#401,airTime#402,arrDelay#403,depDelay#404,origin#405,destination#406,distance#407,taxiIn#408,taxiOut#409,cancelled#410,cancellationCode#411,diverted#412,carrierDelay#413,weatherDelay#414,... 5 more fields] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueC...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights]","ReadSchema":"struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":1724,"metricType":"sum"},{"name":"scan time","accumulatorId":1723,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":1728,"metricType":"timing"},{"name":"metadata time","accumulatorId":1725,"metricType":"timing"},{"name":"size of files read","accumulatorId":1726,"metricType":"size"},{"name":"number of output rows","accumulatorId":1722,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":1727,"metricType":"sum"}]}],"metadata":{},"metrics":[]},{"nodeName":"BroadcastQueryStage","simpleString":"BroadcastQueryStage 0","children":[{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=572]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(iata#17)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [iata#17,airport#18,city#19] Batched: false, DataFilters: [isnotnull(iata#17)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(iata)], ReadSchema: struct<iata:string,airport:string,city:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<iata:string,airport:string,city:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(iata)]","DataFilters":"[isnotnull(iata#17)]"},"metrics":[{"name":"number of output rows","accumulatorId":1735,"metricType":"sum"},{"name":"number of files read","accumulatorId":1736,"metricType":"sum"},{"name":"metadata time","accumulatorId":1737,"metricType":"timing"},{"name":"size of files read","accumulatorId":1738,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1777,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1776,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":1775,"metricType":"timing"},{"name":"time to build","accumulatorId":1774,"metricType":"timing"},{"name":"time to collect","accumulatorId":1773,"metricType":"timing"},{"name":"number of output rows","accumulatorId":1772,"metricType":"sum"},{"name":"data size","accumulatorId":1771,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1770,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]},{"nodeName":"BroadcastQueryStage","simpleString":"BroadcastQueryStage 2","children":[{"nodeName":"ReusedExchange","simpleString":"ReusedExchange [iata#682, airport#683, city#684], BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=572]","children":[{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=572]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(iata#17)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [iata#17,airport#18,city#19] Batched: false, DataFilters: [isnotnull(iata#17)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(iata)], ReadSchema: struct<iata:string,airport:string,city:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<iata:string,airport:string,city:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(iata)]","DataFilters":"[isnotnull(iata#17)]"},"metrics":[{"name":"number of output rows","accumulatorId":1735,"metricType":"sum"},{"name":"number of files read","accumulatorId":1736,"metricType":"sum"},{"name":"metadata time","accumulatorId":1737,"metricType":"timing"},{"name":"size of files read","accumulatorId":1738,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1777,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1776,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":1775,"metricType":"timing"},{"name":"time to build","accumulatorId":1774,"metricType":"timing"},{"name":"time to collect","accumulatorId":1773,"metricType":"timing"},{"name":"number of output rows","accumulatorId":1772,"metricType":"sum"},{"name":"data size","accumulatorId":1771,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1769,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1767,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1761,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1768,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1762,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1759,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1756,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1765,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1758,"metricType":"sum"},{"name":"records read","accumulatorId":1755,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1753,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1754,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1751,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1757,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1750,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1760,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1749,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":1763,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":1764,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1752,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1766,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":16,"accumUpdates":[[1736,1],[1737,11],[1738,244438]]}
{"Event":"SparkListenerJobStart","Job ID":22,"Submission Time":1725364453157,"Stage Infos":[{"Stage ID":28,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Number of Tasks":1,"RDD Info":[{"RDD ID":83,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"208\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[82],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":80,"Name":"FileScanRDD","Scope":"{\"id\":\"213\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":82,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"210\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[81],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":81,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"213\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[80],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:219)\njava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[28],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"208\",\"name\":\"BroadcastExchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"true","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.job.tags":"broadcast exchange (runId 37c3df14-97e0-490a-9cb2-5108d2b270e7)","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"16","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364446320_855069913","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"16","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":28,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Number of Tasks":1,"RDD Info":[{"RDD ID":83,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"208\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[82],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":80,"Name":"FileScanRDD","Scope":"{\"id\":\"213\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":82,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"210\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[81],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":81,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"213\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[80],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:219)\njava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364453199,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"208\",\"name\":\"BroadcastExchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"true","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.job.tags":"broadcast exchange (runId 37c3df14-97e0-490a-9cb2-5108d2b270e7)","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"16","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364446320_855069913","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"16","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":28,"Stage Attempt ID":0,"Task Info":{"Task ID":24,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364453234,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":28,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":24,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364453234,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364453528,"Failed":false,"Killed":false,"Accumulables":[{"ID":1735,"Name":"number of output rows","Update":"3376","Value":"3376","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1776,"Name":"duration","Update":"221","Value":"221","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1777,"Name":"number of output rows","Update":"3376","Value":"3376","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1778,"Name":"internal.metrics.executorDeserializeTime","Update":17,"Value":17,"Internal":true,"Count Failed Values":true},{"ID":1779,"Name":"internal.metrics.executorDeserializeCpuTime","Update":5979460,"Value":5979460,"Internal":true,"Count Failed Values":true},{"ID":1780,"Name":"internal.metrics.executorRunTime","Update":236,"Value":236,"Internal":true,"Count Failed Values":true},{"ID":1781,"Name":"internal.metrics.executorCpuTime","Update":38713292,"Value":38713292,"Internal":true,"Count Failed Values":true},{"ID":1782,"Name":"internal.metrics.resultSize","Update":123272,"Value":123272,"Internal":true,"Count Failed Values":true},{"ID":1783,"Name":"internal.metrics.jvmGCTime","Update":5,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":1784,"Name":"internal.metrics.resultSerializationTime","Update":5,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":1809,"Name":"internal.metrics.input.bytesRead","Update":244438,"Value":244438,"Internal":true,"Count Failed Values":true},{"ID":1810,"Name":"internal.metrics.input.recordsRead","Update":3376,"Value":3376,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":17,"Executor Deserialize CPU Time":5979460,"Executor Run Time":236,"Executor CPU Time":38713292,"Peak Execution Memory":0,"Result Size":123272,"JVM GC Time":5,"Result Serialization Time":5,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":244438,"Records Read":3376},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":28,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Number of Tasks":1,"RDD Info":[{"RDD ID":83,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"208\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[82],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":80,"Name":"FileScanRDD","Scope":"{\"id\":\"213\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":82,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"210\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[81],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":81,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"213\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[80],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:219)\njava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364453199,"Completion Time":1725364453538,"Accumulables":[{"ID":1735,"Name":"number of output rows","Value":"3376","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1776,"Name":"duration","Value":"221","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1777,"Name":"number of output rows","Value":"3376","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1778,"Name":"internal.metrics.executorDeserializeTime","Value":17,"Internal":true,"Count Failed Values":true},{"ID":1779,"Name":"internal.metrics.executorDeserializeCpuTime","Value":5979460,"Internal":true,"Count Failed Values":true},{"ID":1780,"Name":"internal.metrics.executorRunTime","Value":236,"Internal":true,"Count Failed Values":true},{"ID":1781,"Name":"internal.metrics.executorCpuTime","Value":38713292,"Internal":true,"Count Failed Values":true},{"ID":1782,"Name":"internal.metrics.resultSize","Value":123272,"Internal":true,"Count Failed Values":true},{"ID":1783,"Name":"internal.metrics.jvmGCTime","Value":5,"Internal":true,"Count Failed Values":true},{"ID":1784,"Name":"internal.metrics.resultSerializationTime","Value":5,"Internal":true,"Count Failed Values":true},{"ID":1809,"Name":"internal.metrics.input.bytesRead","Value":244438,"Internal":true,"Count Failed Values":true},{"ID":1810,"Name":"internal.metrics.input.recordsRead","Value":3376,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":22,"Completion Time":1725364453545,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":16,"accumUpdates":[[1775,169],[1774,58],[1773,897],[1772,3376],[1771,2228208]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":16,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (28)\n+- == Final Plan ==\n   CollectLimit (15)\n   +- * Project (14)\n      +- * BroadcastHashJoin LeftOuter BuildRight (13)\n         :- * LocalLimit (10)\n         :  +- * Project (9)\n         :     +- * BroadcastHashJoin LeftOuter BuildRight (8)\n         :        :- * LocalLimit (3)\n         :        :  +- * ColumnarToRow (2)\n         :        :     +- Scan parquet  (1)\n         :        +- BroadcastQueryStage (7), Statistics(sizeInBytes=2.1 MiB, rowCount=3.38E+3)\n         :           +- BroadcastExchange (6)\n         :              +- * Filter (5)\n         :                 +- Scan csv  (4)\n         +- BroadcastQueryStage (12), Statistics(sizeInBytes=2.1 MiB, rowCount=3.38E+3)\n            +- ReusedExchange (11)\n+- == Initial Plan ==\n   CollectLimit (27)\n   +- Project (26)\n      +- BroadcastHashJoin LeftOuter BuildRight (25)\n         :- LocalLimit (21)\n         :  +- Project (20)\n         :     +- BroadcastHashJoin LeftOuter BuildRight (19)\n         :        :- LocalLimit (16)\n         :        :  +- Scan parquet  (1)\n         :        +- BroadcastExchange (18)\n         :           +- Filter (17)\n         :              +- Scan csv  (4)\n         +- BroadcastExchange (24)\n            +- Filter (23)\n               +- Scan csv  (22)\n\n\n(1) Scan parquet \nOutput [29]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nBatched: true\nLocation: InMemoryFileIndex [s3a://flight-bucket/refined/flights]\nReadSchema: struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>\n\n(2) ColumnarToRow [codegen id : 3]\nInput [29]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\n\n(3) LocalLimit [codegen id : 3]\nInput [29]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nArguments: 21\n\n(4) Scan csv \nOutput [3]: [iata#17, airport#18, city#19]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(iata)]\nReadSchema: struct<iata:string,airport:string,city:string>\n\n(5) Filter [codegen id : 1]\nInput [3]: [iata#17, airport#18, city#19]\nCondition : isnotnull(iata#17)\n\n(6) BroadcastExchange\nInput [3]: [iata#17, airport#18, city#19]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=572]\n\n(7) BroadcastQueryStage\nOutput [3]: [iata#17, airport#18, city#19]\nArguments: 0\n\n(8) BroadcastHashJoin [codegen id : 3]\nLeft keys [1]: [origin#405]\nRight keys [1]: [iata#17]\nJoin type: LeftOuter\nJoin condition: None\n\n(9) Project [codegen id : 3]\nOutput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nInput [32]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, iata#17, airport#18, city#19]\n\n(10) LocalLimit [codegen id : 3]\nInput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nArguments: 21\n\n(11) ReusedExchange [Reuses operator id: 6]\nOutput [3]: [iata#682, airport#683, city#684]\n\n(12) BroadcastQueryStage\nOutput [3]: [iata#682, airport#683, city#684]\nArguments: 2\n\n(13) BroadcastHashJoin [codegen id : 3]\nLeft keys [1]: [destination#406]\nRight keys [1]: [iata#682]\nJoin type: LeftOuter\nJoin condition: None\n\n(14) Project [codegen id : 3]\nOutput [33]: [toprettystring(airport#18, Some(Etc/UTC)) AS toprettystring(origin_airport)#755, toprettystring(city#19, Some(Etc/UTC)) AS toprettystring(origin_city)#756, toprettystring(airport#683, Some(Etc/UTC)) AS toprettystring(desitination_airport)#757, toprettystring(city#684, Some(Etc/UTC)) AS toprettystring(destination_city)#758, toprettystring(dayOfMonth#391, Some(Etc/UTC)) AS toprettystring(dayOfMonth)#759, toprettystring(dayOfWeek#392, Some(Etc/UTC)) AS toprettystring(dayOfWeek)#760, toprettystring(depTime#393, Some(Etc/UTC)) AS toprettystring(depTime)#761, toprettystring(crsDepTime#394, Some(Etc/UTC)) AS toprettystring(crsDepTime)#762, toprettystring(arrTime#395, Some(Etc/UTC)) AS toprettystring(arrTime)#763, toprettystring(crsArrTime#396, Some(Etc/UTC)) AS toprettystring(crsArrTime)#764, toprettystring(uniqueCarrier#397, Some(Etc/UTC)) AS toprettystring(uniqueCarrier)#765, toprettystring(flightNum#398, Some(Etc/UTC)) AS toprettystring(flightNum)#766, toprettystring(tailNum#399, Some(Etc/UTC)) AS toprettystring(tailNum)#767, toprettystring(actualElapsedTime#400, Some(Etc/UTC)) AS toprettystring(actualElapsedTime)#768, toprettystring(crsElapsedTime#401, Some(Etc/UTC)) AS toprettystring(crsElapsedTime)#769, toprettystring(airTime#402, Some(Etc/UTC)) AS toprettystring(airTime)#770, toprettystring(arrDelay#403, Some(Etc/UTC)) AS toprettystring(arrDelay)#771, toprettystring(depDelay#404, Some(Etc/UTC)) AS toprettystring(depDelay)#772, toprettystring(origin#405, Some(Etc/UTC)) AS toprettystring(origin)#773, toprettystring(destination#406, Some(Etc/UTC)) AS toprettystring(destination)#774, toprettystring(distance#407, Some(Etc/UTC)) AS toprettystring(distance)#775, toprettystring(taxiIn#408, Some(Etc/UTC)) AS toprettystring(taxiIn)#776, toprettystring(taxiOut#409, Some(Etc/UTC)) AS toprettystring(taxiOut)#777, toprettystring(cancelled#410, Some(Etc/UTC)) AS toprettystring(cancelled)#778, toprettystring(cancellationCode#411, Some(Etc/UTC)) AS toprettystring(cancellationCode)#779, toprettystring(diverted#412, Some(Etc/UTC)) AS toprettystring(diverted)#780, toprettystring(carrierDelay#413, Some(Etc/UTC)) AS toprettystring(carrierDelay)#781, toprettystring(weatherDelay#414, Some(Etc/UTC)) AS toprettystring(weatherDelay)#782, toprettystring(nasDelay#415, Some(Etc/UTC)) AS toprettystring(nasDelay)#783, toprettystring(securityDelay#416, Some(Etc/UTC)) AS toprettystring(securityDelay)#784, toprettystring(lateAircraftDelay#417, Some(Etc/UTC)) AS toprettystring(lateAircraftDelay)#785, toprettystring(year#418, Some(Etc/UTC)) AS toprettystring(year)#786, toprettystring(month#419, Some(Etc/UTC)) AS toprettystring(month)#787]\nInput [34]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19, iata#682, airport#683, city#684]\n\n(15) CollectLimit\nInput [33]: [toprettystring(origin_airport)#755, toprettystring(origin_city)#756, toprettystring(desitination_airport)#757, toprettystring(destination_city)#758, toprettystring(dayOfMonth)#759, toprettystring(dayOfWeek)#760, toprettystring(depTime)#761, toprettystring(crsDepTime)#762, toprettystring(arrTime)#763, toprettystring(crsArrTime)#764, toprettystring(uniqueCarrier)#765, toprettystring(flightNum)#766, toprettystring(tailNum)#767, toprettystring(actualElapsedTime)#768, toprettystring(crsElapsedTime)#769, toprettystring(airTime)#770, toprettystring(arrDelay)#771, toprettystring(depDelay)#772, toprettystring(origin)#773, toprettystring(destination)#774, toprettystring(distance)#775, toprettystring(taxiIn)#776, toprettystring(taxiOut)#777, toprettystring(cancelled)#778, toprettystring(cancellationCode)#779, toprettystring(diverted)#780, toprettystring(carrierDelay)#781, toprettystring(weatherDelay)#782, toprettystring(nasDelay)#783, toprettystring(securityDelay)#784, toprettystring(lateAircraftDelay)#785, toprettystring(year)#786, toprettystring(month)#787]\nArguments: 21\n\n(16) LocalLimit\nInput [29]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nArguments: 21\n\n(17) Filter\nInput [3]: [iata#17, airport#18, city#19]\nCondition : isnotnull(iata#17)\n\n(18) BroadcastExchange\nInput [3]: [iata#17, airport#18, city#19]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=556]\n\n(19) BroadcastHashJoin\nLeft keys [1]: [origin#405]\nRight keys [1]: [iata#17]\nJoin type: LeftOuter\nJoin condition: None\n\n(20) Project\nOutput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nInput [32]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, iata#17, airport#18, city#19]\n\n(21) LocalLimit\nInput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nArguments: 21\n\n(22) Scan csv \nOutput [3]: [iata#682, airport#683, city#684]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(iata)]\nReadSchema: struct<iata:string,airport:string,city:string>\n\n(23) Filter\nInput [3]: [iata#682, airport#683, city#684]\nCondition : isnotnull(iata#682)\n\n(24) BroadcastExchange\nInput [3]: [iata#682, airport#683, city#684]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=561]\n\n(25) BroadcastHashJoin\nLeft keys [1]: [destination#406]\nRight keys [1]: [iata#682]\nJoin type: LeftOuter\nJoin condition: None\n\n(26) Project\nOutput [33]: [toprettystring(airport#18, Some(Etc/UTC)) AS toprettystring(origin_airport)#755, toprettystring(city#19, Some(Etc/UTC)) AS toprettystring(origin_city)#756, toprettystring(airport#683, Some(Etc/UTC)) AS toprettystring(desitination_airport)#757, toprettystring(city#684, Some(Etc/UTC)) AS toprettystring(destination_city)#758, toprettystring(dayOfMonth#391, Some(Etc/UTC)) AS toprettystring(dayOfMonth)#759, toprettystring(dayOfWeek#392, Some(Etc/UTC)) AS toprettystring(dayOfWeek)#760, toprettystring(depTime#393, Some(Etc/UTC)) AS toprettystring(depTime)#761, toprettystring(crsDepTime#394, Some(Etc/UTC)) AS toprettystring(crsDepTime)#762, toprettystring(arrTime#395, Some(Etc/UTC)) AS toprettystring(arrTime)#763, toprettystring(crsArrTime#396, Some(Etc/UTC)) AS toprettystring(crsArrTime)#764, toprettystring(uniqueCarrier#397, Some(Etc/UTC)) AS toprettystring(uniqueCarrier)#765, toprettystring(flightNum#398, Some(Etc/UTC)) AS toprettystring(flightNum)#766, toprettystring(tailNum#399, Some(Etc/UTC)) AS toprettystring(tailNum)#767, toprettystring(actualElapsedTime#400, Some(Etc/UTC)) AS toprettystring(actualElapsedTime)#768, toprettystring(crsElapsedTime#401, Some(Etc/UTC)) AS toprettystring(crsElapsedTime)#769, toprettystring(airTime#402, Some(Etc/UTC)) AS toprettystring(airTime)#770, toprettystring(arrDelay#403, Some(Etc/UTC)) AS toprettystring(arrDelay)#771, toprettystring(depDelay#404, Some(Etc/UTC)) AS toprettystring(depDelay)#772, toprettystring(origin#405, Some(Etc/UTC)) AS toprettystring(origin)#773, toprettystring(destination#406, Some(Etc/UTC)) AS toprettystring(destination)#774, toprettystring(distance#407, Some(Etc/UTC)) AS toprettystring(distance)#775, toprettystring(taxiIn#408, Some(Etc/UTC)) AS toprettystring(taxiIn)#776, toprettystring(taxiOut#409, Some(Etc/UTC)) AS toprettystring(taxiOut)#777, toprettystring(cancelled#410, Some(Etc/UTC)) AS toprettystring(cancelled)#778, toprettystring(cancellationCode#411, Some(Etc/UTC)) AS toprettystring(cancellationCode)#779, toprettystring(diverted#412, Some(Etc/UTC)) AS toprettystring(diverted)#780, toprettystring(carrierDelay#413, Some(Etc/UTC)) AS toprettystring(carrierDelay)#781, toprettystring(weatherDelay#414, Some(Etc/UTC)) AS toprettystring(weatherDelay)#782, toprettystring(nasDelay#415, Some(Etc/UTC)) AS toprettystring(nasDelay)#783, toprettystring(securityDelay#416, Some(Etc/UTC)) AS toprettystring(securityDelay)#784, toprettystring(lateAircraftDelay#417, Some(Etc/UTC)) AS toprettystring(lateAircraftDelay)#785, toprettystring(year#418, Some(Etc/UTC)) AS toprettystring(year)#786, toprettystring(month#419, Some(Etc/UTC)) AS toprettystring(month)#787]\nInput [34]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19, iata#682, airport#683, city#684]\n\n(27) CollectLimit\nInput [33]: [toprettystring(origin_airport)#755, toprettystring(origin_city)#756, toprettystring(desitination_airport)#757, toprettystring(destination_city)#758, toprettystring(dayOfMonth)#759, toprettystring(dayOfWeek)#760, toprettystring(depTime)#761, toprettystring(crsDepTime)#762, toprettystring(arrTime)#763, toprettystring(crsArrTime)#764, toprettystring(uniqueCarrier)#765, toprettystring(flightNum)#766, toprettystring(tailNum)#767, toprettystring(actualElapsedTime)#768, toprettystring(crsElapsedTime)#769, toprettystring(airTime)#770, toprettystring(arrDelay)#771, toprettystring(depDelay)#772, toprettystring(origin)#773, toprettystring(destination)#774, toprettystring(distance)#775, toprettystring(taxiIn)#776, toprettystring(taxiOut)#777, toprettystring(cancelled)#778, toprettystring(cancellationCode)#779, toprettystring(diverted)#780, toprettystring(carrierDelay)#781, toprettystring(weatherDelay)#782, toprettystring(nasDelay)#783, toprettystring(securityDelay)#784, toprettystring(lateAircraftDelay)#785, toprettystring(year)#786, toprettystring(month)#787]\nArguments: 21\n\n(28) AdaptiveSparkPlan\nOutput [33]: [toprettystring(origin_airport)#755, toprettystring(origin_city)#756, toprettystring(desitination_airport)#757, toprettystring(destination_city)#758, toprettystring(dayOfMonth)#759, toprettystring(dayOfWeek)#760, toprettystring(depTime)#761, toprettystring(crsDepTime)#762, toprettystring(arrTime)#763, toprettystring(crsArrTime)#764, toprettystring(uniqueCarrier)#765, toprettystring(flightNum)#766, toprettystring(tailNum)#767, toprettystring(actualElapsedTime)#768, toprettystring(crsElapsedTime)#769, toprettystring(airTime)#770, toprettystring(arrDelay)#771, toprettystring(depDelay)#772, toprettystring(origin)#773, toprettystring(destination)#774, toprettystring(distance)#775, toprettystring(taxiIn)#776, toprettystring(taxiOut)#777, toprettystring(cancelled)#778, toprettystring(cancellationCode)#779, toprettystring(diverted)#780, toprettystring(carrierDelay)#781, toprettystring(weatherDelay)#782, toprettystring(nasDelay)#783, toprettystring(securityDelay)#784, toprettystring(lateAircraftDelay)#785, toprettystring(year)#786, toprettystring(month)#787]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 21","children":[{"nodeName":"WholeStageCodegen (3)","simpleString":"WholeStageCodegen (3)","children":[{"nodeName":"Project","simpleString":"Project [toprettystring(airport#18, Some(Etc/UTC)) AS toprettystring(origin_airport)#755, toprettystring(city#19, Some(Etc/UTC)) AS toprettystring(origin_city)#756, toprettystring(airport#683, Some(Etc/UTC)) AS toprettystring(desitination_airport)#757, toprettystring(city#684, Some(Etc/UTC)) AS toprettystring(destination_city)#758, toprettystring(dayOfMonth#391, Some(Etc/UTC)) AS toprettystring(dayOfMonth)#759, toprettystring(dayOfWeek#392, Some(Etc/UTC)) AS toprettystring(dayOfWeek)#760, toprettystring(depTime#393, Some(Etc/UTC)) AS toprettystring(depTime)#761, toprettystring(crsDepTime#394, Some(Etc/UTC)) AS toprettystring(crsDepTime)#762, toprettystring(arrTime#395, Some(Etc/UTC)) AS toprettystring(arrTime)#763, toprettystring(crsArrTime#396, Some(Etc/UTC)) AS toprettystring(crsArrTime)#764, toprettystring(uniqueCarrier#397, Some(Etc/UTC)) AS toprettystring(uniqueCarrier)#765, toprettystring(flightNum#398, Some(Etc/UTC)) AS toprettystring(flightNum)#766, toprettystring(tailNum#399, Some(Etc/UTC)) AS toprettystring(tailNum)#767, toprettystring(actualElapsedTime#400, Some(Etc/UTC)) AS toprettystring(actualElapsedTime)#768, toprettystring(crsElapsedTime#401, Some(Etc/UTC)) AS toprettystring(crsElapsedTime)#769, toprettystring(airTime#402, Some(Etc/UTC)) AS toprettystring(airTime)#770, toprettystring(arrDelay#403, Some(Etc/UTC)) AS toprettystring(arrDelay)#771, toprettystring(depDelay#404, Some(Etc/UTC)) AS toprettystring(depDelay)#772, toprettystring(origin#405, Some(Etc/UTC)) AS toprettystring(origin)#773, toprettystring(destination#406, Some(Etc/UTC)) AS toprettystring(destination)#774, toprettystring(distance#407, Some(Etc/UTC)) AS toprettystring(distance)#775, toprettystring(taxiIn#408, Some(Etc/UTC)) AS toprettystring(taxiIn)#776, toprettystring(taxiOut#409, Some(Etc/UTC)) AS toprettystring(taxiOut)#777, toprettystring(cancelled#410, Some(Etc/UTC)) AS toprettystring(cancelled)#778, ... 9 more fields]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [destination#406], [iata#682], LeftOuter, BuildRight, false","children":[{"nodeName":"LocalLimit","simpleString":"LocalLimit 21","children":[{"nodeName":"Project","simpleString":"Project [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, ... 7 more fields]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [origin#405], [iata#17], LeftOuter, BuildRight, false","children":[{"nodeName":"LocalLimit","simpleString":"LocalLimit 21","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [dayOfMonth#391,dayOfWeek#392,depTime#393,crsDepTime#394,arrTime#395,crsArrTime#396,uniqueCarrier#397,flightNum#398,tailNum#399,actualElapsedTime#400,crsElapsedTime#401,airTime#402,arrDelay#403,depDelay#404,origin#405,destination#406,distance#407,taxiIn#408,taxiOut#409,cancelled#410,cancellationCode#411,diverted#412,carrierDelay#413,weatherDelay#414,... 5 more fields] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueC...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights]","ReadSchema":"struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":1724,"metricType":"sum"},{"name":"scan time","accumulatorId":1723,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":1728,"metricType":"timing"},{"name":"metadata time","accumulatorId":1725,"metricType":"timing"},{"name":"size of files read","accumulatorId":1726,"metricType":"size"},{"name":"number of output rows","accumulatorId":1722,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":1727,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1836,"metricType":"sum"},{"name":"number of input batches","accumulatorId":1837,"metricType":"sum"}]}],"metadata":{},"metrics":[]},{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"BroadcastQueryStage","simpleString":"BroadcastQueryStage 0","children":[{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=572]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(iata#17)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [iata#17,airport#18,city#19] Batched: false, DataFilters: [isnotnull(iata#17)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(iata)], ReadSchema: struct<iata:string,airport:string,city:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<iata:string,airport:string,city:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(iata)]","DataFilters":"[isnotnull(iata#17)]"},"metrics":[{"name":"number of output rows","accumulatorId":1735,"metricType":"sum"},{"name":"number of files read","accumulatorId":1736,"metricType":"sum"},{"name":"metadata time","accumulatorId":1737,"metricType":"timing"},{"name":"size of files read","accumulatorId":1738,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1777,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1776,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":1775,"metricType":"timing"},{"name":"time to build","accumulatorId":1774,"metricType":"timing"},{"name":"time to collect","accumulatorId":1773,"metricType":"timing"},{"name":"number of output rows","accumulatorId":1772,"metricType":"sum"},{"name":"data size","accumulatorId":1771,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1835,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]},{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"BroadcastQueryStage","simpleString":"BroadcastQueryStage 2","children":[{"nodeName":"ReusedExchange","simpleString":"ReusedExchange [iata#682, airport#683, city#684], BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=572]","children":[{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=572]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(iata#17)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [iata#17,airport#18,city#19] Batched: false, DataFilters: [isnotnull(iata#17)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(iata)], ReadSchema: struct<iata:string,airport:string,city:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<iata:string,airport:string,city:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(iata)]","DataFilters":"[isnotnull(iata#17)]"},"metrics":[{"name":"number of output rows","accumulatorId":1735,"metricType":"sum"},{"name":"number of files read","accumulatorId":1736,"metricType":"sum"},{"name":"metadata time","accumulatorId":1737,"metricType":"timing"},{"name":"size of files read","accumulatorId":1738,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1777,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1776,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":1775,"metricType":"timing"},{"name":"time to build","accumulatorId":1774,"metricType":"timing"},{"name":"time to collect","accumulatorId":1773,"metricType":"timing"},{"name":"number of output rows","accumulatorId":1772,"metricType":"sum"},{"name":"data size","accumulatorId":1771,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1834,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1833,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":1831,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":1825,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":1832,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":1826,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":1823,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":1820,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":1829,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":1822,"metricType":"sum"},{"name":"records read","accumulatorId":1819,"metricType":"sum"},{"name":"local bytes read","accumulatorId":1817,"metricType":"size"},{"name":"fetch wait time","accumulatorId":1818,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":1815,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":1821,"metricType":"sum"},{"name":"local blocks read","accumulatorId":1814,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":1824,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":1813,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":1827,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":1828,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":1816,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":1830,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":16,"accumUpdates":[[1724,2],[1728,0],[1725,0],[1726,838367],[1727,2]]}
{"Event":"SparkListenerJobStart","Job ID":23,"Submission Time":1725364454665,"Stage Infos":[{"Stage ID":29,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":87,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"238\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[86],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":86,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"218\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[85],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":85,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"237\",\"name\":\"Scan parquet \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[84],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":84,"Name":"FileScanRDD","Scope":"{\"id\":\"237\",\"name\":\"Scan parquet \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[29],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"16","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364446320_855069913","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"16","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":29,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":87,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"238\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[86],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":86,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"218\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[85],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":85,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"237\",\"name\":\"Scan parquet \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[84],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":84,"Name":"FileScanRDD","Scope":"{\"id\":\"237\",\"name\":\"Scan parquet \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364454702,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"16","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364446320_855069913","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"16","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":29,"Stage Attempt ID":0,"Task Info":{"Task ID":25,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364454757,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":29,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":25,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364454757,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364455171,"Failed":false,"Killed":false,"Accumulables":[{"ID":1722,"Name":"number of output rows","Update":"4096","Value":"4096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1723,"Name":"scan time","Update":"50","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1834,"Name":"number of output rows","Update":"21","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1835,"Name":"number of output rows","Update":"21","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1836,"Name":"number of output rows","Update":"4096","Value":"4096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1837,"Name":"number of input batches","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1838,"Name":"internal.metrics.executorDeserializeTime","Update":223,"Value":223,"Internal":true,"Count Failed Values":true},{"ID":1839,"Name":"internal.metrics.executorDeserializeCpuTime","Update":6011293,"Value":6011293,"Internal":true,"Count Failed Values":true},{"ID":1840,"Name":"internal.metrics.executorRunTime","Update":134,"Value":134,"Internal":true,"Count Failed Values":true},{"ID":1841,"Name":"internal.metrics.executorCpuTime","Update":63795745,"Value":63795745,"Internal":true,"Count Failed Values":true},{"ID":1842,"Name":"internal.metrics.resultSize","Update":5052,"Value":5052,"Internal":true,"Count Failed Values":true},{"ID":1843,"Name":"internal.metrics.jvmGCTime","Update":13,"Value":13,"Internal":true,"Count Failed Values":true},{"ID":1847,"Name":"internal.metrics.peakExecutionMemory","Update":33816544,"Value":33816544,"Internal":true,"Count Failed Values":true},{"ID":1869,"Name":"internal.metrics.input.bytesRead","Update":459566,"Value":459566,"Internal":true,"Count Failed Values":true},{"ID":1870,"Name":"internal.metrics.input.recordsRead","Update":4096,"Value":4096,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":223,"Executor Deserialize CPU Time":6011293,"Executor Run Time":134,"Executor CPU Time":63795745,"Peak Execution Memory":33816544,"Result Size":5052,"JVM GC Time":13,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":459566,"Records Read":4096},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":29,"Stage Attempt ID":0,"Stage Name":"showString at NativeMethodAccessorImpl.java:0","Number of Tasks":1,"RDD Info":[{"RDD ID":87,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"238\",\"name\":\"mapPartitionsInternal\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[86],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":86,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"218\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[85],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":85,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"237\",\"name\":\"Scan parquet \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[84],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":84,"Name":"FileScanRDD","Scope":"{\"id\":\"237\",\"name\":\"Scan parquet \"}","Callsite":"showString at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.showString(Dataset.scala:315)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364454702,"Completion Time":1725364455181,"Accumulables":[{"ID":1722,"Name":"number of output rows","Value":"4096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1723,"Name":"scan time","Value":"50","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1834,"Name":"number of output rows","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1835,"Name":"number of output rows","Value":"21","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1836,"Name":"number of output rows","Value":"4096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1837,"Name":"number of input batches","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1838,"Name":"internal.metrics.executorDeserializeTime","Value":223,"Internal":true,"Count Failed Values":true},{"ID":1839,"Name":"internal.metrics.executorDeserializeCpuTime","Value":6011293,"Internal":true,"Count Failed Values":true},{"ID":1840,"Name":"internal.metrics.executorRunTime","Value":134,"Internal":true,"Count Failed Values":true},{"ID":1841,"Name":"internal.metrics.executorCpuTime","Value":63795745,"Internal":true,"Count Failed Values":true},{"ID":1842,"Name":"internal.metrics.resultSize","Value":5052,"Internal":true,"Count Failed Values":true},{"ID":1843,"Name":"internal.metrics.jvmGCTime","Value":13,"Internal":true,"Count Failed Values":true},{"ID":1847,"Name":"internal.metrics.peakExecutionMemory","Value":33816544,"Internal":true,"Count Failed Values":true},{"ID":1869,"Name":"internal.metrics.input.bytesRead","Value":459566,"Internal":true,"Count Failed Values":true},{"ID":1870,"Name":"internal.metrics.input.recordsRead","Value":4096,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":23,"Completion Time":1725364455184,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":16,"time":1725364455351,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":17,"rootExecutionId":17,"description":"Started by: admin","details":"org.apache.spark.sql.DataFrameWriter.parquet(DataFrameWriter.scala:792)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (15)\n+- Execute InsertIntoHadoopFsRelationCommand (14)\n   +- WriteFiles (13)\n      +- Sort (12)\n         +- Project (11)\n            +- BroadcastHashJoin LeftOuter BuildRight (10)\n               :- Project (6)\n               :  +- BroadcastHashJoin LeftOuter BuildRight (5)\n               :     :- Scan parquet  (1)\n               :     +- BroadcastExchange (4)\n               :        +- Filter (3)\n               :           +- Scan csv  (2)\n               +- BroadcastExchange (9)\n                  +- Filter (8)\n                     +- Scan csv  (7)\n\n\n(1) Scan parquet \nOutput [29]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nBatched: true\nLocation: InMemoryFileIndex [s3a://flight-bucket/refined/flights]\nReadSchema: struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>\n\n(2) Scan csv \nOutput [3]: [iata#17, airport#18, city#19]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(iata)]\nReadSchema: struct<iata:string,airport:string,city:string>\n\n(3) Filter\nInput [3]: [iata#17, airport#18, city#19]\nCondition : isnotnull(iata#17)\n\n(4) BroadcastExchange\nInput [3]: [iata#17, airport#18, city#19]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=702]\n\n(5) BroadcastHashJoin\nLeft keys [1]: [origin#405]\nRight keys [1]: [iata#17]\nJoin type: LeftOuter\nJoin condition: None\n\n(6) Project\nOutput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nInput [32]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, iata#17, airport#18, city#19]\n\n(7) Scan csv \nOutput [3]: [iata#682, airport#683, city#684]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(iata)]\nReadSchema: struct<iata:string,airport:string,city:string>\n\n(8) Filter\nInput [3]: [iata#682, airport#683, city#684]\nCondition : isnotnull(iata#682)\n\n(9) BroadcastExchange\nInput [3]: [iata#682, airport#683, city#684]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=706]\n\n(10) BroadcastHashJoin\nLeft keys [1]: [destination#406]\nRight keys [1]: [iata#682]\nJoin type: LeftOuter\nJoin condition: None\n\n(11) Project\nOutput [33]: [airport#18 AS origin_airport#678, city#19 AS origin_city#679, airport#683 AS desitination_airport#680, city#684 AS destination_city#681, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nInput [34]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19, iata#682, airport#683, city#684]\n\n(12) Sort\nInput [33]: [origin_airport#678, origin_city#679, desitination_airport#680, destination_city#681, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nArguments: [year#418 ASC NULLS FIRST, month#419 ASC NULLS FIRST], false, 0\n\n(13) WriteFiles\nInput [33]: [origin_airport#678, origin_city#679, desitination_airport#680, destination_city#681, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\n\n(14) Execute InsertIntoHadoopFsRelationCommand\nInput: []\nArguments: s3a://flight-bucket/result/flights, false, [year#418, month#419], Parquet, [__partition_columns=[\"year\",\"month\"], path=s3a://flight-bucket/result/flights], ErrorIfExists, [origin_airport, origin_city, desitination_airport, destination_city, dayOfMonth, dayOfWeek, depTime, crsDepTime, arrTime, crsArrTime, uniqueCarrier, flightNum, tailNum, actualElapsedTime, crsElapsedTime, airTime, arrDelay, depDelay, origin, destination, distance, taxiIn, taxiOut, cancelled, ... 9 more fields]\n\n(15) AdaptiveSparkPlan\nOutput: []\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"Execute InsertIntoHadoopFsRelationCommand","simpleString":"Execute InsertIntoHadoopFsRelationCommand s3a://flight-bucket/result/flights, false, [year#418, month#419], Parquet, [__partition_columns=[\"year\",\"month\"], path=s3a://flight-bucket/result/flights], ErrorIfExists, [origin_airport, origin_city, desitination_airport, destination_city, dayOfMonth, dayOfWeek, depTime, crsDepTime, arrTime, crsArrTime, uniqueCarrier, flightNum, tailNum, actualElapsedTime, crsElapsedTime, airTime, arrDelay, depDelay, origin, destination, distance, taxiIn, taxiOut, cancelled, ... 9 more fields]","children":[{"nodeName":"WriteFiles","simpleString":"WriteFiles","children":[{"nodeName":"Sort","simpleString":"Sort [year#418 ASC NULLS FIRST, month#419 ASC NULLS FIRST], false, 0","children":[{"nodeName":"Project","simpleString":"Project [airport#18 AS origin_airport#678, city#19 AS origin_city#679, airport#683 AS desitination_airport#680, city#684 AS destination_city#681, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, ... 9 more fields]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [destination#406], [iata#682], LeftOuter, BuildRight, false","children":[{"nodeName":"Project","simpleString":"Project [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, ... 7 more fields]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [origin#405], [iata#17], LeftOuter, BuildRight, false","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [dayOfMonth#391,dayOfWeek#392,depTime#393,crsDepTime#394,arrTime#395,crsArrTime#396,uniqueCarrier#397,flightNum#398,tailNum#399,actualElapsedTime#400,crsElapsedTime#401,airTime#402,arrDelay#403,depDelay#404,origin#405,destination#406,distance#407,taxiIn#408,taxiOut#409,cancelled#410,cancellationCode#411,diverted#412,carrierDelay#413,weatherDelay#414,... 5 more fields] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueC...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights]","ReadSchema":"struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":1886,"metricType":"sum"},{"name":"scan time","accumulatorId":1885,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":1890,"metricType":"timing"},{"name":"metadata time","accumulatorId":1887,"metricType":"timing"},{"name":"size of files read","accumulatorId":1888,"metricType":"size"},{"name":"number of output rows","accumulatorId":1884,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":1889,"metricType":"sum"}]},{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=702]","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(iata#17)","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [iata#17,airport#18,city#19] Batched: false, DataFilters: [isnotnull(iata#17)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(iata)], ReadSchema: struct<iata:string,airport:string,city:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<iata:string,airport:string,city:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(iata)]","DataFilters":"[isnotnull(iata#17)]"},"metrics":[{"name":"number of output rows","accumulatorId":1897,"metricType":"sum"},{"name":"number of files read","accumulatorId":1898,"metricType":"sum"},{"name":"metadata time","accumulatorId":1899,"metricType":"timing"},{"name":"size of files read","accumulatorId":1900,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1896,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":1895,"metricType":"timing"},{"name":"time to build","accumulatorId":1894,"metricType":"timing"},{"name":"time to collect","accumulatorId":1893,"metricType":"timing"},{"name":"number of output rows","accumulatorId":1892,"metricType":"sum"},{"name":"data size","accumulatorId":1891,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1883,"metricType":"sum"}]}],"metadata":{},"metrics":[]},{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=706]","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(iata#682)","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [iata#682,airport#683,city#684] Batched: false, DataFilters: [isnotnull(iata#682)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(iata)], ReadSchema: struct<iata:string,airport:string,city:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<iata:string,airport:string,city:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(iata)]","DataFilters":"[isnotnull(iata#682)]"},"metrics":[{"name":"number of output rows","accumulatorId":1907,"metricType":"sum"},{"name":"number of files read","accumulatorId":1908,"metricType":"sum"},{"name":"metadata time","accumulatorId":1909,"metricType":"timing"},{"name":"size of files read","accumulatorId":1910,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1906,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":1905,"metricType":"timing"},{"name":"time to build","accumulatorId":1904,"metricType":"timing"},{"name":"time to collect","accumulatorId":1903,"metricType":"timing"},{"name":"number of output rows","accumulatorId":1902,"metricType":"sum"},{"name":"data size","accumulatorId":1901,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1882,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":1879,"metricType":"timing"},{"name":"peak memory","accumulatorId":1880,"metricType":"size"},{"name":"spill size","accumulatorId":1881,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"task commit time","accumulatorId":1877,"metricType":"timing"},{"name":"number of written files","accumulatorId":1873,"metricType":"sum"},{"name":"job commit time","accumulatorId":1878,"metricType":"timing"},{"name":"number of output rows","accumulatorId":1875,"metricType":"sum"},{"name":"number of dynamic part","accumulatorId":1876,"metricType":"sum"},{"name":"written output","accumulatorId":1874,"metricType":"size"}]}],"metadata":{},"metrics":[]},"time":1725364461112,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":17,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (27)\n+- == Current Plan ==\n   Execute InsertIntoHadoopFsRelationCommand (14)\n   +- WriteFiles (13)\n      +- Sort (12)\n         +- Project (11)\n            +- BroadcastHashJoin LeftOuter BuildRight (10)\n               :- Project (7)\n               :  +- BroadcastHashJoin LeftOuter BuildRight (6)\n               :     :- Scan parquet  (1)\n               :     +- BroadcastQueryStage (5)\n               :        +- BroadcastExchange (4)\n               :           +- * Filter (3)\n               :              +- Scan csv  (2)\n               +- BroadcastQueryStage (9)\n                  +- ReusedExchange (8)\n+- == Initial Plan ==\n   Execute InsertIntoHadoopFsRelationCommand (26)\n   +- WriteFiles (25)\n      +- Sort (24)\n         +- Project (23)\n            +- BroadcastHashJoin LeftOuter BuildRight (22)\n               :- Project (18)\n               :  +- BroadcastHashJoin LeftOuter BuildRight (17)\n               :     :- Scan parquet  (1)\n               :     +- BroadcastExchange (16)\n               :        +- Filter (15)\n               :           +- Scan csv  (2)\n               +- BroadcastExchange (21)\n                  +- Filter (20)\n                     +- Scan csv  (19)\n\n\n(1) Scan parquet \nOutput [29]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nBatched: true\nLocation: InMemoryFileIndex [s3a://flight-bucket/refined/flights]\nReadSchema: struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>\n\n(2) Scan csv \nOutput [3]: [iata#17, airport#18, city#19]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(iata)]\nReadSchema: struct<iata:string,airport:string,city:string>\n\n(3) Filter [codegen id : 1]\nInput [3]: [iata#17, airport#18, city#19]\nCondition : isnotnull(iata#17)\n\n(4) BroadcastExchange\nInput [3]: [iata#17, airport#18, city#19]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=719]\n\n(5) BroadcastQueryStage\nOutput [3]: [iata#17, airport#18, city#19]\nArguments: 0\n\n(6) BroadcastHashJoin\nLeft keys [1]: [origin#405]\nRight keys [1]: [iata#17]\nJoin type: LeftOuter\nJoin condition: None\n\n(7) Project\nOutput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nInput [32]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, iata#17, airport#18, city#19]\n\n(8) ReusedExchange [Reuses operator id: 4]\nOutput [3]: [iata#682, airport#683, city#684]\n\n(9) BroadcastQueryStage\nOutput [3]: [iata#682, airport#683, city#684]\nArguments: 2\n\n(10) BroadcastHashJoin\nLeft keys [1]: [destination#406]\nRight keys [1]: [iata#682]\nJoin type: LeftOuter\nJoin condition: None\n\n(11) Project\nOutput [33]: [airport#18 AS origin_airport#678, city#19 AS origin_city#679, airport#683 AS desitination_airport#680, city#684 AS destination_city#681, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nInput [34]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19, iata#682, airport#683, city#684]\n\n(12) Sort\nInput [33]: [origin_airport#678, origin_city#679, desitination_airport#680, destination_city#681, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nArguments: [year#418 ASC NULLS FIRST, month#419 ASC NULLS FIRST], false, 0\n\n(13) WriteFiles\nInput [33]: [origin_airport#678, origin_city#679, desitination_airport#680, destination_city#681, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\n\n(14) Execute InsertIntoHadoopFsRelationCommand\nInput: []\nArguments: s3a://flight-bucket/result/flights, false, [year#418, month#419], Parquet, [__partition_columns=[\"year\",\"month\"], path=s3a://flight-bucket/result/flights], ErrorIfExists, [origin_airport, origin_city, desitination_airport, destination_city, dayOfMonth, dayOfWeek, depTime, crsDepTime, arrTime, crsArrTime, uniqueCarrier, flightNum, tailNum, actualElapsedTime, crsElapsedTime, airTime, arrDelay, depDelay, origin, destination, distance, taxiIn, taxiOut, cancelled, ... 9 more fields]\n\n(15) Filter\nInput [3]: [iata#17, airport#18, city#19]\nCondition : isnotnull(iata#17)\n\n(16) BroadcastExchange\nInput [3]: [iata#17, airport#18, city#19]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=702]\n\n(17) BroadcastHashJoin\nLeft keys [1]: [origin#405]\nRight keys [1]: [iata#17]\nJoin type: LeftOuter\nJoin condition: None\n\n(18) Project\nOutput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nInput [32]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, iata#17, airport#18, city#19]\n\n(19) Scan csv \nOutput [3]: [iata#682, airport#683, city#684]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(iata)]\nReadSchema: struct<iata:string,airport:string,city:string>\n\n(20) Filter\nInput [3]: [iata#682, airport#683, city#684]\nCondition : isnotnull(iata#682)\n\n(21) BroadcastExchange\nInput [3]: [iata#682, airport#683, city#684]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=706]\n\n(22) BroadcastHashJoin\nLeft keys [1]: [destination#406]\nRight keys [1]: [iata#682]\nJoin type: LeftOuter\nJoin condition: None\n\n(23) Project\nOutput [33]: [airport#18 AS origin_airport#678, city#19 AS origin_city#679, airport#683 AS desitination_airport#680, city#684 AS destination_city#681, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nInput [34]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19, iata#682, airport#683, city#684]\n\n(24) Sort\nInput [33]: [origin_airport#678, origin_city#679, desitination_airport#680, destination_city#681, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nArguments: [year#418 ASC NULLS FIRST, month#419 ASC NULLS FIRST], false, 0\n\n(25) WriteFiles\nInput [33]: [origin_airport#678, origin_city#679, desitination_airport#680, destination_city#681, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\n\n(26) Execute InsertIntoHadoopFsRelationCommand\nInput: []\nArguments: s3a://flight-bucket/result/flights, false, [year#418, month#419], Parquet, [__partition_columns=[\"year\",\"month\"], path=s3a://flight-bucket/result/flights], ErrorIfExists, [origin_airport, origin_city, desitination_airport, destination_city, dayOfMonth, dayOfWeek, depTime, crsDepTime, arrTime, crsArrTime, uniqueCarrier, flightNum, tailNum, actualElapsedTime, crsElapsedTime, airTime, arrDelay, depDelay, origin, destination, distance, taxiIn, taxiOut, cancelled, ... 9 more fields]\n\n(27) AdaptiveSparkPlan\nOutput: []\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"Execute InsertIntoHadoopFsRelationCommand","simpleString":"Execute InsertIntoHadoopFsRelationCommand s3a://flight-bucket/result/flights, false, [year#418, month#419], Parquet, [__partition_columns=[\"year\",\"month\"], path=s3a://flight-bucket/result/flights], ErrorIfExists, [origin_airport, origin_city, desitination_airport, destination_city, dayOfMonth, dayOfWeek, depTime, crsDepTime, arrTime, crsArrTime, uniqueCarrier, flightNum, tailNum, actualElapsedTime, crsElapsedTime, airTime, arrDelay, depDelay, origin, destination, distance, taxiIn, taxiOut, cancelled, ... 9 more fields]","children":[{"nodeName":"WriteFiles","simpleString":"WriteFiles","children":[{"nodeName":"Sort","simpleString":"Sort [year#418 ASC NULLS FIRST, month#419 ASC NULLS FIRST], false, 0","children":[{"nodeName":"Project","simpleString":"Project [airport#18 AS origin_airport#678, city#19 AS origin_city#679, airport#683 AS desitination_airport#680, city#684 AS destination_city#681, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, ... 9 more fields]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [destination#406], [iata#682], LeftOuter, BuildRight, false","children":[{"nodeName":"Project","simpleString":"Project [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, ... 7 more fields]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [origin#405], [iata#17], LeftOuter, BuildRight, false","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [dayOfMonth#391,dayOfWeek#392,depTime#393,crsDepTime#394,arrTime#395,crsArrTime#396,uniqueCarrier#397,flightNum#398,tailNum#399,actualElapsedTime#400,crsElapsedTime#401,airTime#402,arrDelay#403,depDelay#404,origin#405,destination#406,distance#407,taxiIn#408,taxiOut#409,cancelled#410,cancellationCode#411,diverted#412,carrierDelay#413,weatherDelay#414,... 5 more fields] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueC...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights]","ReadSchema":"struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":1886,"metricType":"sum"},{"name":"scan time","accumulatorId":1885,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":1890,"metricType":"timing"},{"name":"metadata time","accumulatorId":1887,"metricType":"timing"},{"name":"size of files read","accumulatorId":1888,"metricType":"size"},{"name":"number of output rows","accumulatorId":1884,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":1889,"metricType":"sum"}]},{"nodeName":"BroadcastQueryStage","simpleString":"BroadcastQueryStage 0","children":[{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=719]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(iata#17)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [iata#17,airport#18,city#19] Batched: false, DataFilters: [isnotnull(iata#17)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(iata)], ReadSchema: struct<iata:string,airport:string,city:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<iata:string,airport:string,city:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(iata)]","DataFilters":"[isnotnull(iata#17)]"},"metrics":[{"name":"number of output rows","accumulatorId":1897,"metricType":"sum"},{"name":"number of files read","accumulatorId":1898,"metricType":"sum"},{"name":"metadata time","accumulatorId":1899,"metricType":"timing"},{"name":"size of files read","accumulatorId":1900,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1922,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1921,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":1920,"metricType":"timing"},{"name":"time to build","accumulatorId":1919,"metricType":"timing"},{"name":"time to collect","accumulatorId":1918,"metricType":"timing"},{"name":"number of output rows","accumulatorId":1917,"metricType":"sum"},{"name":"data size","accumulatorId":1916,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1915,"metricType":"sum"}]}],"metadata":{},"metrics":[]},{"nodeName":"BroadcastQueryStage","simpleString":"BroadcastQueryStage 2","children":[{"nodeName":"ReusedExchange","simpleString":"ReusedExchange [iata#682, airport#683, city#684], BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=719]","children":[{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=719]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(iata#17)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [iata#17,airport#18,city#19] Batched: false, DataFilters: [isnotnull(iata#17)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(iata)], ReadSchema: struct<iata:string,airport:string,city:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<iata:string,airport:string,city:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(iata)]","DataFilters":"[isnotnull(iata#17)]"},"metrics":[{"name":"number of output rows","accumulatorId":1897,"metricType":"sum"},{"name":"number of files read","accumulatorId":1898,"metricType":"sum"},{"name":"metadata time","accumulatorId":1899,"metricType":"timing"},{"name":"size of files read","accumulatorId":1900,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1922,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1921,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":1920,"metricType":"timing"},{"name":"time to build","accumulatorId":1919,"metricType":"timing"},{"name":"time to collect","accumulatorId":1918,"metricType":"timing"},{"name":"number of output rows","accumulatorId":1917,"metricType":"sum"},{"name":"data size","accumulatorId":1916,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1914,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":1911,"metricType":"timing"},{"name":"peak memory","accumulatorId":1912,"metricType":"size"},{"name":"spill size","accumulatorId":1913,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"task commit time","accumulatorId":1877,"metricType":"timing"},{"name":"number of written files","accumulatorId":1873,"metricType":"sum"},{"name":"job commit time","accumulatorId":1878,"metricType":"timing"},{"name":"number of output rows","accumulatorId":1875,"metricType":"sum"},{"name":"number of dynamic part","accumulatorId":1876,"metricType":"sum"},{"name":"written output","accumulatorId":1874,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":17,"accumUpdates":[[1898,1],[1899,2],[1900,244438]]}
{"Event":"SparkListenerJobStart","Job ID":24,"Submission Time":1725364461466,"Stage Infos":[{"Stage ID":30,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Number of Tasks":1,"RDD Info":[{"RDD ID":91,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"243\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[90],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":90,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"245\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[89],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":88,"Name":"FileScanRDD","Scope":"{\"id\":\"248\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":89,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"248\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[88],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:219)\njava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[30],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"243\",\"name\":\"BroadcastExchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"true","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.job.tags":"broadcast exchange (runId cae6a267-7ec2-45c3-9d89-45ce11a56944)","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"17","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364452236_270538811","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"17","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":30,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Number of Tasks":1,"RDD Info":[{"RDD ID":91,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"243\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[90],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":90,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"245\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[89],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":88,"Name":"FileScanRDD","Scope":"{\"id\":\"248\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":89,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"248\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[88],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:219)\njava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364461506,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"243\",\"name\":\"BroadcastExchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"true","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.job.tags":"broadcast exchange (runId cae6a267-7ec2-45c3-9d89-45ce11a56944)","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"17","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364452236_270538811","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"17","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":30,"Stage Attempt ID":0,"Task Info":{"Task ID":26,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364461571,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":30,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":26,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364461571,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364461867,"Failed":false,"Killed":false,"Accumulables":[{"ID":1897,"Name":"number of output rows","Update":"3376","Value":"3376","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1921,"Name":"duration","Update":"41","Value":"41","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1922,"Name":"number of output rows","Update":"3376","Value":"3376","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1923,"Name":"internal.metrics.executorDeserializeTime","Update":208,"Value":208,"Internal":true,"Count Failed Values":true},{"ID":1924,"Name":"internal.metrics.executorDeserializeCpuTime","Update":4639293,"Value":4639293,"Internal":true,"Count Failed Values":true},{"ID":1925,"Name":"internal.metrics.executorRunTime","Update":42,"Value":42,"Internal":true,"Count Failed Values":true},{"ID":1926,"Name":"internal.metrics.executorCpuTime","Update":20909626,"Value":20909626,"Internal":true,"Count Failed Values":true},{"ID":1927,"Name":"internal.metrics.resultSize","Update":123186,"Value":123186,"Internal":true,"Count Failed Values":true},{"ID":1954,"Name":"internal.metrics.input.bytesRead","Update":244438,"Value":244438,"Internal":true,"Count Failed Values":true},{"ID":1955,"Name":"internal.metrics.input.recordsRead","Update":3376,"Value":3376,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":208,"Executor Deserialize CPU Time":4639293,"Executor Run Time":42,"Executor CPU Time":20909626,"Peak Execution Memory":0,"Result Size":123186,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":244438,"Records Read":3376},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":30,"Stage Attempt ID":0,"Stage Name":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Number of Tasks":1,"RDD Info":[{"RDD ID":91,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"243\",\"name\":\"BroadcastExchange\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[90],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":90,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"245\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[89],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":88,"Name":"FileScanRDD","Scope":"{\"id\":\"248\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":89,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"248\",\"name\":\"Scan csv \"}","Callsite":"$anonfun$withThreadLocalCaptured$1 at FutureTask.java:264","Parent IDs":[88],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.execution.SQLExecution$.$anonfun$withThreadLocalCaptured$1(SQLExecution.scala:219)\njava.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364461506,"Completion Time":1725364461878,"Accumulables":[{"ID":1897,"Name":"number of output rows","Value":"3376","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1921,"Name":"duration","Value":"41","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1922,"Name":"number of output rows","Value":"3376","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1923,"Name":"internal.metrics.executorDeserializeTime","Value":208,"Internal":true,"Count Failed Values":true},{"ID":1924,"Name":"internal.metrics.executorDeserializeCpuTime","Value":4639293,"Internal":true,"Count Failed Values":true},{"ID":1925,"Name":"internal.metrics.executorRunTime","Value":42,"Internal":true,"Count Failed Values":true},{"ID":1926,"Name":"internal.metrics.executorCpuTime","Value":20909626,"Internal":true,"Count Failed Values":true},{"ID":1927,"Name":"internal.metrics.resultSize","Value":123186,"Internal":true,"Count Failed Values":true},{"ID":1954,"Name":"internal.metrics.input.bytesRead","Value":244438,"Internal":true,"Count Failed Values":true},{"ID":1955,"Name":"internal.metrics.input.recordsRead","Value":3376,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":24,"Completion Time":1725364461890,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":17,"accumUpdates":[[1920,42],[1919,56],[1918,763],[1917,3376],[1916,2228208]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":17,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (29)\n+- == Final Plan ==\n   Execute InsertIntoHadoopFsRelationCommand (15)\n   +- WriteFiles (14)\n      +- * Sort (13)\n         +- * Project (12)\n            +- * BroadcastHashJoin LeftOuter BuildRight (11)\n               :- * Project (8)\n               :  +- * BroadcastHashJoin LeftOuter BuildRight (7)\n               :     :- * ColumnarToRow (2)\n               :     :  +- Scan parquet  (1)\n               :     +- BroadcastQueryStage (6), Statistics(sizeInBytes=2.1 MiB, rowCount=3.38E+3)\n               :        +- BroadcastExchange (5)\n               :           +- * Filter (4)\n               :              +- Scan csv  (3)\n               +- BroadcastQueryStage (10), Statistics(sizeInBytes=2.1 MiB, rowCount=3.38E+3)\n                  +- ReusedExchange (9)\n+- == Initial Plan ==\n   Execute InsertIntoHadoopFsRelationCommand (28)\n   +- WriteFiles (27)\n      +- Sort (26)\n         +- Project (25)\n            +- BroadcastHashJoin LeftOuter BuildRight (24)\n               :- Project (20)\n               :  +- BroadcastHashJoin LeftOuter BuildRight (19)\n               :     :- Scan parquet  (16)\n               :     +- BroadcastExchange (18)\n               :        +- Filter (17)\n               :           +- Scan csv  (3)\n               +- BroadcastExchange (23)\n                  +- Filter (22)\n                     +- Scan csv  (21)\n\n\n(1) Scan parquet \nOutput [29]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nBatched: true\nLocation: InMemoryFileIndex [s3a://flight-bucket/refined/flights]\nReadSchema: struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>\n\n(2) ColumnarToRow [codegen id : 3]\nInput [29]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\n\n(3) Scan csv \nOutput [3]: [iata#17, airport#18, city#19]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(iata)]\nReadSchema: struct<iata:string,airport:string,city:string>\n\n(4) Filter [codegen id : 1]\nInput [3]: [iata#17, airport#18, city#19]\nCondition : isnotnull(iata#17)\n\n(5) BroadcastExchange\nInput [3]: [iata#17, airport#18, city#19]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=719]\n\n(6) BroadcastQueryStage\nOutput [3]: [iata#17, airport#18, city#19]\nArguments: 0\n\n(7) BroadcastHashJoin [codegen id : 3]\nLeft keys [1]: [origin#405]\nRight keys [1]: [iata#17]\nJoin type: LeftOuter\nJoin condition: None\n\n(8) Project [codegen id : 3]\nOutput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nInput [32]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, iata#17, airport#18, city#19]\n\n(9) ReusedExchange [Reuses operator id: 5]\nOutput [3]: [iata#682, airport#683, city#684]\n\n(10) BroadcastQueryStage\nOutput [3]: [iata#682, airport#683, city#684]\nArguments: 2\n\n(11) BroadcastHashJoin [codegen id : 3]\nLeft keys [1]: [destination#406]\nRight keys [1]: [iata#682]\nJoin type: LeftOuter\nJoin condition: None\n\n(12) Project [codegen id : 3]\nOutput [33]: [airport#18 AS origin_airport#678, city#19 AS origin_city#679, airport#683 AS desitination_airport#680, city#684 AS destination_city#681, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nInput [34]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19, iata#682, airport#683, city#684]\n\n(13) Sort [codegen id : 3]\nInput [33]: [origin_airport#678, origin_city#679, desitination_airport#680, destination_city#681, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nArguments: [year#418 ASC NULLS FIRST, month#419 ASC NULLS FIRST], false, 0\n\n(14) WriteFiles\nInput [33]: [origin_airport#678, origin_city#679, desitination_airport#680, destination_city#681, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\n\n(15) Execute InsertIntoHadoopFsRelationCommand\nInput: []\nArguments: s3a://flight-bucket/result/flights, false, [year#418, month#419], Parquet, [__partition_columns=[\"year\",\"month\"], path=s3a://flight-bucket/result/flights], ErrorIfExists, [origin_airport, origin_city, desitination_airport, destination_city, dayOfMonth, dayOfWeek, depTime, crsDepTime, arrTime, crsArrTime, uniqueCarrier, flightNum, tailNum, actualElapsedTime, crsElapsedTime, airTime, arrDelay, depDelay, origin, destination, distance, taxiIn, taxiOut, cancelled, ... 9 more fields]\n\n(16) Scan parquet \nOutput [29]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nBatched: true\nLocation: InMemoryFileIndex [s3a://flight-bucket/refined/flights]\nReadSchema: struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>\n\n(17) Filter\nInput [3]: [iata#17, airport#18, city#19]\nCondition : isnotnull(iata#17)\n\n(18) BroadcastExchange\nInput [3]: [iata#17, airport#18, city#19]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=702]\n\n(19) BroadcastHashJoin\nLeft keys [1]: [origin#405]\nRight keys [1]: [iata#17]\nJoin type: LeftOuter\nJoin condition: None\n\n(20) Project\nOutput [31]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19]\nInput [32]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, iata#17, airport#18, city#19]\n\n(21) Scan csv \nOutput [3]: [iata#682, airport#683, city#684]\nBatched: false\nLocation: InMemoryFileIndex [s3a://flight-bucket/raw/airports]\nPushedFilters: [IsNotNull(iata)]\nReadSchema: struct<iata:string,airport:string,city:string>\n\n(22) Filter\nInput [3]: [iata#682, airport#683, city#684]\nCondition : isnotnull(iata#682)\n\n(23) BroadcastExchange\nInput [3]: [iata#682, airport#683, city#684]\nArguments: HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=706]\n\n(24) BroadcastHashJoin\nLeft keys [1]: [destination#406]\nRight keys [1]: [iata#682]\nJoin type: LeftOuter\nJoin condition: None\n\n(25) Project\nOutput [33]: [airport#18 AS origin_airport#678, city#19 AS origin_city#679, airport#683 AS desitination_airport#680, city#684 AS destination_city#681, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nInput [34]: [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419, airport#18, city#19, iata#682, airport#683, city#684]\n\n(26) Sort\nInput [33]: [origin_airport#678, origin_city#679, desitination_airport#680, destination_city#681, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\nArguments: [year#418 ASC NULLS FIRST, month#419 ASC NULLS FIRST], false, 0\n\n(27) WriteFiles\nInput [33]: [origin_airport#678, origin_city#679, desitination_airport#680, destination_city#681, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, nasDelay#415, securityDelay#416, lateAircraftDelay#417, year#418, month#419]\n\n(28) Execute InsertIntoHadoopFsRelationCommand\nInput: []\nArguments: s3a://flight-bucket/result/flights, false, [year#418, month#419], Parquet, [__partition_columns=[\"year\",\"month\"], path=s3a://flight-bucket/result/flights], ErrorIfExists, [origin_airport, origin_city, desitination_airport, destination_city, dayOfMonth, dayOfWeek, depTime, crsDepTime, arrTime, crsArrTime, uniqueCarrier, flightNum, tailNum, actualElapsedTime, crsElapsedTime, airTime, arrDelay, depDelay, origin, destination, distance, taxiIn, taxiOut, cancelled, ... 9 more fields]\n\n(29) AdaptiveSparkPlan\nOutput: []\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"Execute InsertIntoHadoopFsRelationCommand","simpleString":"Execute InsertIntoHadoopFsRelationCommand s3a://flight-bucket/result/flights, false, [year#418, month#419], Parquet, [__partition_columns=[\"year\",\"month\"], path=s3a://flight-bucket/result/flights], ErrorIfExists, [origin_airport, origin_city, desitination_airport, destination_city, dayOfMonth, dayOfWeek, depTime, crsDepTime, arrTime, crsArrTime, uniqueCarrier, flightNum, tailNum, actualElapsedTime, crsElapsedTime, airTime, arrDelay, depDelay, origin, destination, distance, taxiIn, taxiOut, cancelled, ... 9 more fields]","children":[{"nodeName":"WriteFiles","simpleString":"WriteFiles","children":[{"nodeName":"WholeStageCodegen (3)","simpleString":"WholeStageCodegen (3)","children":[{"nodeName":"Sort","simpleString":"Sort [year#418 ASC NULLS FIRST, month#419 ASC NULLS FIRST], false, 0","children":[{"nodeName":"Project","simpleString":"Project [airport#18 AS origin_airport#678, city#19 AS origin_city#679, airport#683 AS desitination_airport#680, city#684 AS destination_city#681, dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, ... 9 more fields]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [destination#406], [iata#682], LeftOuter, BuildRight, false","children":[{"nodeName":"Project","simpleString":"Project [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, ... 7 more fields]","children":[{"nodeName":"BroadcastHashJoin","simpleString":"BroadcastHashJoin [origin#405], [iata#17], LeftOuter, BuildRight, false","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [dayOfMonth#391,dayOfWeek#392,depTime#393,crsDepTime#394,arrTime#395,crsArrTime#396,uniqueCarrier#397,flightNum#398,tailNum#399,actualElapsedTime#400,crsElapsedTime#401,airTime#402,arrDelay#403,depDelay#404,origin#405,destination#406,distance#407,taxiIn#408,taxiOut#409,cancelled#410,cancellationCode#411,diverted#412,carrierDelay#413,weatherDelay#414,... 5 more fields] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueC...","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights]","ReadSchema":"struct<dayOfMonth:int,dayOfWeek:int,depTime:int,crsDepTime:int,arrTime:int,crsArrTime:int,uniqueCarrier:string,flightNum:string,tailNum:string,actualElapsedTime:int,crsElapsedTime:int,airTime:int,arrDelay:int,depDelay:int,origin:string,destination:string,distance:int,taxiIn:int,taxiOut:int,cancelled:string,cancellationCode:string,diverted:string,carrierDelay:string,weatherDelay:string,nasDelay:string,securityDelay:string,lateAircraftDelay:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":1974,"metricType":"sum"},{"name":"scan time","accumulatorId":1973,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":1978,"metricType":"timing"},{"name":"metadata time","accumulatorId":1975,"metricType":"timing"},{"name":"size of files read","accumulatorId":1976,"metricType":"size"},{"name":"number of output rows","accumulatorId":1972,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":1977,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1970,"metricType":"sum"},{"name":"number of input batches","accumulatorId":1971,"metricType":"sum"}]},{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"BroadcastQueryStage","simpleString":"BroadcastQueryStage 0","children":[{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=719]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(iata#17)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [iata#17,airport#18,city#19] Batched: false, DataFilters: [isnotnull(iata#17)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(iata)], ReadSchema: struct<iata:string,airport:string,city:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<iata:string,airport:string,city:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(iata)]","DataFilters":"[isnotnull(iata#17)]"},"metrics":[{"name":"number of output rows","accumulatorId":1897,"metricType":"sum"},{"name":"number of files read","accumulatorId":1898,"metricType":"sum"},{"name":"metadata time","accumulatorId":1899,"metricType":"timing"},{"name":"size of files read","accumulatorId":1900,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1922,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1921,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":1920,"metricType":"timing"},{"name":"time to build","accumulatorId":1919,"metricType":"timing"},{"name":"time to collect","accumulatorId":1918,"metricType":"timing"},{"name":"number of output rows","accumulatorId":1917,"metricType":"sum"},{"name":"data size","accumulatorId":1916,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1969,"metricType":"sum"}]}],"metadata":{},"metrics":[]},{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"BroadcastQueryStage","simpleString":"BroadcastQueryStage 2","children":[{"nodeName":"ReusedExchange","simpleString":"ReusedExchange [iata#682, airport#683, city#684], BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=719]","children":[{"nodeName":"BroadcastExchange","simpleString":"BroadcastExchange HashedRelationBroadcastMode(List(input[0, string, false]),false), [plan_id=719]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Filter","simpleString":"Filter isnotnull(iata#17)","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan csv ","simpleString":"FileScan csv [iata#17,airport#18,city#19] Batched: false, DataFilters: [isnotnull(iata#17)], Format: CSV, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports], PartitionFilters: [], PushedFilters: [IsNotNull(iata)], ReadSchema: struct<iata:string,airport:string,city:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/raw/airports]","ReadSchema":"struct<iata:string,airport:string,city:string>","Format":"CSV","Batched":"false","PartitionFilters":"[]","PushedFilters":"[IsNotNull(iata)]","DataFilters":"[isnotnull(iata#17)]"},"metrics":[{"name":"number of output rows","accumulatorId":1897,"metricType":"sum"},{"name":"number of files read","accumulatorId":1898,"metricType":"sum"},{"name":"metadata time","accumulatorId":1899,"metricType":"timing"},{"name":"size of files read","accumulatorId":1900,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1922,"metricType":"sum"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1921,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"time to broadcast","accumulatorId":1920,"metricType":"timing"},{"name":"time to build","accumulatorId":1919,"metricType":"timing"},{"name":"time to collect","accumulatorId":1918,"metricType":"timing"},{"name":"number of output rows","accumulatorId":1917,"metricType":"sum"},{"name":"data size","accumulatorId":1916,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":1968,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"sort time","accumulatorId":1965,"metricType":"timing"},{"name":"peak memory","accumulatorId":1966,"metricType":"size"},{"name":"spill size","accumulatorId":1967,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":1964,"metricType":"timing"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"task commit time","accumulatorId":1962,"metricType":"timing"},{"name":"number of written files","accumulatorId":1958,"metricType":"sum"},{"name":"job commit time","accumulatorId":1963,"metricType":"timing"},{"name":"number of output rows","accumulatorId":1960,"metricType":"sum"},{"name":"number of dynamic part","accumulatorId":1961,"metricType":"sum"},{"name":"written output","accumulatorId":1959,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":17,"accumUpdates":[[1974,2],[1978,0],[1975,0],[1976,838367],[1977,2]]}
{"Event":"SparkListenerJobStart","Job ID":25,"Submission Time":1725364463217,"Stage Infos":[{"Stage ID":31,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":95,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"253\",\"name\":\"WriteFiles\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[94],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":94,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"254\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[93],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":92,"Name":"FileScanRDD","Scope":"{\"id\":\"267\",\"name\":\"Scan parquet \"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":93,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"267\",\"name\":\"Scan parquet \"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[92],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.parquet(DataFrameWriter.scala:792)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[31],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"17","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364452236_270538811","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"17","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":31,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":95,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"253\",\"name\":\"WriteFiles\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[94],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":94,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"254\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[93],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":92,"Name":"FileScanRDD","Scope":"{\"id\":\"267\",\"name\":\"Scan parquet \"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":93,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"267\",\"name\":\"Scan parquet \"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[92],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.parquet(DataFrameWriter.scala:792)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364463247,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"17","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364452236_270538811","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"17","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":31,"Stage Attempt ID":0,"Task Info":{"Task ID":27,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364463305,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":31,"Stage Attempt ID":0,"Task Info":{"Task ID":28,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1725364463307,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":31,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":27,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364463305,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364464421,"Failed":false,"Killed":false,"Accumulables":[{"ID":1962,"Name":"task commit time","Update":"109","Value":"109","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1964,"Name":"duration","Update":"527","Value":"527","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1965,"Name":"sort time","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1966,"Name":"peak memory","Update":"17825776","Value":"17825776","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1967,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1968,"Name":"number of output rows","Update":"30000","Value":"30000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1969,"Name":"number of output rows","Update":"30000","Value":"30000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1970,"Name":"number of output rows","Update":"30000","Value":"30000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1971,"Name":"number of input batches","Update":"8","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1972,"Name":"number of output rows","Update":"30000","Value":"30000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1973,"Name":"scan time","Update":"77","Value":"77","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1979,"Name":"internal.metrics.executorDeserializeTime","Update":277,"Value":277,"Internal":true,"Count Failed Values":true},{"ID":1980,"Name":"internal.metrics.executorDeserializeCpuTime","Update":28470917,"Value":28470917,"Internal":true,"Count Failed Values":true},{"ID":1981,"Name":"internal.metrics.executorRunTime","Update":791,"Value":791,"Internal":true,"Count Failed Values":true},{"ID":1982,"Name":"internal.metrics.executorCpuTime","Update":450266713,"Value":450266713,"Internal":true,"Count Failed Values":true},{"ID":1983,"Name":"internal.metrics.resultSize","Update":4521,"Value":4521,"Internal":true,"Count Failed Values":true},{"ID":1984,"Name":"internal.metrics.jvmGCTime","Update":30,"Value":30,"Internal":true,"Count Failed Values":true},{"ID":1985,"Name":"internal.metrics.resultSerializationTime","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":1988,"Name":"internal.metrics.peakExecutionMemory","Update":51642320,"Value":51642320,"Internal":true,"Count Failed Values":true},{"ID":2010,"Name":"internal.metrics.input.bytesRead","Update":466462,"Value":466462,"Internal":true,"Count Failed Values":true},{"ID":2011,"Name":"internal.metrics.input.recordsRead","Update":30000,"Value":30000,"Internal":true,"Count Failed Values":true},{"ID":2012,"Name":"internal.metrics.output.bytesWritten","Update":486786,"Value":486786,"Internal":true,"Count Failed Values":true},{"ID":2013,"Name":"internal.metrics.output.recordsWritten","Update":30000,"Value":30000,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":277,"Executor Deserialize CPU Time":28470917,"Executor Run Time":791,"Executor CPU Time":450266713,"Peak Execution Memory":51642320,"Result Size":4521,"JVM GC Time":30,"Result Serialization Time":1,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":466462,"Records Read":30000},"Output Metrics":{"Bytes Written":486786,"Records Written":30000},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":31,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":28,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1725364463307,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364464500,"Failed":false,"Killed":false,"Accumulables":[{"ID":1962,"Name":"task commit time","Update":"80","Value":"189","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1964,"Name":"duration","Update":"690","Value":"1217","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1965,"Name":"sort time","Update":"8","Value":"18","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1966,"Name":"peak memory","Update":"17301488","Value":"35127264","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1967,"Name":"spill size","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1968,"Name":"number of output rows","Update":"20000","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1969,"Name":"number of output rows","Update":"20000","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1970,"Name":"number of output rows","Update":"20000","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1971,"Name":"number of input batches","Update":"5","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1972,"Name":"number of output rows","Update":"20000","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1973,"Name":"scan time","Update":"274","Value":"351","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1979,"Name":"internal.metrics.executorDeserializeTime","Update":293,"Value":570,"Internal":true,"Count Failed Values":true},{"ID":1980,"Name":"internal.metrics.executorDeserializeCpuTime","Update":42727377,"Value":71198294,"Internal":true,"Count Failed Values":true},{"ID":1981,"Name":"internal.metrics.executorRunTime","Update":877,"Value":1668,"Internal":true,"Count Failed Values":true},{"ID":1982,"Name":"internal.metrics.executorCpuTime","Update":529755249,"Value":980021962,"Internal":true,"Count Failed Values":true},{"ID":1983,"Name":"internal.metrics.resultSize","Update":4478,"Value":8999,"Internal":true,"Count Failed Values":true},{"ID":1984,"Name":"internal.metrics.jvmGCTime","Update":25,"Value":55,"Internal":true,"Count Failed Values":true},{"ID":1988,"Name":"internal.metrics.peakExecutionMemory","Update":51118032,"Value":102760352,"Internal":true,"Count Failed Values":true},{"ID":2010,"Name":"internal.metrics.input.bytesRead","Update":382602,"Value":849064,"Internal":true,"Count Failed Values":true},{"ID":2011,"Name":"internal.metrics.input.recordsRead","Update":20000,"Value":50000,"Internal":true,"Count Failed Values":true},{"ID":2012,"Name":"internal.metrics.output.bytesWritten","Update":395311,"Value":882097,"Internal":true,"Count Failed Values":true},{"ID":2013,"Name":"internal.metrics.output.recordsWritten","Update":20000,"Value":50000,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":293,"Executor Deserialize CPU Time":42727377,"Executor Run Time":877,"Executor CPU Time":529755249,"Peak Execution Memory":51118032,"Result Size":4478,"JVM GC Time":25,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":382602,"Records Read":20000},"Output Metrics":{"Bytes Written":395311,"Records Written":20000},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":31,"Stage Attempt ID":0,"Stage Name":"parquet at NativeMethodAccessorImpl.java:0","Number of Tasks":2,"RDD Info":[{"RDD ID":95,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"253\",\"name\":\"WriteFiles\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[94],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":94,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"254\",\"name\":\"WholeStageCodegen (3)\"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[93],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":92,"Name":"FileScanRDD","Scope":"{\"id\":\"267\",\"name\":\"Scan parquet \"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":93,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"267\",\"name\":\"Scan parquet \"}","Callsite":"parquet at NativeMethodAccessorImpl.java:0","Parent IDs":[92],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.DataFrameWriter.parquet(DataFrameWriter.scala:792)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\njava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\njava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\njava.base/java.lang.reflect.Method.invoke(Method.java:566)\npy4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\npy4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)\npy4j.Gateway.invoke(Gateway.java:282)\npy4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\npy4j.commands.CallCommand.execute(CallCommand.java:79)\npy4j.GatewayConnection.run(GatewayConnection.java:238)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364463247,"Completion Time":1725364464501,"Accumulables":[{"ID":1962,"Name":"task commit time","Value":"189","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1964,"Name":"duration","Value":"1217","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1965,"Name":"sort time","Value":"18","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1966,"Name":"peak memory","Value":"35127264","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1967,"Name":"spill size","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1968,"Name":"number of output rows","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1969,"Name":"number of output rows","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1970,"Name":"number of output rows","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1971,"Name":"number of input batches","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1972,"Name":"number of output rows","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1973,"Name":"scan time","Value":"351","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":1979,"Name":"internal.metrics.executorDeserializeTime","Value":570,"Internal":true,"Count Failed Values":true},{"ID":1980,"Name":"internal.metrics.executorDeserializeCpuTime","Value":71198294,"Internal":true,"Count Failed Values":true},{"ID":1981,"Name":"internal.metrics.executorRunTime","Value":1668,"Internal":true,"Count Failed Values":true},{"ID":1982,"Name":"internal.metrics.executorCpuTime","Value":980021962,"Internal":true,"Count Failed Values":true},{"ID":1983,"Name":"internal.metrics.resultSize","Value":8999,"Internal":true,"Count Failed Values":true},{"ID":1984,"Name":"internal.metrics.jvmGCTime","Value":55,"Internal":true,"Count Failed Values":true},{"ID":1985,"Name":"internal.metrics.resultSerializationTime","Value":1,"Internal":true,"Count Failed Values":true},{"ID":1988,"Name":"internal.metrics.peakExecutionMemory","Value":102760352,"Internal":true,"Count Failed Values":true},{"ID":2010,"Name":"internal.metrics.input.bytesRead","Value":849064,"Internal":true,"Count Failed Values":true},{"ID":2011,"Name":"internal.metrics.input.recordsRead","Value":50000,"Internal":true,"Count Failed Values":true},{"ID":2012,"Name":"internal.metrics.output.bytesWritten","Value":882097,"Internal":true,"Count Failed Values":true},{"ID":2013,"Name":"internal.metrics.output.recordsWritten","Value":50000,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":25,"Completion Time":1725364464502,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":17,"accumUpdates":[[1958,2],[1963,433],[1960,50000],[1961,2],[1959,882097]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":17,"time":1725364464975,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":18,"rootExecutionId":18,"description":"Started by: admin","details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (7)\n+- TakeOrderedAndProject (6)\n   +- HashAggregate (5)\n      +- Exchange (4)\n         +- HashAggregate (3)\n            +- Project (2)\n               +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [5]: [origin#405, destination#406, distance#407, year#418, month#419]\nBatched: true\nLocation: InMemoryFileIndex [s3a://flight-bucket/refined/flights]\nReadSchema: struct<origin:string,destination:string,distance:int>\n\n(2) Project\nOutput [3]: [origin#405, destination#406, distance#407]\nInput [5]: [origin#405, destination#406, distance#407, year#418, month#419]\n\n(3) HashAggregate\nInput [3]: [origin#405, destination#406, distance#407]\nKeys [2]: [origin#405, destination#406]\nFunctions [1]: [partial_max(distance#407)]\nAggregate Attributes [1]: [max#902]\nResults [3]: [origin#405, destination#406, max#903]\n\n(4) Exchange\nInput [3]: [origin#405, destination#406, max#903]\nArguments: hashpartitioning(origin#405, destination#406, 200), ENSURE_REQUIREMENTS, [plan_id=813]\n\n(5) HashAggregate\nInput [3]: [origin#405, destination#406, max#903]\nKeys [2]: [origin#405, destination#406]\nFunctions [1]: [max(distance#407)]\nAggregate Attributes [1]: [max(distance#407)#895]\nResults [3]: [origin#405, destination#406, max(distance#407)#895 AS distance#894]\n\n(6) TakeOrderedAndProject\nInput [3]: [origin#405, destination#406, distance#894]\nArguments: 10, [distance#894 DESC NULLS LAST], [origin#405, destination#406, distance#894]\n\n(7) AdaptiveSparkPlan\nOutput [3]: [origin#405, destination#406, distance#894]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"TakeOrderedAndProject","simpleString":"TakeOrderedAndProject(limit=10, orderBy=[distance#894 DESC NULLS LAST], output=[origin#405,destination#406,distance#894])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[origin#405, destination#406], functions=[max(distance#407)])","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(origin#405, destination#406, 200), ENSURE_REQUIREMENTS, [plan_id=813]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[origin#405, destination#406], functions=[partial_max(distance#407)])","children":[{"nodeName":"Project","simpleString":"Project [origin#405, destination#406, distance#407]","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [origin#405,destination#406,distance#407,year#418,month#419] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<origin:string,destination:string,distance:int>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights]","ReadSchema":"struct<origin:string,destination:string,distance:int>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":2070,"metricType":"sum"},{"name":"scan time","accumulatorId":2069,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":2074,"metricType":"timing"},{"name":"metadata time","accumulatorId":2071,"metricType":"timing"},{"name":"size of files read","accumulatorId":2072,"metricType":"size"},{"name":"number of output rows","accumulatorId":2068,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":2073,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":2064,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":2065,"metricType":"timing"},{"name":"peak memory","accumulatorId":2063,"metricType":"size"},{"name":"number of output rows","accumulatorId":2062,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":2067,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":2066,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":2060,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":2054,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":2061,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":2055,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":2052,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":2049,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":2058,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":2051,"metricType":"sum"},{"name":"records read","accumulatorId":2048,"metricType":"sum"},{"name":"local bytes read","accumulatorId":2046,"metricType":"size"},{"name":"fetch wait time","accumulatorId":2047,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":2044,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":2050,"metricType":"sum"},{"name":"local blocks read","accumulatorId":2043,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":2053,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":2042,"metricType":"sum"},{"name":"data size","accumulatorId":2040,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":2056,"metricType":"size"},{"name":"number of partitions","accumulatorId":2041,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":2057,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":2045,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":2059,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":2036,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":2037,"metricType":"timing"},{"name":"peak memory","accumulatorId":2035,"metricType":"size"},{"name":"number of output rows","accumulatorId":2034,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":2039,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":2038,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":2032,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":2026,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":2033,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":2027,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":2024,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":2021,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":2030,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":2023,"metricType":"sum"},{"name":"records read","accumulatorId":2020,"metricType":"sum"},{"name":"local bytes read","accumulatorId":2018,"metricType":"size"},{"name":"fetch wait time","accumulatorId":2019,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":2016,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":2022,"metricType":"sum"},{"name":"local blocks read","accumulatorId":2015,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":2025,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":2014,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":2028,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":2029,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":2017,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":2031,"metricType":"size"}]}],"metadata":{},"metrics":[]},"time":1725364467479,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":18,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (14)\n+- == Current Plan ==\n   TakeOrderedAndProject (8)\n   +- HashAggregate (7)\n      +- ShuffleQueryStage (6)\n         +- Exchange (5)\n            +- * HashAggregate (4)\n               +- * Project (3)\n                  +- * ColumnarToRow (2)\n                     +- Scan parquet  (1)\n+- == Initial Plan ==\n   TakeOrderedAndProject (13)\n   +- HashAggregate (12)\n      +- Exchange (11)\n         +- HashAggregate (10)\n            +- Project (9)\n               +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [5]: [origin#405, destination#406, distance#407, year#418, month#419]\nBatched: true\nLocation: InMemoryFileIndex [s3a://flight-bucket/refined/flights]\nReadSchema: struct<origin:string,destination:string,distance:int>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [5]: [origin#405, destination#406, distance#407, year#418, month#419]\n\n(3) Project [codegen id : 1]\nOutput [3]: [origin#405, destination#406, distance#407]\nInput [5]: [origin#405, destination#406, distance#407, year#418, month#419]\n\n(4) HashAggregate [codegen id : 1]\nInput [3]: [origin#405, destination#406, distance#407]\nKeys [2]: [origin#405, destination#406]\nFunctions [1]: [partial_max(distance#407)]\nAggregate Attributes [1]: [max#902]\nResults [3]: [origin#405, destination#406, max#903]\n\n(5) Exchange\nInput [3]: [origin#405, destination#406, max#903]\nArguments: hashpartitioning(origin#405, destination#406, 200), ENSURE_REQUIREMENTS, [plan_id=832]\n\n(6) ShuffleQueryStage\nOutput [3]: [origin#405, destination#406, max#903]\nArguments: 0\n\n(7) HashAggregate\nInput [3]: [origin#405, destination#406, max#903]\nKeys [2]: [origin#405, destination#406]\nFunctions [1]: [max(distance#407)]\nAggregate Attributes [1]: [max(distance#407)#895]\nResults [3]: [origin#405, destination#406, max(distance#407)#895 AS distance#894]\n\n(8) TakeOrderedAndProject\nInput [3]: [origin#405, destination#406, distance#894]\nArguments: 10, [distance#894 DESC NULLS LAST], [origin#405, destination#406, distance#894]\n\n(9) Project\nOutput [3]: [origin#405, destination#406, distance#407]\nInput [5]: [origin#405, destination#406, distance#407, year#418, month#419]\n\n(10) HashAggregate\nInput [3]: [origin#405, destination#406, distance#407]\nKeys [2]: [origin#405, destination#406]\nFunctions [1]: [partial_max(distance#407)]\nAggregate Attributes [1]: [max#902]\nResults [3]: [origin#405, destination#406, max#903]\n\n(11) Exchange\nInput [3]: [origin#405, destination#406, max#903]\nArguments: hashpartitioning(origin#405, destination#406, 200), ENSURE_REQUIREMENTS, [plan_id=813]\n\n(12) HashAggregate\nInput [3]: [origin#405, destination#406, max#903]\nKeys [2]: [origin#405, destination#406]\nFunctions [1]: [max(distance#407)]\nAggregate Attributes [1]: [max(distance#407)#895]\nResults [3]: [origin#405, destination#406, max(distance#407)#895 AS distance#894]\n\n(13) TakeOrderedAndProject\nInput [3]: [origin#405, destination#406, distance#894]\nArguments: 10, [distance#894 DESC NULLS LAST], [origin#405, destination#406, distance#894]\n\n(14) AdaptiveSparkPlan\nOutput [3]: [origin#405, destination#406, distance#894]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"TakeOrderedAndProject","simpleString":"TakeOrderedAndProject(limit=10, orderBy=[distance#894 DESC NULLS LAST], output=[origin#405,destination#406,distance#894])","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[origin#405, destination#406], functions=[max(distance#407)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(origin#405, destination#406, 200), ENSURE_REQUIREMENTS, [plan_id=832]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[origin#405, destination#406], functions=[partial_max(distance#407)])","children":[{"nodeName":"Project","simpleString":"Project [origin#405, destination#406, distance#407]","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [origin#405,destination#406,distance#407,year#418,month#419] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<origin:string,destination:string,distance:int>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights]","ReadSchema":"struct<origin:string,destination:string,distance:int>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":2070,"metricType":"sum"},{"name":"scan time","accumulatorId":2069,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":2074,"metricType":"timing"},{"name":"metadata time","accumulatorId":2071,"metricType":"timing"},{"name":"size of files read","accumulatorId":2072,"metricType":"size"},{"name":"number of output rows","accumulatorId":2068,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":2073,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":2130,"metricType":"sum"},{"name":"number of input batches","accumulatorId":2131,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":2126,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":2127,"metricType":"timing"},{"name":"peak memory","accumulatorId":2125,"metricType":"size"},{"name":"number of output rows","accumulatorId":2124,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":2129,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":2128,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":2123,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":2121,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":2115,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":2122,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":2116,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":2113,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":2110,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":2119,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":2112,"metricType":"sum"},{"name":"records read","accumulatorId":2109,"metricType":"sum"},{"name":"local bytes read","accumulatorId":2107,"metricType":"size"},{"name":"fetch wait time","accumulatorId":2108,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":2105,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":2111,"metricType":"sum"},{"name":"local blocks read","accumulatorId":2104,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":2114,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":2103,"metricType":"sum"},{"name":"data size","accumulatorId":2101,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":2117,"metricType":"size"},{"name":"number of partitions","accumulatorId":2102,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":2118,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":2106,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":2120,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":2097,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":2098,"metricType":"timing"},{"name":"peak memory","accumulatorId":2096,"metricType":"size"},{"name":"number of output rows","accumulatorId":2095,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":2100,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":2099,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":2093,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":2087,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":2094,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":2088,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":2085,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":2082,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":2091,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":2084,"metricType":"sum"},{"name":"records read","accumulatorId":2081,"metricType":"sum"},{"name":"local bytes read","accumulatorId":2079,"metricType":"size"},{"name":"fetch wait time","accumulatorId":2080,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":2077,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":2083,"metricType":"sum"},{"name":"local blocks read","accumulatorId":2076,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":2086,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":2075,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":2089,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":2090,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":2078,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":2092,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":18,"accumUpdates":[[2070,2],[2074,0],[2071,0],[2072,838367],[2073,2]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":18,"accumUpdates":[[2102,200]]}
{"Event":"SparkListenerJobStart","Job ID":26,"Submission Time":1725364467845,"Stage Infos":[{"Stage ID":32,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":2,"RDD Info":[{"RDD ID":99,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"272\",\"name\":\"Exchange\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[98],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":98,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"273\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[97],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":97,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"278\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[96],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":96,"Name":"FileScanRDD","Scope":"{\"id\":\"278\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[32],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"272\",\"name\":\"Exchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"18","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364460710_995136376","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"18","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":32,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":2,"RDD Info":[{"RDD ID":99,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"272\",\"name\":\"Exchange\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[98],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":98,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"273\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[97],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":97,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"278\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[96],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":96,"Name":"FileScanRDD","Scope":"{\"id\":\"278\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364467856,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"272\",\"name\":\"Exchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"18","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364460710_995136376","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"18","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":32,"Stage Attempt ID":0,"Task Info":{"Task ID":29,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364468494,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":32,"Stage Attempt ID":0,"Task Info":{"Task ID":30,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1725364468502,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":32,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":29,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364468494,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364468810,"Failed":false,"Killed":false,"Accumulables":[{"ID":2068,"Name":"number of output rows","Update":"30000","Value":"30000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2069,"Name":"scan time","Update":"66","Value":"66","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2101,"Name":"data size","Update":"17424","Value":"17424","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2120,"Name":"shuffle bytes written","Update":"17606","Value":"17606","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2121,"Name":"shuffle records written","Update":"363","Value":"363","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2122,"Name":"shuffle write time","Update":"25253941","Value":"25253941","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2123,"Name":"duration","Update":"145","Value":"145","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2124,"Name":"number of output rows","Update":"363","Value":"363","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2125,"Name":"peak memory","Update":"262144","Value":"262144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2127,"Name":"time in aggregation build","Update":"80","Value":"80","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2130,"Name":"number of output rows","Update":"30000","Value":"30000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2131,"Name":"number of input batches","Update":"8","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2132,"Name":"internal.metrics.executorDeserializeTime","Update":43,"Value":43,"Internal":true,"Count Failed Values":true},{"ID":2133,"Name":"internal.metrics.executorDeserializeCpuTime","Update":9012042,"Value":9012042,"Internal":true,"Count Failed Values":true},{"ID":2134,"Name":"internal.metrics.executorRunTime","Update":211,"Value":211,"Internal":true,"Count Failed Values":true},{"ID":2135,"Name":"internal.metrics.executorCpuTime","Update":121957492,"Value":121957492,"Internal":true,"Count Failed Values":true},{"ID":2136,"Name":"internal.metrics.resultSize","Update":3099,"Value":3099,"Internal":true,"Count Failed Values":true},{"ID":2141,"Name":"internal.metrics.peakExecutionMemory","Update":262144,"Value":262144,"Internal":true,"Count Failed Values":true},{"ID":2160,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":17606,"Value":17606,"Internal":true,"Count Failed Values":true},{"ID":2161,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":363,"Value":363,"Internal":true,"Count Failed Values":true},{"ID":2162,"Name":"internal.metrics.shuffle.write.writeTime","Update":25253941,"Value":25253941,"Internal":true,"Count Failed Values":true},{"ID":2163,"Name":"internal.metrics.input.bytesRead","Update":22448,"Value":22448,"Internal":true,"Count Failed Values":true},{"ID":2164,"Name":"internal.metrics.input.recordsRead","Update":30000,"Value":30000,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":43,"Executor Deserialize CPU Time":9012042,"Executor Run Time":211,"Executor CPU Time":121957492,"Peak Execution Memory":262144,"Result Size":3099,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":17606,"Shuffle Write Time":25253941,"Shuffle Records Written":363},"Input Metrics":{"Bytes Read":22448,"Records Read":30000},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":32,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":30,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1725364468502,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364468847,"Failed":false,"Killed":false,"Accumulables":[{"ID":2068,"Name":"number of output rows","Update":"20000","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2069,"Name":"scan time","Update":"86","Value":"152","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2101,"Name":"data size","Update":"40896","Value":"58320","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2120,"Name":"shuffle bytes written","Update":"29419","Value":"47025","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2121,"Name":"shuffle records written","Update":"852","Value":"1215","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2122,"Name":"shuffle write time","Update":"14981934","Value":"40235875","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2123,"Name":"duration","Update":"167","Value":"312","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2124,"Name":"number of output rows","Update":"852","Value":"1215","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2125,"Name":"peak memory","Update":"262144","Value":"524288","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2127,"Name":"time in aggregation build","Update":"101","Value":"181","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2130,"Name":"number of output rows","Update":"20000","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2131,"Name":"number of input batches","Update":"5","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2132,"Name":"internal.metrics.executorDeserializeTime","Update":43,"Value":86,"Internal":true,"Count Failed Values":true},{"ID":2133,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8407831,"Value":17419873,"Internal":true,"Count Failed Values":true},{"ID":2134,"Name":"internal.metrics.executorRunTime","Update":258,"Value":469,"Internal":true,"Count Failed Values":true},{"ID":2135,"Name":"internal.metrics.executorCpuTime","Update":120443340,"Value":242400832,"Internal":true,"Count Failed Values":true},{"ID":2136,"Name":"internal.metrics.resultSize","Update":3184,"Value":6283,"Internal":true,"Count Failed Values":true},{"ID":2137,"Name":"internal.metrics.jvmGCTime","Update":21,"Value":21,"Internal":true,"Count Failed Values":true},{"ID":2138,"Name":"internal.metrics.resultSerializationTime","Update":10,"Value":10,"Internal":true,"Count Failed Values":true},{"ID":2141,"Name":"internal.metrics.peakExecutionMemory","Update":262144,"Value":524288,"Internal":true,"Count Failed Values":true},{"ID":2160,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":29419,"Value":47025,"Internal":true,"Count Failed Values":true},{"ID":2161,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":852,"Value":1215,"Internal":true,"Count Failed Values":true},{"ID":2162,"Name":"internal.metrics.shuffle.write.writeTime","Update":14981934,"Value":40235875,"Internal":true,"Count Failed Values":true},{"ID":2163,"Name":"internal.metrics.input.bytesRead","Update":23267,"Value":45715,"Internal":true,"Count Failed Values":true},{"ID":2164,"Name":"internal.metrics.input.recordsRead","Update":20000,"Value":50000,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":43,"Executor Deserialize CPU Time":8407831,"Executor Run Time":258,"Executor CPU Time":120443340,"Peak Execution Memory":262144,"Result Size":3184,"JVM GC Time":21,"Result Serialization Time":10,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":29419,"Shuffle Write Time":14981934,"Shuffle Records Written":852},"Input Metrics":{"Bytes Read":23267,"Records Read":20000},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":32,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":2,"RDD Info":[{"RDD ID":99,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"272\",\"name\":\"Exchange\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[98],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":98,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"273\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[97],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":97,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"278\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[96],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":96,"Name":"FileScanRDD","Scope":"{\"id\":\"278\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364467856,"Completion Time":1725364468848,"Accumulables":[{"ID":2068,"Name":"number of output rows","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2069,"Name":"scan time","Value":"152","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2101,"Name":"data size","Value":"58320","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2120,"Name":"shuffle bytes written","Value":"47025","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2121,"Name":"shuffle records written","Value":"1215","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2122,"Name":"shuffle write time","Value":"40235875","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2123,"Name":"duration","Value":"312","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2124,"Name":"number of output rows","Value":"1215","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2125,"Name":"peak memory","Value":"524288","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2127,"Name":"time in aggregation build","Value":"181","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2130,"Name":"number of output rows","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2131,"Name":"number of input batches","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2132,"Name":"internal.metrics.executorDeserializeTime","Value":86,"Internal":true,"Count Failed Values":true},{"ID":2133,"Name":"internal.metrics.executorDeserializeCpuTime","Value":17419873,"Internal":true,"Count Failed Values":true},{"ID":2134,"Name":"internal.metrics.executorRunTime","Value":469,"Internal":true,"Count Failed Values":true},{"ID":2135,"Name":"internal.metrics.executorCpuTime","Value":242400832,"Internal":true,"Count Failed Values":true},{"ID":2136,"Name":"internal.metrics.resultSize","Value":6283,"Internal":true,"Count Failed Values":true},{"ID":2137,"Name":"internal.metrics.jvmGCTime","Value":21,"Internal":true,"Count Failed Values":true},{"ID":2138,"Name":"internal.metrics.resultSerializationTime","Value":10,"Internal":true,"Count Failed Values":true},{"ID":2141,"Name":"internal.metrics.peakExecutionMemory","Value":524288,"Internal":true,"Count Failed Values":true},{"ID":2160,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":47025,"Internal":true,"Count Failed Values":true},{"ID":2161,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":1215,"Internal":true,"Count Failed Values":true},{"ID":2162,"Name":"internal.metrics.shuffle.write.writeTime","Value":40235875,"Internal":true,"Count Failed Values":true},{"ID":2163,"Name":"internal.metrics.input.bytesRead","Value":45715,"Internal":true,"Count Failed Values":true},{"ID":2164,"Name":"internal.metrics.input.recordsRead","Value":50000,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":26,"Completion Time":1725364468856,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":18,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (15)\n+- == Final Plan ==\n   TakeOrderedAndProject (9)\n   +- * HashAggregate (8)\n      +- AQEShuffleRead (7)\n         +- ShuffleQueryStage (6), Statistics(sizeInBytes=57.0 KiB, rowCount=1.22E+3)\n            +- Exchange (5)\n               +- * HashAggregate (4)\n                  +- * Project (3)\n                     +- * ColumnarToRow (2)\n                        +- Scan parquet  (1)\n+- == Initial Plan ==\n   TakeOrderedAndProject (14)\n   +- HashAggregate (13)\n      +- Exchange (12)\n         +- HashAggregate (11)\n            +- Project (10)\n               +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [5]: [origin#405, destination#406, distance#407, year#418, month#419]\nBatched: true\nLocation: InMemoryFileIndex [s3a://flight-bucket/refined/flights]\nReadSchema: struct<origin:string,destination:string,distance:int>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [5]: [origin#405, destination#406, distance#407, year#418, month#419]\n\n(3) Project [codegen id : 1]\nOutput [3]: [origin#405, destination#406, distance#407]\nInput [5]: [origin#405, destination#406, distance#407, year#418, month#419]\n\n(4) HashAggregate [codegen id : 1]\nInput [3]: [origin#405, destination#406, distance#407]\nKeys [2]: [origin#405, destination#406]\nFunctions [1]: [partial_max(distance#407)]\nAggregate Attributes [1]: [max#902]\nResults [3]: [origin#405, destination#406, max#903]\n\n(5) Exchange\nInput [3]: [origin#405, destination#406, max#903]\nArguments: hashpartitioning(origin#405, destination#406, 200), ENSURE_REQUIREMENTS, [plan_id=832]\n\n(6) ShuffleQueryStage\nOutput [3]: [origin#405, destination#406, max#903]\nArguments: 0\n\n(7) AQEShuffleRead\nInput [3]: [origin#405, destination#406, max#903]\nArguments: coalesced\n\n(8) HashAggregate [codegen id : 2]\nInput [3]: [origin#405, destination#406, max#903]\nKeys [2]: [origin#405, destination#406]\nFunctions [1]: [max(distance#407)]\nAggregate Attributes [1]: [max(distance#407)#895]\nResults [3]: [origin#405, destination#406, max(distance#407)#895 AS distance#894]\n\n(9) TakeOrderedAndProject\nInput [3]: [origin#405, destination#406, distance#894]\nArguments: 10, [distance#894 DESC NULLS LAST], [origin#405, destination#406, distance#894]\n\n(10) Project\nOutput [3]: [origin#405, destination#406, distance#407]\nInput [5]: [origin#405, destination#406, distance#407, year#418, month#419]\n\n(11) HashAggregate\nInput [3]: [origin#405, destination#406, distance#407]\nKeys [2]: [origin#405, destination#406]\nFunctions [1]: [partial_max(distance#407)]\nAggregate Attributes [1]: [max#902]\nResults [3]: [origin#405, destination#406, max#903]\n\n(12) Exchange\nInput [3]: [origin#405, destination#406, max#903]\nArguments: hashpartitioning(origin#405, destination#406, 200), ENSURE_REQUIREMENTS, [plan_id=813]\n\n(13) HashAggregate\nInput [3]: [origin#405, destination#406, max#903]\nKeys [2]: [origin#405, destination#406]\nFunctions [1]: [max(distance#407)]\nAggregate Attributes [1]: [max(distance#407)#895]\nResults [3]: [origin#405, destination#406, max(distance#407)#895 AS distance#894]\n\n(14) TakeOrderedAndProject\nInput [3]: [origin#405, destination#406, distance#894]\nArguments: 10, [distance#894 DESC NULLS LAST], [origin#405, destination#406, distance#894]\n\n(15) AdaptiveSparkPlan\nOutput [3]: [origin#405, destination#406, distance#894]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"TakeOrderedAndProject","simpleString":"TakeOrderedAndProject(limit=10, orderBy=[distance#894 DESC NULLS LAST], output=[origin#405,destination#406,distance#894])","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[origin#405, destination#406], functions=[max(distance#407)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(origin#405, destination#406, 200), ENSURE_REQUIREMENTS, [plan_id=832]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[origin#405, destination#406], functions=[partial_max(distance#407)])","children":[{"nodeName":"Project","simpleString":"Project [origin#405, destination#406, distance#407]","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [origin#405,destination#406,distance#407,year#418,month#419] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<origin:string,destination:string,distance:int>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights]","ReadSchema":"struct<origin:string,destination:string,distance:int>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":2070,"metricType":"sum"},{"name":"scan time","accumulatorId":2069,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":2074,"metricType":"timing"},{"name":"metadata time","accumulatorId":2071,"metricType":"timing"},{"name":"size of files read","accumulatorId":2072,"metricType":"size"},{"name":"number of output rows","accumulatorId":2068,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":2073,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":2130,"metricType":"sum"},{"name":"number of input batches","accumulatorId":2131,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":2126,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":2127,"metricType":"timing"},{"name":"peak memory","accumulatorId":2125,"metricType":"size"},{"name":"number of output rows","accumulatorId":2124,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":2129,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":2128,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":2123,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":2121,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":2115,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":2122,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":2116,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":2113,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":2110,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":2119,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":2112,"metricType":"sum"},{"name":"records read","accumulatorId":2109,"metricType":"sum"},{"name":"local bytes read","accumulatorId":2107,"metricType":"size"},{"name":"fetch wait time","accumulatorId":2108,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":2105,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":2111,"metricType":"sum"},{"name":"local blocks read","accumulatorId":2104,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":2114,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":2103,"metricType":"sum"},{"name":"data size","accumulatorId":2101,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":2117,"metricType":"size"},{"name":"number of partitions","accumulatorId":2102,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":2118,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":2106,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":2120,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":2194,"metricType":"sum"},{"name":"partition data size","accumulatorId":2195,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":2196,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":2190,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":2191,"metricType":"timing"},{"name":"peak memory","accumulatorId":2189,"metricType":"size"},{"name":"number of output rows","accumulatorId":2188,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":2193,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":2192,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":2187,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":2185,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":2179,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":2186,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":2180,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":2177,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":2174,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":2183,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":2176,"metricType":"sum"},{"name":"records read","accumulatorId":2173,"metricType":"sum"},{"name":"local bytes read","accumulatorId":2171,"metricType":"size"},{"name":"fetch wait time","accumulatorId":2172,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":2169,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":2175,"metricType":"sum"},{"name":"local blocks read","accumulatorId":2168,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":2178,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":2167,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":2181,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":2182,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":2170,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":2184,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":18,"accumUpdates":[[2194,1],[2196,1],[2195,49030]]}
{"Event":"SparkListenerJobStart","Job ID":27,"Submission Time":1725364469196,"Stage Infos":[{"Stage ID":33,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":2,"RDD Info":[{"RDD ID":99,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"272\",\"name\":\"Exchange\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[98],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":98,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"273\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[97],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":97,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"278\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[96],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":96,"Name":"FileScanRDD","Scope":"{\"id\":\"278\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":34,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":103,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"279\",\"name\":\"TakeOrderedAndProject\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[102],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":102,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"279\",\"name\":\"TakeOrderedAndProject\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[101],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":100,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"283\",\"name\":\"AQEShuffleRead\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[99],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":101,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"280\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[100],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[33],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[33,34],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"279\",\"name\":\"TakeOrderedAndProject\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"18","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364460710_995136376","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"18","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":34,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":103,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"279\",\"name\":\"TakeOrderedAndProject\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[102],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":102,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"279\",\"name\":\"TakeOrderedAndProject\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[101],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":100,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"283\",\"name\":\"AQEShuffleRead\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[99],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":101,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"280\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[100],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[33],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364469215,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"279\",\"name\":\"TakeOrderedAndProject\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"18","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364460710_995136376","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"18","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":34,"Stage Attempt ID":0,"Task Info":{"Task ID":31,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364469275,"Executor ID":"1","Host":"172.17.0.26","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":34,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":31,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364469275,"Executor ID":"1","Host":"172.17.0.26","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364469739,"Failed":false,"Killed":false,"Accumulables":[{"ID":2103,"Name":"remote blocks read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2104,"Name":"local blocks read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2105,"Name":"remote bytes read","Update":"29419","Value":"29419","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2107,"Name":"local bytes read","Update":"17606","Value":"17606","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2108,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2109,"Name":"records read","Update":"1215","Value":"1215","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2118,"Name":"remote reqs duration","Update":"3","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2187,"Name":"duration","Update":"17","Value":"17","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2188,"Name":"number of output rows","Update":"1174","Value":"1174","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2189,"Name":"peak memory","Update":"17039344","Value":"17039344","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2191,"Name":"time in aggregation build","Update":"8","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2192,"Name":"avg hash probes per key","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2197,"Name":"internal.metrics.executorDeserializeTime","Update":253,"Value":253,"Internal":true,"Count Failed Values":true},{"ID":2198,"Name":"internal.metrics.executorDeserializeCpuTime","Update":20944378,"Value":20944378,"Internal":true,"Count Failed Values":true},{"ID":2199,"Name":"internal.metrics.executorRunTime","Update":83,"Value":83,"Internal":true,"Count Failed Values":true},{"ID":2200,"Name":"internal.metrics.executorCpuTime","Update":26854419,"Value":26854419,"Internal":true,"Count Failed Values":true},{"ID":2201,"Name":"internal.metrics.resultSize","Update":6102,"Value":6102,"Internal":true,"Count Failed Values":true},{"ID":2206,"Name":"internal.metrics.peakExecutionMemory","Update":17039344,"Value":17039344,"Internal":true,"Count Failed Values":true},{"ID":2208,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":2209,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":2210,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":29419,"Value":29419,"Internal":true,"Count Failed Values":true},{"ID":2211,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2212,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":17606,"Value":17606,"Internal":true,"Count Failed Values":true},{"ID":2213,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2214,"Name":"internal.metrics.shuffle.read.recordsRead","Update":1215,"Value":1215,"Internal":true,"Count Failed Values":true},{"ID":2215,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2216,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2217,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2218,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2219,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2220,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2221,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2222,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2223,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":3,"Value":3,"Internal":true,"Count Failed Values":true},{"ID":2224,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":253,"Executor Deserialize CPU Time":20944378,"Executor Run Time":83,"Executor CPU Time":26854419,"Peak Execution Memory":17039344,"Result Size":6102,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":1,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":29419,"Remote Bytes Read To Disk":0,"Local Bytes Read":17606,"Total Records Read":1215,"Remote Requests Duration":3,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":34,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":103,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"279\",\"name\":\"TakeOrderedAndProject\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[102],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":102,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"279\",\"name\":\"TakeOrderedAndProject\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[101],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":100,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"283\",\"name\":\"AQEShuffleRead\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[99],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":101,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"280\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[100],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[33],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364469215,"Completion Time":1725364469762,"Accumulables":[{"ID":2103,"Name":"remote blocks read","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2104,"Name":"local blocks read","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2105,"Name":"remote bytes read","Value":"29419","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2107,"Name":"local bytes read","Value":"17606","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2108,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2109,"Name":"records read","Value":"1215","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2118,"Name":"remote reqs duration","Value":"3","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2187,"Name":"duration","Value":"17","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2188,"Name":"number of output rows","Value":"1174","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2189,"Name":"peak memory","Value":"17039344","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2191,"Name":"time in aggregation build","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2192,"Name":"avg hash probes per key","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2197,"Name":"internal.metrics.executorDeserializeTime","Value":253,"Internal":true,"Count Failed Values":true},{"ID":2198,"Name":"internal.metrics.executorDeserializeCpuTime","Value":20944378,"Internal":true,"Count Failed Values":true},{"ID":2199,"Name":"internal.metrics.executorRunTime","Value":83,"Internal":true,"Count Failed Values":true},{"ID":2200,"Name":"internal.metrics.executorCpuTime","Value":26854419,"Internal":true,"Count Failed Values":true},{"ID":2201,"Name":"internal.metrics.resultSize","Value":6102,"Internal":true,"Count Failed Values":true},{"ID":2206,"Name":"internal.metrics.peakExecutionMemory","Value":17039344,"Internal":true,"Count Failed Values":true},{"ID":2208,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":1,"Internal":true,"Count Failed Values":true},{"ID":2209,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":1,"Internal":true,"Count Failed Values":true},{"ID":2210,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":29419,"Internal":true,"Count Failed Values":true},{"ID":2211,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2212,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":17606,"Internal":true,"Count Failed Values":true},{"ID":2213,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2214,"Name":"internal.metrics.shuffle.read.recordsRead","Value":1215,"Internal":true,"Count Failed Values":true},{"ID":2215,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2216,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2217,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2218,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2219,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2220,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2221,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2222,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2223,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":3,"Internal":true,"Count Failed Values":true},{"ID":2224,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":27,"Completion Time":1725364469780,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":18,"time":1725364469945,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":19,"rootExecutionId":19,"description":"Started by: admin","details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nCollectLimit (4)\n+- * Project (3)\n   +- * ColumnarToRow (2)\n      +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [5]: [arrDelay#403, origin#405, destination#406, year#418, month#419]\nBatched: true\nLocation: InMemoryFileIndex [s3a://flight-bucket/refined/flights]\nReadSchema: struct<arrDelay:int,origin:string,destination:string>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [5]: [arrDelay#403, origin#405, destination#406, year#418, month#419]\n\n(3) Project [codegen id : 1]\nOutput [4]: [arrDelay#403, origin#405, destination#406, CASE WHEN (arrDelay#403 > 360) THEN Very Long Delays WHEN ((arrDelay#403 > 120) AND (arrDelay#403 < 360)) THEN Long Delays WHEN ((arrDelay#403 > 60) AND (arrDelay#403 < 120)) THEN Short Delays WHEN ((arrDelay#403 > 0) AND (arrDelay#403 < 60)) THEN Tolerable Delays WHEN (arrDelay#403 = 0) THEN No Delays ELSE Early END AS flight_delays#910]\nInput [5]: [arrDelay#403, origin#405, destination#406, year#418, month#419]\n\n(4) CollectLimit\nInput [4]: [arrDelay#403, origin#405, destination#406, flight_delays#910]\nArguments: 1001\n\n","sparkPlanInfo":{"nodeName":"CollectLimit","simpleString":"CollectLimit 1001","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"Project","simpleString":"Project [arrDelay#403, origin#405, destination#406, CASE WHEN (arrDelay#403 > 360) THEN Very Long Delays WHEN ((arrDelay#403 > 120) AND (arrDelay#403 < 360)) THEN Long Delays WHEN ((arrDelay#403 > 60) AND (arrDelay#403 < 120)) THEN Short Delays WHEN ((arrDelay#403 > 0) AND (arrDelay#403 < 60)) THEN Tolerable Delays WHEN (arrDelay#403 = 0) THEN No Delays ELSE Early END AS flight_delays#910]","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [arrDelay#403,origin#405,destination#406,year#418,month#419] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<arrDelay:int,origin:string,destination:string>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights]","ReadSchema":"struct<arrDelay:int,origin:string,destination:string>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":2257,"metricType":"sum"},{"name":"scan time","accumulatorId":2256,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":2261,"metricType":"timing"},{"name":"metadata time","accumulatorId":2258,"metricType":"timing"},{"name":"size of files read","accumulatorId":2259,"metricType":"size"},{"name":"number of output rows","accumulatorId":2255,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":2260,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":2253,"metricType":"sum"},{"name":"number of input batches","accumulatorId":2254,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":2252,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":2250,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":2244,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":2251,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":2245,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":2242,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":2239,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":2248,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":2241,"metricType":"sum"},{"name":"records read","accumulatorId":2238,"metricType":"sum"},{"name":"local bytes read","accumulatorId":2236,"metricType":"size"},{"name":"fetch wait time","accumulatorId":2237,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":2234,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":2240,"metricType":"sum"},{"name":"local blocks read","accumulatorId":2233,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":2243,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":2232,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":2246,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":2247,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":2235,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":2249,"metricType":"size"}]},"time":1725364474761,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":19,"accumUpdates":[[2257,2],[2261,0],[2258,11],[2259,838367],[2260,2]]}
{"Event":"SparkListenerJobStart","Job ID":28,"Submission Time":1725364475387,"Stage Infos":[{"Stage ID":35,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":107,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"297\",\"name\":\"mapPartitionsInternal\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[106],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":105,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"296\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[104],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":104,"Name":"FileScanRDD","Scope":"{\"id\":\"296\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":106,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"292\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[105],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[35],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"19","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364467210_1476394596","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"19","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":35,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":107,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"297\",\"name\":\"mapPartitionsInternal\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[106],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":105,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"296\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[104],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":104,"Name":"FileScanRDD","Scope":"{\"id\":\"296\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":106,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"292\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[105],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364475402,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.app.name":"spark-shared_process","spark.ui.port":"4050","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"19","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364467210_1476394596","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"19","spark.cores.max":"2","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":35,"Stage Attempt ID":0,"Task Info":{"Task ID":32,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364475449,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":35,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":32,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364475449,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364475767,"Failed":false,"Killed":false,"Accumulables":[{"ID":2253,"Name":"number of output rows","Update":"4096","Value":"4096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2254,"Name":"number of input batches","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2255,"Name":"number of output rows","Update":"4096","Value":"4096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2256,"Name":"scan time","Update":"225","Value":"225","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2262,"Name":"internal.metrics.executorDeserializeTime","Update":23,"Value":23,"Internal":true,"Count Failed Values":true},{"ID":2263,"Name":"internal.metrics.executorDeserializeCpuTime","Update":8139496,"Value":8139496,"Internal":true,"Count Failed Values":true},{"ID":2264,"Name":"internal.metrics.executorRunTime","Update":259,"Value":259,"Internal":true,"Count Failed Values":true},{"ID":2265,"Name":"internal.metrics.executorCpuTime","Update":40070749,"Value":40070749,"Internal":true,"Count Failed Values":true},{"ID":2266,"Name":"internal.metrics.resultSize","Update":14591,"Value":14591,"Internal":true,"Count Failed Values":true},{"ID":2293,"Name":"internal.metrics.input.bytesRead","Update":51775,"Value":51775,"Internal":true,"Count Failed Values":true},{"ID":2294,"Name":"internal.metrics.input.recordsRead","Update":4096,"Value":4096,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":23,"Executor Deserialize CPU Time":8139496,"Executor Run Time":259,"Executor CPU Time":40070749,"Peak Execution Memory":0,"Result Size":14591,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":51775,"Records Read":4096},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":35,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":107,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"297\",\"name\":\"mapPartitionsInternal\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[106],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":105,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"296\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[104],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":104,"Name":"FileScanRDD","Scope":"{\"id\":\"296\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":106,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"292\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[105],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364475402,"Completion Time":1725364475774,"Accumulables":[{"ID":2253,"Name":"number of output rows","Value":"4096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2254,"Name":"number of input batches","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2255,"Name":"number of output rows","Value":"4096","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2256,"Name":"scan time","Value":"225","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2262,"Name":"internal.metrics.executorDeserializeTime","Value":23,"Internal":true,"Count Failed Values":true},{"ID":2263,"Name":"internal.metrics.executorDeserializeCpuTime","Value":8139496,"Internal":true,"Count Failed Values":true},{"ID":2264,"Name":"internal.metrics.executorRunTime","Value":259,"Internal":true,"Count Failed Values":true},{"ID":2265,"Name":"internal.metrics.executorCpuTime","Value":40070749,"Internal":true,"Count Failed Values":true},{"ID":2266,"Name":"internal.metrics.resultSize","Value":14591,"Internal":true,"Count Failed Values":true},{"ID":2293,"Name":"internal.metrics.input.bytesRead","Value":51775,"Internal":true,"Count Failed Values":true},{"ID":2294,"Name":"internal.metrics.input.recordsRead","Value":4096,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":28,"Completion Time":1725364475783,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":19,"time":1725364475925,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":20,"rootExecutionId":20,"description":"Started by: admin","details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (7)\n+- CollectLimit (6)\n   +- HashAggregate (5)\n      +- Exchange (4)\n         +- HashAggregate (3)\n            +- Project (2)\n               +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [3]: [arrDelay#403, year#418, month#419]\nBatched: true\nLocation: InMemoryFileIndex [s3a://flight-bucket/refined/flights]\nReadSchema: struct<arrDelay:int>\n\n(2) Project\nOutput [3]: [year#418, month#419, CASE WHEN (arrDelay#403 > 360) THEN Very Long Delays WHEN ((arrDelay#403 > 120) AND (arrDelay#403 < 360)) THEN Long Delays WHEN ((arrDelay#403 > 60) AND (arrDelay#403 < 120)) THEN Short Delays WHEN ((arrDelay#403 > 0) AND (arrDelay#403 < 60)) THEN Tolerable Delays WHEN (arrDelay#403 = 0) THEN No Delays ELSE Early END AS flight_delays#924]\nInput [3]: [arrDelay#403, year#418, month#419]\n\n(3) HashAggregate\nInput [3]: [year#418, month#419, flight_delays#924]\nKeys [3]: [year#418, month#419, flight_delays#924]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#935L]\nResults [4]: [year#418, month#419, flight_delays#924, count#936L]\n\n(4) Exchange\nInput [4]: [year#418, month#419, flight_delays#924, count#936L]\nArguments: hashpartitioning(year#418, month#419, flight_delays#924, 200), ENSURE_REQUIREMENTS, [plan_id=887]\n\n(5) HashAggregate\nInput [4]: [year#418, month#419, flight_delays#924, count#936L]\nKeys [3]: [year#418, month#419, flight_delays#924]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#926L]\nResults [4]: [year#418, month#419, flight_delays#924, count(1)#926L AS count#925L]\n\n(6) CollectLimit\nInput [4]: [year#418, month#419, flight_delays#924, count#925L]\nArguments: 1001\n\n(7) AdaptiveSparkPlan\nOutput [4]: [year#418, month#419, flight_delays#924, count#925L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 1001","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[year#418, month#419, flight_delays#924], functions=[count(1)])","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(year#418, month#419, flight_delays#924, 200), ENSURE_REQUIREMENTS, [plan_id=887]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[year#418, month#419, flight_delays#924], functions=[partial_count(1)])","children":[{"nodeName":"Project","simpleString":"Project [year#418, month#419, CASE WHEN (arrDelay#403 > 360) THEN Very Long Delays WHEN ((arrDelay#403 > 120) AND (arrDelay#403 < 360)) THEN Long Delays WHEN ((arrDelay#403 > 60) AND (arrDelay#403 < 120)) THEN Short Delays WHEN ((arrDelay#403 > 0) AND (arrDelay#403 < 60)) THEN Tolerable Delays WHEN (arrDelay#403 = 0) THEN No Delays ELSE Early END AS flight_delays#924]","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [arrDelay#403,year#418,month#419] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<arrDelay:int>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights]","ReadSchema":"struct<arrDelay:int>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":2353,"metricType":"sum"},{"name":"scan time","accumulatorId":2352,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":2357,"metricType":"timing"},{"name":"metadata time","accumulatorId":2354,"metricType":"timing"},{"name":"size of files read","accumulatorId":2355,"metricType":"size"},{"name":"number of output rows","accumulatorId":2351,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":2356,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":2347,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":2348,"metricType":"timing"},{"name":"peak memory","accumulatorId":2346,"metricType":"size"},{"name":"number of output rows","accumulatorId":2345,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":2350,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":2349,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":2343,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":2337,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":2344,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":2338,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":2335,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":2332,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":2341,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":2334,"metricType":"sum"},{"name":"records read","accumulatorId":2331,"metricType":"sum"},{"name":"local bytes read","accumulatorId":2329,"metricType":"size"},{"name":"fetch wait time","accumulatorId":2330,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":2327,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":2333,"metricType":"sum"},{"name":"local blocks read","accumulatorId":2326,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":2336,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":2325,"metricType":"sum"},{"name":"data size","accumulatorId":2323,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":2339,"metricType":"size"},{"name":"number of partitions","accumulatorId":2324,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":2340,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":2328,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":2342,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":2319,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":2320,"metricType":"timing"},{"name":"peak memory","accumulatorId":2318,"metricType":"size"},{"name":"number of output rows","accumulatorId":2317,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":2322,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":2321,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":2315,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":2309,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":2316,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":2310,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":2307,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":2304,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":2313,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":2306,"metricType":"sum"},{"name":"records read","accumulatorId":2303,"metricType":"sum"},{"name":"local bytes read","accumulatorId":2301,"metricType":"size"},{"name":"fetch wait time","accumulatorId":2302,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":2299,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":2305,"metricType":"sum"},{"name":"local blocks read","accumulatorId":2298,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":2308,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":2297,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":2311,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":2312,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":2300,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":2314,"metricType":"size"}]}],"metadata":{},"metrics":[]},"time":1725364482966,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":20,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (14)\n+- == Current Plan ==\n   CollectLimit (8)\n   +- HashAggregate (7)\n      +- ShuffleQueryStage (6)\n         +- Exchange (5)\n            +- * HashAggregate (4)\n               +- * Project (3)\n                  +- * ColumnarToRow (2)\n                     +- Scan parquet  (1)\n+- == Initial Plan ==\n   CollectLimit (13)\n   +- HashAggregate (12)\n      +- Exchange (11)\n         +- HashAggregate (10)\n            +- Project (9)\n               +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [3]: [arrDelay#403, year#418, month#419]\nBatched: true\nLocation: InMemoryFileIndex [s3a://flight-bucket/refined/flights]\nReadSchema: struct<arrDelay:int>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [3]: [arrDelay#403, year#418, month#419]\n\n(3) Project [codegen id : 1]\nOutput [3]: [year#418, month#419, CASE WHEN (arrDelay#403 > 360) THEN Very Long Delays WHEN ((arrDelay#403 > 120) AND (arrDelay#403 < 360)) THEN Long Delays WHEN ((arrDelay#403 > 60) AND (arrDelay#403 < 120)) THEN Short Delays WHEN ((arrDelay#403 > 0) AND (arrDelay#403 < 60)) THEN Tolerable Delays WHEN (arrDelay#403 = 0) THEN No Delays ELSE Early END AS flight_delays#924]\nInput [3]: [arrDelay#403, year#418, month#419]\n\n(4) HashAggregate [codegen id : 1]\nInput [3]: [year#418, month#419, flight_delays#924]\nKeys [3]: [year#418, month#419, flight_delays#924]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#935L]\nResults [4]: [year#418, month#419, flight_delays#924, count#936L]\n\n(5) Exchange\nInput [4]: [year#418, month#419, flight_delays#924, count#936L]\nArguments: hashpartitioning(year#418, month#419, flight_delays#924, 200), ENSURE_REQUIREMENTS, [plan_id=906]\n\n(6) ShuffleQueryStage\nOutput [4]: [year#418, month#419, flight_delays#924, count#936L]\nArguments: 0\n\n(7) HashAggregate\nInput [4]: [year#418, month#419, flight_delays#924, count#936L]\nKeys [3]: [year#418, month#419, flight_delays#924]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#926L]\nResults [4]: [year#418, month#419, flight_delays#924, count(1)#926L AS count#925L]\n\n(8) CollectLimit\nInput [4]: [year#418, month#419, flight_delays#924, count#925L]\nArguments: 1001\n\n(9) Project\nOutput [3]: [year#418, month#419, CASE WHEN (arrDelay#403 > 360) THEN Very Long Delays WHEN ((arrDelay#403 > 120) AND (arrDelay#403 < 360)) THEN Long Delays WHEN ((arrDelay#403 > 60) AND (arrDelay#403 < 120)) THEN Short Delays WHEN ((arrDelay#403 > 0) AND (arrDelay#403 < 60)) THEN Tolerable Delays WHEN (arrDelay#403 = 0) THEN No Delays ELSE Early END AS flight_delays#924]\nInput [3]: [arrDelay#403, year#418, month#419]\n\n(10) HashAggregate\nInput [3]: [year#418, month#419, flight_delays#924]\nKeys [3]: [year#418, month#419, flight_delays#924]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#935L]\nResults [4]: [year#418, month#419, flight_delays#924, count#936L]\n\n(11) Exchange\nInput [4]: [year#418, month#419, flight_delays#924, count#936L]\nArguments: hashpartitioning(year#418, month#419, flight_delays#924, 200), ENSURE_REQUIREMENTS, [plan_id=887]\n\n(12) HashAggregate\nInput [4]: [year#418, month#419, flight_delays#924, count#936L]\nKeys [3]: [year#418, month#419, flight_delays#924]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#926L]\nResults [4]: [year#418, month#419, flight_delays#924, count(1)#926L AS count#925L]\n\n(13) CollectLimit\nInput [4]: [year#418, month#419, flight_delays#924, count#925L]\nArguments: 1001\n\n(14) AdaptiveSparkPlan\nOutput [4]: [year#418, month#419, flight_delays#924, count#925L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 1001","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[year#418, month#419, flight_delays#924], functions=[count(1)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(year#418, month#419, flight_delays#924, 200), ENSURE_REQUIREMENTS, [plan_id=906]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[year#418, month#419, flight_delays#924], functions=[partial_count(1)])","children":[{"nodeName":"Project","simpleString":"Project [year#418, month#419, CASE WHEN (arrDelay#403 > 360) THEN Very Long Delays WHEN ((arrDelay#403 > 120) AND (arrDelay#403 < 360)) THEN Long Delays WHEN ((arrDelay#403 > 60) AND (arrDelay#403 < 120)) THEN Short Delays WHEN ((arrDelay#403 > 0) AND (arrDelay#403 < 60)) THEN Tolerable Delays WHEN (arrDelay#403 = 0) THEN No Delays ELSE Early END AS flight_delays#924]","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [arrDelay#403,year#418,month#419] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<arrDelay:int>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights]","ReadSchema":"struct<arrDelay:int>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":2353,"metricType":"sum"},{"name":"scan time","accumulatorId":2352,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":2357,"metricType":"timing"},{"name":"metadata time","accumulatorId":2354,"metricType":"timing"},{"name":"size of files read","accumulatorId":2355,"metricType":"size"},{"name":"number of output rows","accumulatorId":2351,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":2356,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":2413,"metricType":"sum"},{"name":"number of input batches","accumulatorId":2414,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":2409,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":2410,"metricType":"timing"},{"name":"peak memory","accumulatorId":2408,"metricType":"size"},{"name":"number of output rows","accumulatorId":2407,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":2412,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":2411,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":2406,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":2404,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":2398,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":2405,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":2399,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":2396,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":2393,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":2402,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":2395,"metricType":"sum"},{"name":"records read","accumulatorId":2392,"metricType":"sum"},{"name":"local bytes read","accumulatorId":2390,"metricType":"size"},{"name":"fetch wait time","accumulatorId":2391,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":2388,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":2394,"metricType":"sum"},{"name":"local blocks read","accumulatorId":2387,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":2397,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":2386,"metricType":"sum"},{"name":"data size","accumulatorId":2384,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":2400,"metricType":"size"},{"name":"number of partitions","accumulatorId":2385,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":2401,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":2389,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":2403,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":2380,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":2381,"metricType":"timing"},{"name":"peak memory","accumulatorId":2379,"metricType":"size"},{"name":"number of output rows","accumulatorId":2378,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":2383,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":2382,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":2376,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":2370,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":2377,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":2371,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":2368,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":2365,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":2374,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":2367,"metricType":"sum"},{"name":"records read","accumulatorId":2364,"metricType":"sum"},{"name":"local bytes read","accumulatorId":2362,"metricType":"size"},{"name":"fetch wait time","accumulatorId":2363,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":2360,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":2366,"metricType":"sum"},{"name":"local blocks read","accumulatorId":2359,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":2369,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":2358,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":2372,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":2373,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":2361,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":2375,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":20,"accumUpdates":[[2353,2],[2357,0],[2354,3],[2355,838367],[2356,2]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":20,"accumUpdates":[[2385,200]]}
{"Event":"SparkListenerJobStart","Job ID":29,"Submission Time":1725364483542,"Stage Infos":[{"Stage ID":36,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":2,"RDD Info":[{"RDD ID":111,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"302\",\"name\":\"Exchange\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[110],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":110,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"303\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[109],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":109,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"308\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[108],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":108,"Name":"FileScanRDD","Scope":"{\"id\":\"308\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[36],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"302\",\"name\":\"Exchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"20","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364474456_128418477","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"20","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":36,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":2,"RDD Info":[{"RDD ID":111,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"302\",\"name\":\"Exchange\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[110],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":110,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"303\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[109],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":109,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"308\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[108],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":108,"Name":"FileScanRDD","Scope":"{\"id\":\"308\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364483576,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"302\",\"name\":\"Exchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"20","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364474456_128418477","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"20","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":36,"Stage Attempt ID":0,"Task Info":{"Task ID":33,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364483629,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":36,"Stage Attempt ID":0,"Task Info":{"Task ID":34,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1725364483630,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":36,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":33,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364483629,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364484099,"Failed":false,"Killed":false,"Accumulables":[{"ID":2351,"Name":"number of output rows","Update":"30000","Value":"30000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2352,"Name":"scan time","Update":"47","Value":"47","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2384,"Name":"data size","Update":"328","Value":"328","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2403,"Name":"shuffle bytes written","Update":"534","Value":"534","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2404,"Name":"shuffle records written","Update":"6","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2405,"Name":"shuffle write time","Update":"3742605","Value":"3742605","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2406,"Name":"duration","Update":"114","Value":"114","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2407,"Name":"number of output rows","Update":"6","Value":"6","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2408,"Name":"peak memory","Update":"262144","Value":"262144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2410,"Name":"time in aggregation build","Update":"62","Value":"62","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2413,"Name":"number of output rows","Update":"30000","Value":"30000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2414,"Name":"number of input batches","Update":"8","Value":"8","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2415,"Name":"internal.metrics.executorDeserializeTime","Update":220,"Value":220,"Internal":true,"Count Failed Values":true},{"ID":2416,"Name":"internal.metrics.executorDeserializeCpuTime","Update":13967917,"Value":13967917,"Internal":true,"Count Failed Values":true},{"ID":2417,"Name":"internal.metrics.executorRunTime","Update":180,"Value":180,"Internal":true,"Count Failed Values":true},{"ID":2418,"Name":"internal.metrics.executorCpuTime","Update":97097296,"Value":97097296,"Internal":true,"Count Failed Values":true},{"ID":2419,"Name":"internal.metrics.resultSize","Update":3098,"Value":3098,"Internal":true,"Count Failed Values":true},{"ID":2424,"Name":"internal.metrics.peakExecutionMemory","Update":262144,"Value":262144,"Internal":true,"Count Failed Values":true},{"ID":2443,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":534,"Value":534,"Internal":true,"Count Failed Values":true},{"ID":2444,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":6,"Value":6,"Internal":true,"Count Failed Values":true},{"ID":2445,"Name":"internal.metrics.shuffle.write.writeTime","Update":3742605,"Value":3742605,"Internal":true,"Count Failed Values":true},{"ID":2446,"Name":"internal.metrics.input.bytesRead","Update":40928,"Value":40928,"Internal":true,"Count Failed Values":true},{"ID":2447,"Name":"internal.metrics.input.recordsRead","Update":30000,"Value":30000,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":220,"Executor Deserialize CPU Time":13967917,"Executor Run Time":180,"Executor CPU Time":97097296,"Peak Execution Memory":262144,"Result Size":3098,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":534,"Shuffle Write Time":3742605,"Shuffle Records Written":6},"Input Metrics":{"Bytes Read":40928,"Records Read":30000},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":36,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":34,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1725364483630,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364484108,"Failed":false,"Killed":false,"Accumulables":[{"ID":2351,"Name":"number of output rows","Update":"20000","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2352,"Name":"scan time","Update":"48","Value":"95","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2384,"Name":"data size","Update":"272","Value":"600","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2403,"Name":"shuffle bytes written","Update":"445","Value":"979","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2404,"Name":"shuffle records written","Update":"5","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2405,"Name":"shuffle write time","Update":"5224838","Value":"8967443","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2406,"Name":"duration","Update":"106","Value":"220","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2407,"Name":"number of output rows","Update":"5","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2408,"Name":"peak memory","Update":"262144","Value":"524288","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2410,"Name":"time in aggregation build","Update":"58","Value":"120","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2413,"Name":"number of output rows","Update":"20000","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2414,"Name":"number of input batches","Update":"5","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2415,"Name":"internal.metrics.executorDeserializeTime","Update":219,"Value":439,"Internal":true,"Count Failed Values":true},{"ID":2416,"Name":"internal.metrics.executorDeserializeCpuTime","Update":17061374,"Value":31029291,"Internal":true,"Count Failed Values":true},{"ID":2417,"Name":"internal.metrics.executorRunTime","Update":179,"Value":359,"Internal":true,"Count Failed Values":true},{"ID":2418,"Name":"internal.metrics.executorCpuTime","Update":97144290,"Value":194241586,"Internal":true,"Count Failed Values":true},{"ID":2419,"Name":"internal.metrics.resultSize","Update":3185,"Value":6283,"Internal":true,"Count Failed Values":true},{"ID":2420,"Name":"internal.metrics.jvmGCTime","Update":10,"Value":10,"Internal":true,"Count Failed Values":true},{"ID":2421,"Name":"internal.metrics.resultSerializationTime","Update":4,"Value":4,"Internal":true,"Count Failed Values":true},{"ID":2424,"Name":"internal.metrics.peakExecutionMemory","Update":262144,"Value":524288,"Internal":true,"Count Failed Values":true},{"ID":2443,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":445,"Value":979,"Internal":true,"Count Failed Values":true},{"ID":2444,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":5,"Value":11,"Internal":true,"Count Failed Values":true},{"ID":2445,"Name":"internal.metrics.shuffle.write.writeTime","Update":5224838,"Value":8967443,"Internal":true,"Count Failed Values":true},{"ID":2446,"Name":"internal.metrics.input.bytesRead","Update":26710,"Value":67638,"Internal":true,"Count Failed Values":true},{"ID":2447,"Name":"internal.metrics.input.recordsRead","Update":20000,"Value":50000,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":219,"Executor Deserialize CPU Time":17061374,"Executor Run Time":179,"Executor CPU Time":97144290,"Peak Execution Memory":262144,"Result Size":3185,"JVM GC Time":10,"Result Serialization Time":4,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":445,"Shuffle Write Time":5224838,"Shuffle Records Written":5},"Input Metrics":{"Bytes Read":26710,"Records Read":20000},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":36,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":2,"RDD Info":[{"RDD ID":111,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"302\",\"name\":\"Exchange\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[110],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":110,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"303\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[109],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":109,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"308\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[108],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":108,"Name":"FileScanRDD","Scope":"{\"id\":\"308\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364483576,"Completion Time":1725364484113,"Accumulables":[{"ID":2351,"Name":"number of output rows","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2352,"Name":"scan time","Value":"95","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2384,"Name":"data size","Value":"600","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2403,"Name":"shuffle bytes written","Value":"979","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2404,"Name":"shuffle records written","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2405,"Name":"shuffle write time","Value":"8967443","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2406,"Name":"duration","Value":"220","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2407,"Name":"number of output rows","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2408,"Name":"peak memory","Value":"524288","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2410,"Name":"time in aggregation build","Value":"120","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2413,"Name":"number of output rows","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2414,"Name":"number of input batches","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2415,"Name":"internal.metrics.executorDeserializeTime","Value":439,"Internal":true,"Count Failed Values":true},{"ID":2416,"Name":"internal.metrics.executorDeserializeCpuTime","Value":31029291,"Internal":true,"Count Failed Values":true},{"ID":2417,"Name":"internal.metrics.executorRunTime","Value":359,"Internal":true,"Count Failed Values":true},{"ID":2418,"Name":"internal.metrics.executorCpuTime","Value":194241586,"Internal":true,"Count Failed Values":true},{"ID":2419,"Name":"internal.metrics.resultSize","Value":6283,"Internal":true,"Count Failed Values":true},{"ID":2420,"Name":"internal.metrics.jvmGCTime","Value":10,"Internal":true,"Count Failed Values":true},{"ID":2421,"Name":"internal.metrics.resultSerializationTime","Value":4,"Internal":true,"Count Failed Values":true},{"ID":2424,"Name":"internal.metrics.peakExecutionMemory","Value":524288,"Internal":true,"Count Failed Values":true},{"ID":2443,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":979,"Internal":true,"Count Failed Values":true},{"ID":2444,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":11,"Internal":true,"Count Failed Values":true},{"ID":2445,"Name":"internal.metrics.shuffle.write.writeTime","Value":8967443,"Internal":true,"Count Failed Values":true},{"ID":2446,"Name":"internal.metrics.input.bytesRead","Value":67638,"Internal":true,"Count Failed Values":true},{"ID":2447,"Name":"internal.metrics.input.recordsRead","Value":50000,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":29,"Completion Time":1725364484131,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":20,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (14)\n+- == Final Plan ==\n   * HashAggregate (8)\n   +- AQEShuffleRead (7)\n      +- ShuffleQueryStage (6), Statistics(sizeInBytes=600.0 B, rowCount=11)\n         +- Exchange (5)\n            +- * HashAggregate (4)\n               +- * Project (3)\n                  +- * ColumnarToRow (2)\n                     +- Scan parquet  (1)\n+- == Initial Plan ==\n   CollectLimit (13)\n   +- HashAggregate (12)\n      +- Exchange (11)\n         +- HashAggregate (10)\n            +- Project (9)\n               +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [3]: [arrDelay#403, year#418, month#419]\nBatched: true\nLocation: InMemoryFileIndex [s3a://flight-bucket/refined/flights]\nReadSchema: struct<arrDelay:int>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [3]: [arrDelay#403, year#418, month#419]\n\n(3) Project [codegen id : 1]\nOutput [3]: [year#418, month#419, CASE WHEN (arrDelay#403 > 360) THEN Very Long Delays WHEN ((arrDelay#403 > 120) AND (arrDelay#403 < 360)) THEN Long Delays WHEN ((arrDelay#403 > 60) AND (arrDelay#403 < 120)) THEN Short Delays WHEN ((arrDelay#403 > 0) AND (arrDelay#403 < 60)) THEN Tolerable Delays WHEN (arrDelay#403 = 0) THEN No Delays ELSE Early END AS flight_delays#924]\nInput [3]: [arrDelay#403, year#418, month#419]\n\n(4) HashAggregate [codegen id : 1]\nInput [3]: [year#418, month#419, flight_delays#924]\nKeys [3]: [year#418, month#419, flight_delays#924]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#935L]\nResults [4]: [year#418, month#419, flight_delays#924, count#936L]\n\n(5) Exchange\nInput [4]: [year#418, month#419, flight_delays#924, count#936L]\nArguments: hashpartitioning(year#418, month#419, flight_delays#924, 200), ENSURE_REQUIREMENTS, [plan_id=906]\n\n(6) ShuffleQueryStage\nOutput [4]: [year#418, month#419, flight_delays#924, count#936L]\nArguments: 0\n\n(7) AQEShuffleRead\nInput [4]: [year#418, month#419, flight_delays#924, count#936L]\nArguments: coalesced\n\n(8) HashAggregate [codegen id : 2]\nInput [4]: [year#418, month#419, flight_delays#924, count#936L]\nKeys [3]: [year#418, month#419, flight_delays#924]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#926L]\nResults [4]: [year#418, month#419, flight_delays#924, count(1)#926L AS count#925L]\n\n(9) Project\nOutput [3]: [year#418, month#419, CASE WHEN (arrDelay#403 > 360) THEN Very Long Delays WHEN ((arrDelay#403 > 120) AND (arrDelay#403 < 360)) THEN Long Delays WHEN ((arrDelay#403 > 60) AND (arrDelay#403 < 120)) THEN Short Delays WHEN ((arrDelay#403 > 0) AND (arrDelay#403 < 60)) THEN Tolerable Delays WHEN (arrDelay#403 = 0) THEN No Delays ELSE Early END AS flight_delays#924]\nInput [3]: [arrDelay#403, year#418, month#419]\n\n(10) HashAggregate\nInput [3]: [year#418, month#419, flight_delays#924]\nKeys [3]: [year#418, month#419, flight_delays#924]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#935L]\nResults [4]: [year#418, month#419, flight_delays#924, count#936L]\n\n(11) Exchange\nInput [4]: [year#418, month#419, flight_delays#924, count#936L]\nArguments: hashpartitioning(year#418, month#419, flight_delays#924, 200), ENSURE_REQUIREMENTS, [plan_id=887]\n\n(12) HashAggregate\nInput [4]: [year#418, month#419, flight_delays#924, count#936L]\nKeys [3]: [year#418, month#419, flight_delays#924]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#926L]\nResults [4]: [year#418, month#419, flight_delays#924, count(1)#926L AS count#925L]\n\n(13) CollectLimit\nInput [4]: [year#418, month#419, flight_delays#924, count#925L]\nArguments: 1001\n\n(14) AdaptiveSparkPlan\nOutput [4]: [year#418, month#419, flight_delays#924, count#925L]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[year#418, month#419, flight_delays#924], functions=[count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(year#418, month#419, flight_delays#924, 200), ENSURE_REQUIREMENTS, [plan_id=906]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[year#418, month#419, flight_delays#924], functions=[partial_count(1)])","children":[{"nodeName":"Project","simpleString":"Project [year#418, month#419, CASE WHEN (arrDelay#403 > 360) THEN Very Long Delays WHEN ((arrDelay#403 > 120) AND (arrDelay#403 < 360)) THEN Long Delays WHEN ((arrDelay#403 > 60) AND (arrDelay#403 < 120)) THEN Short Delays WHEN ((arrDelay#403 > 0) AND (arrDelay#403 < 60)) THEN Tolerable Delays WHEN (arrDelay#403 = 0) THEN No Delays ELSE Early END AS flight_delays#924]","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [arrDelay#403,year#418,month#419] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<arrDelay:int>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights]","ReadSchema":"struct<arrDelay:int>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":2353,"metricType":"sum"},{"name":"scan time","accumulatorId":2352,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":2357,"metricType":"timing"},{"name":"metadata time","accumulatorId":2354,"metricType":"timing"},{"name":"size of files read","accumulatorId":2355,"metricType":"size"},{"name":"number of output rows","accumulatorId":2351,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":2356,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":2413,"metricType":"sum"},{"name":"number of input batches","accumulatorId":2414,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":2409,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":2410,"metricType":"timing"},{"name":"peak memory","accumulatorId":2408,"metricType":"size"},{"name":"number of output rows","accumulatorId":2407,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":2412,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":2411,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":2406,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":2404,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":2398,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":2405,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":2399,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":2396,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":2393,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":2402,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":2395,"metricType":"sum"},{"name":"records read","accumulatorId":2392,"metricType":"sum"},{"name":"local bytes read","accumulatorId":2390,"metricType":"size"},{"name":"fetch wait time","accumulatorId":2391,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":2388,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":2394,"metricType":"sum"},{"name":"local blocks read","accumulatorId":2387,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":2397,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":2386,"metricType":"sum"},{"name":"data size","accumulatorId":2384,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":2400,"metricType":"size"},{"name":"number of partitions","accumulatorId":2385,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":2401,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":2389,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":2403,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":2457,"metricType":"sum"},{"name":"partition data size","accumulatorId":2458,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":2459,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":2453,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":2454,"metricType":"timing"},{"name":"peak memory","accumulatorId":2452,"metricType":"size"},{"name":"number of output rows","accumulatorId":2451,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":2456,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":2455,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":2450,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":20,"accumUpdates":[[2457,1],[2459,1],[2458,1041]]}
{"Event":"SparkListenerJobStart","Job ID":30,"Submission Time":1725364484390,"Stage Infos":[{"Stage ID":37,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":2,"RDD Info":[{"RDD ID":111,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"302\",\"name\":\"Exchange\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[110],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":110,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"303\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[109],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":109,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"308\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[108],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":108,"Name":"FileScanRDD","Scope":"{\"id\":\"308\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":38,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":114,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"313\",\"name\":\"mapPartitionsInternal\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[113],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":112,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"312\",\"name\":\"AQEShuffleRead\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[111],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":113,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"309\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[112],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[37],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[37,38],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"314\",\"name\":\"collect\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"20","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364474456_128418477","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"20","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":38,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":114,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"313\",\"name\":\"mapPartitionsInternal\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[113],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":112,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"312\",\"name\":\"AQEShuffleRead\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[111],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":113,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"309\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[112],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[37],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364484425,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"314\",\"name\":\"collect\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"20","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364474456_128418477","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"20","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":38,"Stage Attempt ID":0,"Task Info":{"Task ID":35,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364484501,"Executor ID":"0","Host":"172.17.0.9","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":38,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":35,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364484501,"Executor ID":"0","Host":"172.17.0.9","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364484816,"Failed":false,"Killed":false,"Accumulables":[{"ID":2386,"Name":"remote blocks read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2387,"Name":"local blocks read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2388,"Name":"remote bytes read","Update":"445","Value":"445","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2390,"Name":"local bytes read","Update":"534","Value":"534","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2391,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2392,"Name":"records read","Update":"11","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2401,"Name":"remote reqs duration","Update":"13","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2450,"Name":"duration","Update":"4","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2451,"Name":"number of output rows","Update":"11","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2452,"Name":"peak memory","Update":"17039344","Value":"17039344","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2454,"Name":"time in aggregation build","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2455,"Name":"avg hash probes per key","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2460,"Name":"internal.metrics.executorDeserializeTime","Update":204,"Value":204,"Internal":true,"Count Failed Values":true},{"ID":2461,"Name":"internal.metrics.executorDeserializeCpuTime","Update":5707247,"Value":5707247,"Internal":true,"Count Failed Values":true},{"ID":2462,"Name":"internal.metrics.executorRunTime","Update":72,"Value":72,"Internal":true,"Count Failed Values":true},{"ID":2463,"Name":"internal.metrics.executorCpuTime","Update":24476584,"Value":24476584,"Internal":true,"Count Failed Values":true},{"ID":2464,"Name":"internal.metrics.resultSize","Update":5726,"Value":5726,"Internal":true,"Count Failed Values":true},{"ID":2469,"Name":"internal.metrics.peakExecutionMemory","Update":17039344,"Value":17039344,"Internal":true,"Count Failed Values":true},{"ID":2471,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":2472,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":2473,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":445,"Value":445,"Internal":true,"Count Failed Values":true},{"ID":2474,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2475,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":534,"Value":534,"Internal":true,"Count Failed Values":true},{"ID":2476,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2477,"Name":"internal.metrics.shuffle.read.recordsRead","Update":11,"Value":11,"Internal":true,"Count Failed Values":true},{"ID":2478,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2479,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2480,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2481,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2482,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2483,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2484,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2485,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2486,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":13,"Value":13,"Internal":true,"Count Failed Values":true},{"ID":2487,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":204,"Executor Deserialize CPU Time":5707247,"Executor Run Time":72,"Executor CPU Time":24476584,"Peak Execution Memory":17039344,"Result Size":5726,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":1,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":445,"Remote Bytes Read To Disk":0,"Local Bytes Read":534,"Total Records Read":11,"Remote Requests Duration":13,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":38,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":114,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"313\",\"name\":\"mapPartitionsInternal\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[113],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":112,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"312\",\"name\":\"AQEShuffleRead\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[111],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":113,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"309\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[112],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[37],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364484425,"Completion Time":1725364484832,"Accumulables":[{"ID":2386,"Name":"remote blocks read","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2387,"Name":"local blocks read","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2388,"Name":"remote bytes read","Value":"445","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2390,"Name":"local bytes read","Value":"534","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2391,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2392,"Name":"records read","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2401,"Name":"remote reqs duration","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2450,"Name":"duration","Value":"4","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2451,"Name":"number of output rows","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2452,"Name":"peak memory","Value":"17039344","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2454,"Name":"time in aggregation build","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2455,"Name":"avg hash probes per key","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2460,"Name":"internal.metrics.executorDeserializeTime","Value":204,"Internal":true,"Count Failed Values":true},{"ID":2461,"Name":"internal.metrics.executorDeserializeCpuTime","Value":5707247,"Internal":true,"Count Failed Values":true},{"ID":2462,"Name":"internal.metrics.executorRunTime","Value":72,"Internal":true,"Count Failed Values":true},{"ID":2463,"Name":"internal.metrics.executorCpuTime","Value":24476584,"Internal":true,"Count Failed Values":true},{"ID":2464,"Name":"internal.metrics.resultSize","Value":5726,"Internal":true,"Count Failed Values":true},{"ID":2469,"Name":"internal.metrics.peakExecutionMemory","Value":17039344,"Internal":true,"Count Failed Values":true},{"ID":2471,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":1,"Internal":true,"Count Failed Values":true},{"ID":2472,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":1,"Internal":true,"Count Failed Values":true},{"ID":2473,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":445,"Internal":true,"Count Failed Values":true},{"ID":2474,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2475,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":534,"Internal":true,"Count Failed Values":true},{"ID":2476,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2477,"Name":"internal.metrics.shuffle.read.recordsRead","Value":11,"Internal":true,"Count Failed Values":true},{"ID":2478,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2479,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2480,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2481,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2482,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2483,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2484,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2485,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2486,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":13,"Internal":true,"Count Failed Values":true},{"ID":2487,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":30,"Completion Time":1725364484863,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":20,"time":1725364484997,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":21,"rootExecutionId":21,"description":"Started by: admin","details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (7)\n+- CollectLimit (6)\n   +- HashAggregate (5)\n      +- Exchange (4)\n         +- HashAggregate (3)\n            +- Project (2)\n               +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [3]: [arrDelay#403, year#418, month#419]\nBatched: true\nLocation: InMemoryFileIndex [s3a://flight-bucket/refined/flights]\nReadSchema: struct<arrDelay:int>\n\n(2) Project\nOutput [3]: [year#418, month#419, CASE WHEN (arrDelay#403 > 360) THEN Very Long Delays WHEN ((arrDelay#403 > 120) AND (arrDelay#403 < 360)) THEN Long Delays WHEN ((arrDelay#403 > 60) AND (arrDelay#403 < 120)) THEN Short Delays WHEN ((arrDelay#403 > 0) AND (arrDelay#403 < 60)) THEN Tolerable Delays WHEN (arrDelay#403 = 0) THEN No Delays ELSE Early END AS flight_delays#942]\nInput [3]: [arrDelay#403, year#418, month#419]\n\n(3) HashAggregate\nInput [3]: [year#418, month#419, flight_delays#942]\nKeys [3]: [year#418, month#419, flight_delays#942]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#953L]\nResults [4]: [year#418, month#419, flight_delays#942, count#954L]\n\n(4) Exchange\nInput [4]: [year#418, month#419, flight_delays#942, count#954L]\nArguments: hashpartitioning(year#418, month#419, flight_delays#942, 200), ENSURE_REQUIREMENTS, [plan_id=941]\n\n(5) HashAggregate\nInput [4]: [year#418, month#419, flight_delays#942, count#954L]\nKeys [3]: [year#418, month#419, flight_delays#942]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#944L]\nResults [4]: [year#418, month#419, flight_delays#942, count(1)#944L AS count#943L]\n\n(6) CollectLimit\nInput [4]: [year#418, month#419, flight_delays#942, count#943L]\nArguments: 1001\n\n(7) AdaptiveSparkPlan\nOutput [4]: [year#418, month#419, flight_delays#942, count#943L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 1001","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[year#418, month#419, flight_delays#942], functions=[count(1)])","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(year#418, month#419, flight_delays#942, 200), ENSURE_REQUIREMENTS, [plan_id=941]","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[year#418, month#419, flight_delays#942], functions=[partial_count(1)])","children":[{"nodeName":"Project","simpleString":"Project [year#418, month#419, CASE WHEN (arrDelay#403 > 360) THEN Very Long Delays WHEN ((arrDelay#403 > 120) AND (arrDelay#403 < 360)) THEN Long Delays WHEN ((arrDelay#403 > 60) AND (arrDelay#403 < 120)) THEN Short Delays WHEN ((arrDelay#403 > 0) AND (arrDelay#403 < 60)) THEN Tolerable Delays WHEN (arrDelay#403 = 0) THEN No Delays ELSE Early END AS flight_delays#942]","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [arrDelay#403,year#418,month#419] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<arrDelay:int>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights]","ReadSchema":"struct<arrDelay:int>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":2551,"metricType":"sum"},{"name":"scan time","accumulatorId":2550,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":2555,"metricType":"timing"},{"name":"metadata time","accumulatorId":2552,"metricType":"timing"},{"name":"size of files read","accumulatorId":2553,"metricType":"size"},{"name":"number of output rows","accumulatorId":2549,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":2554,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":2545,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":2546,"metricType":"timing"},{"name":"peak memory","accumulatorId":2544,"metricType":"size"},{"name":"number of output rows","accumulatorId":2543,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":2548,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":2547,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":2541,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":2535,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":2542,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":2536,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":2533,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":2530,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":2539,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":2532,"metricType":"sum"},{"name":"records read","accumulatorId":2529,"metricType":"sum"},{"name":"local bytes read","accumulatorId":2527,"metricType":"size"},{"name":"fetch wait time","accumulatorId":2528,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":2525,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":2531,"metricType":"sum"},{"name":"local blocks read","accumulatorId":2524,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":2534,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":2523,"metricType":"sum"},{"name":"data size","accumulatorId":2521,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":2537,"metricType":"size"},{"name":"number of partitions","accumulatorId":2522,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":2538,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":2526,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":2540,"metricType":"size"}]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":2517,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":2518,"metricType":"timing"},{"name":"peak memory","accumulatorId":2516,"metricType":"size"},{"name":"number of output rows","accumulatorId":2515,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":2520,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":2519,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":2513,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":2507,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":2514,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":2508,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":2505,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":2502,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":2511,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":2504,"metricType":"sum"},{"name":"records read","accumulatorId":2501,"metricType":"sum"},{"name":"local bytes read","accumulatorId":2499,"metricType":"size"},{"name":"fetch wait time","accumulatorId":2500,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":2497,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":2503,"metricType":"sum"},{"name":"local blocks read","accumulatorId":2496,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":2506,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":2495,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":2509,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":2510,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":2498,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":2512,"metricType":"size"}]}],"metadata":{},"metrics":[]},"time":1725364492456,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":21,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (14)\n+- == Current Plan ==\n   CollectLimit (8)\n   +- HashAggregate (7)\n      +- ShuffleQueryStage (6)\n         +- Exchange (5)\n            +- * HashAggregate (4)\n               +- * Project (3)\n                  +- * ColumnarToRow (2)\n                     +- Scan parquet  (1)\n+- == Initial Plan ==\n   CollectLimit (13)\n   +- HashAggregate (12)\n      +- Exchange (11)\n         +- HashAggregate (10)\n            +- Project (9)\n               +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [3]: [arrDelay#403, year#418, month#419]\nBatched: true\nLocation: InMemoryFileIndex [s3a://flight-bucket/refined/flights]\nReadSchema: struct<arrDelay:int>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [3]: [arrDelay#403, year#418, month#419]\n\n(3) Project [codegen id : 1]\nOutput [3]: [year#418, month#419, CASE WHEN (arrDelay#403 > 360) THEN Very Long Delays WHEN ((arrDelay#403 > 120) AND (arrDelay#403 < 360)) THEN Long Delays WHEN ((arrDelay#403 > 60) AND (arrDelay#403 < 120)) THEN Short Delays WHEN ((arrDelay#403 > 0) AND (arrDelay#403 < 60)) THEN Tolerable Delays WHEN (arrDelay#403 = 0) THEN No Delays ELSE Early END AS flight_delays#942]\nInput [3]: [arrDelay#403, year#418, month#419]\n\n(4) HashAggregate [codegen id : 1]\nInput [3]: [year#418, month#419, flight_delays#942]\nKeys [3]: [year#418, month#419, flight_delays#942]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#953L]\nResults [4]: [year#418, month#419, flight_delays#942, count#954L]\n\n(5) Exchange\nInput [4]: [year#418, month#419, flight_delays#942, count#954L]\nArguments: hashpartitioning(year#418, month#419, flight_delays#942, 200), ENSURE_REQUIREMENTS, [plan_id=960]\n\n(6) ShuffleQueryStage\nOutput [4]: [year#418, month#419, flight_delays#942, count#954L]\nArguments: 0\n\n(7) HashAggregate\nInput [4]: [year#418, month#419, flight_delays#942, count#954L]\nKeys [3]: [year#418, month#419, flight_delays#942]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#944L]\nResults [4]: [year#418, month#419, flight_delays#942, count(1)#944L AS count#943L]\n\n(8) CollectLimit\nInput [4]: [year#418, month#419, flight_delays#942, count#943L]\nArguments: 1001\n\n(9) Project\nOutput [3]: [year#418, month#419, CASE WHEN (arrDelay#403 > 360) THEN Very Long Delays WHEN ((arrDelay#403 > 120) AND (arrDelay#403 < 360)) THEN Long Delays WHEN ((arrDelay#403 > 60) AND (arrDelay#403 < 120)) THEN Short Delays WHEN ((arrDelay#403 > 0) AND (arrDelay#403 < 60)) THEN Tolerable Delays WHEN (arrDelay#403 = 0) THEN No Delays ELSE Early END AS flight_delays#942]\nInput [3]: [arrDelay#403, year#418, month#419]\n\n(10) HashAggregate\nInput [3]: [year#418, month#419, flight_delays#942]\nKeys [3]: [year#418, month#419, flight_delays#942]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#953L]\nResults [4]: [year#418, month#419, flight_delays#942, count#954L]\n\n(11) Exchange\nInput [4]: [year#418, month#419, flight_delays#942, count#954L]\nArguments: hashpartitioning(year#418, month#419, flight_delays#942, 200), ENSURE_REQUIREMENTS, [plan_id=941]\n\n(12) HashAggregate\nInput [4]: [year#418, month#419, flight_delays#942, count#954L]\nKeys [3]: [year#418, month#419, flight_delays#942]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#944L]\nResults [4]: [year#418, month#419, flight_delays#942, count(1)#944L AS count#943L]\n\n(13) CollectLimit\nInput [4]: [year#418, month#419, flight_delays#942, count#943L]\nArguments: 1001\n\n(14) AdaptiveSparkPlan\nOutput [4]: [year#418, month#419, flight_delays#942, count#943L]\nArguments: isFinalPlan=false\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=false","children":[{"nodeName":"CollectLimit","simpleString":"CollectLimit 1001","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[year#418, month#419, flight_delays#942], functions=[count(1)])","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(year#418, month#419, flight_delays#942, 200), ENSURE_REQUIREMENTS, [plan_id=960]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[year#418, month#419, flight_delays#942], functions=[partial_count(1)])","children":[{"nodeName":"Project","simpleString":"Project [year#418, month#419, CASE WHEN (arrDelay#403 > 360) THEN Very Long Delays WHEN ((arrDelay#403 > 120) AND (arrDelay#403 < 360)) THEN Long Delays WHEN ((arrDelay#403 > 60) AND (arrDelay#403 < 120)) THEN Short Delays WHEN ((arrDelay#403 > 0) AND (arrDelay#403 < 60)) THEN Tolerable Delays WHEN (arrDelay#403 = 0) THEN No Delays ELSE Early END AS flight_delays#942]","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [arrDelay#403,year#418,month#419] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<arrDelay:int>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights]","ReadSchema":"struct<arrDelay:int>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":2551,"metricType":"sum"},{"name":"scan time","accumulatorId":2550,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":2555,"metricType":"timing"},{"name":"metadata time","accumulatorId":2552,"metricType":"timing"},{"name":"size of files read","accumulatorId":2553,"metricType":"size"},{"name":"number of output rows","accumulatorId":2549,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":2554,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":2611,"metricType":"sum"},{"name":"number of input batches","accumulatorId":2612,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":2607,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":2608,"metricType":"timing"},{"name":"peak memory","accumulatorId":2606,"metricType":"size"},{"name":"number of output rows","accumulatorId":2605,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":2610,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":2609,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":2604,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":2602,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":2596,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":2603,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":2597,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":2594,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":2591,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":2600,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":2593,"metricType":"sum"},{"name":"records read","accumulatorId":2590,"metricType":"sum"},{"name":"local bytes read","accumulatorId":2588,"metricType":"size"},{"name":"fetch wait time","accumulatorId":2589,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":2586,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":2592,"metricType":"sum"},{"name":"local blocks read","accumulatorId":2585,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":2595,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":2584,"metricType":"sum"},{"name":"data size","accumulatorId":2582,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":2598,"metricType":"size"},{"name":"number of partitions","accumulatorId":2583,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":2599,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":2587,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":2601,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":2578,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":2579,"metricType":"timing"},{"name":"peak memory","accumulatorId":2577,"metricType":"size"},{"name":"number of output rows","accumulatorId":2576,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":2581,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":2580,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":2574,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":2568,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":2575,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":2569,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":2566,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":2563,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":2572,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":2565,"metricType":"sum"},{"name":"records read","accumulatorId":2562,"metricType":"sum"},{"name":"local bytes read","accumulatorId":2560,"metricType":"size"},{"name":"fetch wait time","accumulatorId":2561,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":2558,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":2564,"metricType":"sum"},{"name":"local blocks read","accumulatorId":2557,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":2567,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":2556,"metricType":"sum"},{"name":"local merged bytes read","accumulatorId":2570,"metricType":"size"},{"name":"remote reqs duration","accumulatorId":2571,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":2559,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":2573,"metricType":"size"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":21,"accumUpdates":[[2551,2],[2555,0],[2552,0],[2553,838367],[2554,2]]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":21,"accumUpdates":[[2583,200]]}
{"Event":"SparkListenerJobStart","Job ID":31,"Submission Time":1725364492861,"Stage Infos":[{"Stage ID":39,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":2,"RDD Info":[{"RDD ID":118,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"322\",\"name\":\"Exchange\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[117],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":117,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"323\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[116],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":115,"Name":"FileScanRDD","Scope":"{\"id\":\"328\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":116,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"328\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[115],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[39],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"322\",\"name\":\"Exchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"21","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364482625_526653052","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"21","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":39,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":2,"RDD Info":[{"RDD ID":118,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"322\",\"name\":\"Exchange\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[117],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":117,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"323\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[116],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":115,"Name":"FileScanRDD","Scope":"{\"id\":\"328\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":116,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"328\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[115],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364492892,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"322\",\"name\":\"Exchange\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"21","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364482625_526653052","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"21","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":39,"Stage Attempt ID":0,"Task Info":{"Task ID":36,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364493004,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskStart","Stage ID":39,"Stage Attempt ID":0,"Task Info":{"Task ID":37,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1725364493005,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":39,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":37,"Index":1,"Attempt":0,"Partition ID":1,"Launch Time":1725364493005,"Executor ID":"1","Host":"172.17.0.26","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364493324,"Failed":false,"Killed":false,"Accumulables":[{"ID":2549,"Name":"number of output rows","Update":"20000","Value":"20000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2550,"Name":"scan time","Update":"48","Value":"48","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2582,"Name":"data size","Update":"272","Value":"272","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2601,"Name":"shuffle bytes written","Update":"445","Value":"445","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2602,"Name":"shuffle records written","Update":"5","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2603,"Name":"shuffle write time","Update":"2750760","Value":"2750760","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2604,"Name":"duration","Update":"63","Value":"63","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2605,"Name":"number of output rows","Update":"5","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2606,"Name":"peak memory","Update":"262144","Value":"262144","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2608,"Name":"time in aggregation build","Update":"55","Value":"55","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2611,"Name":"number of output rows","Update":"20000","Value":"20000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2612,"Name":"number of input batches","Update":"5","Value":"5","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2613,"Name":"internal.metrics.executorDeserializeTime","Update":222,"Value":222,"Internal":true,"Count Failed Values":true},{"ID":2614,"Name":"internal.metrics.executorDeserializeCpuTime","Update":6453334,"Value":6453334,"Internal":true,"Count Failed Values":true},{"ID":2615,"Name":"internal.metrics.executorRunTime","Update":65,"Value":65,"Internal":true,"Count Failed Values":true},{"ID":2616,"Name":"internal.metrics.executorCpuTime","Update":35066288,"Value":35066288,"Internal":true,"Count Failed Values":true},{"ID":2617,"Name":"internal.metrics.resultSize","Update":3099,"Value":3099,"Internal":true,"Count Failed Values":true},{"ID":2622,"Name":"internal.metrics.peakExecutionMemory","Update":262144,"Value":262144,"Internal":true,"Count Failed Values":true},{"ID":2641,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":445,"Value":445,"Internal":true,"Count Failed Values":true},{"ID":2642,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":5,"Value":5,"Internal":true,"Count Failed Values":true},{"ID":2643,"Name":"internal.metrics.shuffle.write.writeTime","Update":2750760,"Value":2750760,"Internal":true,"Count Failed Values":true},{"ID":2644,"Name":"internal.metrics.input.bytesRead","Update":26710,"Value":26710,"Internal":true,"Count Failed Values":true},{"ID":2645,"Name":"internal.metrics.input.recordsRead","Update":20000,"Value":20000,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":222,"Executor Deserialize CPU Time":6453334,"Executor Run Time":65,"Executor CPU Time":35066288,"Peak Execution Memory":262144,"Result Size":3099,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":445,"Shuffle Write Time":2750760,"Shuffle Records Written":5},"Input Metrics":{"Bytes Read":26710,"Records Read":20000},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":39,"Stage Attempt ID":0,"Task Type":"ShuffleMapTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":36,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364493004,"Executor ID":"0","Host":"172.17.0.9","Locality":"PROCESS_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364493324,"Failed":false,"Killed":false,"Accumulables":[{"ID":2549,"Name":"number of output rows","Update":"30000","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2550,"Name":"scan time","Update":"48","Value":"96","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2582,"Name":"data size","Update":"328","Value":"600","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2601,"Name":"shuffle bytes written","Update":"534","Value":"979","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2602,"Name":"shuffle records written","Update":"6","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2603,"Name":"shuffle write time","Update":"2580126","Value":"5330886","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2604,"Name":"duration","Update":"66","Value":"129","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2605,"Name":"number of output rows","Update":"6","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2606,"Name":"peak memory","Update":"262144","Value":"524288","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2608,"Name":"time in aggregation build","Update":"58","Value":"113","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2611,"Name":"number of output rows","Update":"30000","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2612,"Name":"number of input batches","Update":"8","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2613,"Name":"internal.metrics.executorDeserializeTime","Update":222,"Value":444,"Internal":true,"Count Failed Values":true},{"ID":2614,"Name":"internal.metrics.executorDeserializeCpuTime","Update":7170919,"Value":13624253,"Internal":true,"Count Failed Values":true},{"ID":2615,"Name":"internal.metrics.executorRunTime","Update":69,"Value":134,"Internal":true,"Count Failed Values":true},{"ID":2616,"Name":"internal.metrics.executorCpuTime","Update":37575501,"Value":72641789,"Internal":true,"Count Failed Values":true},{"ID":2617,"Name":"internal.metrics.resultSize","Update":3098,"Value":6197,"Internal":true,"Count Failed Values":true},{"ID":2622,"Name":"internal.metrics.peakExecutionMemory","Update":262144,"Value":524288,"Internal":true,"Count Failed Values":true},{"ID":2641,"Name":"internal.metrics.shuffle.write.bytesWritten","Update":534,"Value":979,"Internal":true,"Count Failed Values":true},{"ID":2642,"Name":"internal.metrics.shuffle.write.recordsWritten","Update":6,"Value":11,"Internal":true,"Count Failed Values":true},{"ID":2643,"Name":"internal.metrics.shuffle.write.writeTime","Update":2580126,"Value":5330886,"Internal":true,"Count Failed Values":true},{"ID":2644,"Name":"internal.metrics.input.bytesRead","Update":40928,"Value":67638,"Internal":true,"Count Failed Values":true},{"ID":2645,"Name":"internal.metrics.input.recordsRead","Update":30000,"Value":50000,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":222,"Executor Deserialize CPU Time":7170919,"Executor Run Time":69,"Executor CPU Time":37575501,"Peak Execution Memory":262144,"Result Size":3098,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":0,"Local Blocks Fetched":0,"Fetch Wait Time":0,"Remote Bytes Read":0,"Remote Bytes Read To Disk":0,"Local Bytes Read":0,"Total Records Read":0,"Remote Requests Duration":0,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":534,"Shuffle Write Time":2580126,"Shuffle Records Written":6},"Input Metrics":{"Bytes Read":40928,"Records Read":30000},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":39,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":2,"RDD Info":[{"RDD ID":118,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"322\",\"name\":\"Exchange\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[117],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":117,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"323\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[116],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":115,"Name":"FileScanRDD","Scope":"{\"id\":\"328\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":116,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"328\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[115],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364492892,"Completion Time":1725364493331,"Accumulables":[{"ID":2549,"Name":"number of output rows","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2550,"Name":"scan time","Value":"96","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2582,"Name":"data size","Value":"600","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2601,"Name":"shuffle bytes written","Value":"979","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2602,"Name":"shuffle records written","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2603,"Name":"shuffle write time","Value":"5330886","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2604,"Name":"duration","Value":"129","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2605,"Name":"number of output rows","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2606,"Name":"peak memory","Value":"524288","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2608,"Name":"time in aggregation build","Value":"113","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2611,"Name":"number of output rows","Value":"50000","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2612,"Name":"number of input batches","Value":"13","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2613,"Name":"internal.metrics.executorDeserializeTime","Value":444,"Internal":true,"Count Failed Values":true},{"ID":2614,"Name":"internal.metrics.executorDeserializeCpuTime","Value":13624253,"Internal":true,"Count Failed Values":true},{"ID":2615,"Name":"internal.metrics.executorRunTime","Value":134,"Internal":true,"Count Failed Values":true},{"ID":2616,"Name":"internal.metrics.executorCpuTime","Value":72641789,"Internal":true,"Count Failed Values":true},{"ID":2617,"Name":"internal.metrics.resultSize","Value":6197,"Internal":true,"Count Failed Values":true},{"ID":2622,"Name":"internal.metrics.peakExecutionMemory","Value":524288,"Internal":true,"Count Failed Values":true},{"ID":2641,"Name":"internal.metrics.shuffle.write.bytesWritten","Value":979,"Internal":true,"Count Failed Values":true},{"ID":2642,"Name":"internal.metrics.shuffle.write.recordsWritten","Value":11,"Internal":true,"Count Failed Values":true},{"ID":2643,"Name":"internal.metrics.shuffle.write.writeTime","Value":5330886,"Internal":true,"Count Failed Values":true},{"ID":2644,"Name":"internal.metrics.input.bytesRead","Value":67638,"Internal":true,"Count Failed Values":true},{"ID":2645,"Name":"internal.metrics.input.recordsRead","Value":50000,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":31,"Completion Time":1725364493351,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLAdaptiveExecutionUpdate","executionId":21,"physicalPlanDescription":"== Physical Plan ==\nAdaptiveSparkPlan (14)\n+- == Final Plan ==\n   * HashAggregate (8)\n   +- AQEShuffleRead (7)\n      +- ShuffleQueryStage (6), Statistics(sizeInBytes=600.0 B, rowCount=11)\n         +- Exchange (5)\n            +- * HashAggregate (4)\n               +- * Project (3)\n                  +- * ColumnarToRow (2)\n                     +- Scan parquet  (1)\n+- == Initial Plan ==\n   CollectLimit (13)\n   +- HashAggregate (12)\n      +- Exchange (11)\n         +- HashAggregate (10)\n            +- Project (9)\n               +- Scan parquet  (1)\n\n\n(1) Scan parquet \nOutput [3]: [arrDelay#403, year#418, month#419]\nBatched: true\nLocation: InMemoryFileIndex [s3a://flight-bucket/refined/flights]\nReadSchema: struct<arrDelay:int>\n\n(2) ColumnarToRow [codegen id : 1]\nInput [3]: [arrDelay#403, year#418, month#419]\n\n(3) Project [codegen id : 1]\nOutput [3]: [year#418, month#419, CASE WHEN (arrDelay#403 > 360) THEN Very Long Delays WHEN ((arrDelay#403 > 120) AND (arrDelay#403 < 360)) THEN Long Delays WHEN ((arrDelay#403 > 60) AND (arrDelay#403 < 120)) THEN Short Delays WHEN ((arrDelay#403 > 0) AND (arrDelay#403 < 60)) THEN Tolerable Delays WHEN (arrDelay#403 = 0) THEN No Delays ELSE Early END AS flight_delays#942]\nInput [3]: [arrDelay#403, year#418, month#419]\n\n(4) HashAggregate [codegen id : 1]\nInput [3]: [year#418, month#419, flight_delays#942]\nKeys [3]: [year#418, month#419, flight_delays#942]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#953L]\nResults [4]: [year#418, month#419, flight_delays#942, count#954L]\n\n(5) Exchange\nInput [4]: [year#418, month#419, flight_delays#942, count#954L]\nArguments: hashpartitioning(year#418, month#419, flight_delays#942, 200), ENSURE_REQUIREMENTS, [plan_id=960]\n\n(6) ShuffleQueryStage\nOutput [4]: [year#418, month#419, flight_delays#942, count#954L]\nArguments: 0\n\n(7) AQEShuffleRead\nInput [4]: [year#418, month#419, flight_delays#942, count#954L]\nArguments: coalesced\n\n(8) HashAggregate [codegen id : 2]\nInput [4]: [year#418, month#419, flight_delays#942, count#954L]\nKeys [3]: [year#418, month#419, flight_delays#942]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#944L]\nResults [4]: [year#418, month#419, flight_delays#942, count(1)#944L AS count#943L]\n\n(9) Project\nOutput [3]: [year#418, month#419, CASE WHEN (arrDelay#403 > 360) THEN Very Long Delays WHEN ((arrDelay#403 > 120) AND (arrDelay#403 < 360)) THEN Long Delays WHEN ((arrDelay#403 > 60) AND (arrDelay#403 < 120)) THEN Short Delays WHEN ((arrDelay#403 > 0) AND (arrDelay#403 < 60)) THEN Tolerable Delays WHEN (arrDelay#403 = 0) THEN No Delays ELSE Early END AS flight_delays#942]\nInput [3]: [arrDelay#403, year#418, month#419]\n\n(10) HashAggregate\nInput [3]: [year#418, month#419, flight_delays#942]\nKeys [3]: [year#418, month#419, flight_delays#942]\nFunctions [1]: [partial_count(1)]\nAggregate Attributes [1]: [count#953L]\nResults [4]: [year#418, month#419, flight_delays#942, count#954L]\n\n(11) Exchange\nInput [4]: [year#418, month#419, flight_delays#942, count#954L]\nArguments: hashpartitioning(year#418, month#419, flight_delays#942, 200), ENSURE_REQUIREMENTS, [plan_id=941]\n\n(12) HashAggregate\nInput [4]: [year#418, month#419, flight_delays#942, count#954L]\nKeys [3]: [year#418, month#419, flight_delays#942]\nFunctions [1]: [count(1)]\nAggregate Attributes [1]: [count(1)#944L]\nResults [4]: [year#418, month#419, flight_delays#942, count(1)#944L AS count#943L]\n\n(13) CollectLimit\nInput [4]: [year#418, month#419, flight_delays#942, count#943L]\nArguments: 1001\n\n(14) AdaptiveSparkPlan\nOutput [4]: [year#418, month#419, flight_delays#942, count#943L]\nArguments: isFinalPlan=true\n\n","sparkPlanInfo":{"nodeName":"AdaptiveSparkPlan","simpleString":"AdaptiveSparkPlan isFinalPlan=true","children":[{"nodeName":"WholeStageCodegen (2)","simpleString":"WholeStageCodegen (2)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[year#418, month#419, flight_delays#942], functions=[count(1)])","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"AQEShuffleRead","simpleString":"AQEShuffleRead coalesced","children":[{"nodeName":"ShuffleQueryStage","simpleString":"ShuffleQueryStage 0","children":[{"nodeName":"Exchange","simpleString":"Exchange hashpartitioning(year#418, month#419, flight_delays#942, 200), ENSURE_REQUIREMENTS, [plan_id=960]","children":[{"nodeName":"WholeStageCodegen (1)","simpleString":"WholeStageCodegen (1)","children":[{"nodeName":"HashAggregate","simpleString":"HashAggregate(keys=[year#418, month#419, flight_delays#942], functions=[partial_count(1)])","children":[{"nodeName":"Project","simpleString":"Project [year#418, month#419, CASE WHEN (arrDelay#403 > 360) THEN Very Long Delays WHEN ((arrDelay#403 > 120) AND (arrDelay#403 < 360)) THEN Long Delays WHEN ((arrDelay#403 > 60) AND (arrDelay#403 < 120)) THEN Short Delays WHEN ((arrDelay#403 > 0) AND (arrDelay#403 < 60)) THEN Tolerable Delays WHEN (arrDelay#403 = 0) THEN No Delays ELSE Early END AS flight_delays#942]","children":[{"nodeName":"ColumnarToRow","simpleString":"ColumnarToRow","children":[{"nodeName":"InputAdapter","simpleString":"InputAdapter","children":[{"nodeName":"Scan parquet ","simpleString":"FileScan parquet [arrDelay#403,year#418,month#419] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights], PartitionFilters: [], PushedFilters: [], ReadSchema: struct<arrDelay:int>","children":[],"metadata":{"Location":"InMemoryFileIndex(1 paths)[s3a://flight-bucket/refined/flights]","ReadSchema":"struct<arrDelay:int>","Format":"Parquet","Batched":"true","PartitionFilters":"[]","PushedFilters":"[]","DataFilters":"[]"},"metrics":[{"name":"number of files read","accumulatorId":2551,"metricType":"sum"},{"name":"scan time","accumulatorId":2550,"metricType":"timing"},{"name":"dynamic partition pruning time","accumulatorId":2555,"metricType":"timing"},{"name":"metadata time","accumulatorId":2552,"metricType":"timing"},{"name":"size of files read","accumulatorId":2553,"metricType":"size"},{"name":"number of output rows","accumulatorId":2549,"metricType":"sum"},{"name":"number of partitions read","accumulatorId":2554,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of output rows","accumulatorId":2611,"metricType":"sum"},{"name":"number of input batches","accumulatorId":2612,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":2607,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":2608,"metricType":"timing"},{"name":"peak memory","accumulatorId":2606,"metricType":"size"},{"name":"number of output rows","accumulatorId":2605,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":2610,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":2609,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":2604,"metricType":"timing"}]}],"metadata":{},"metrics":[{"name":"shuffle records written","accumulatorId":2602,"metricType":"sum"},{"name":"local merged chunks fetched","accumulatorId":2596,"metricType":"sum"},{"name":"shuffle write time","accumulatorId":2603,"metricType":"nsTiming"},{"name":"remote merged bytes read","accumulatorId":2597,"metricType":"size"},{"name":"local merged blocks fetched","accumulatorId":2594,"metricType":"sum"},{"name":"corrupt merged block chunks","accumulatorId":2591,"metricType":"sum"},{"name":"remote merged reqs duration","accumulatorId":2600,"metricType":"timing"},{"name":"remote merged blocks fetched","accumulatorId":2593,"metricType":"sum"},{"name":"records read","accumulatorId":2590,"metricType":"sum"},{"name":"local bytes read","accumulatorId":2588,"metricType":"size"},{"name":"fetch wait time","accumulatorId":2589,"metricType":"timing"},{"name":"remote bytes read","accumulatorId":2586,"metricType":"size"},{"name":"merged fetch fallback count","accumulatorId":2592,"metricType":"sum"},{"name":"local blocks read","accumulatorId":2585,"metricType":"sum"},{"name":"remote merged chunks fetched","accumulatorId":2595,"metricType":"sum"},{"name":"remote blocks read","accumulatorId":2584,"metricType":"sum"},{"name":"data size","accumulatorId":2582,"metricType":"size"},{"name":"local merged bytes read","accumulatorId":2598,"metricType":"size"},{"name":"number of partitions","accumulatorId":2583,"metricType":"sum"},{"name":"remote reqs duration","accumulatorId":2599,"metricType":"timing"},{"name":"remote bytes read to disk","accumulatorId":2587,"metricType":"size"},{"name":"shuffle bytes written","accumulatorId":2601,"metricType":"size"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"number of partitions","accumulatorId":2655,"metricType":"sum"},{"name":"partition data size","accumulatorId":2656,"metricType":"size"},{"name":"number of coalesced partitions","accumulatorId":2657,"metricType":"sum"}]}],"metadata":{},"metrics":[]}],"metadata":{},"metrics":[{"name":"spill size","accumulatorId":2651,"metricType":"size"},{"name":"time in aggregation build","accumulatorId":2652,"metricType":"timing"},{"name":"peak memory","accumulatorId":2650,"metricType":"size"},{"name":"number of output rows","accumulatorId":2649,"metricType":"sum"},{"name":"number of sort fallback tasks","accumulatorId":2654,"metricType":"sum"},{"name":"avg hash probes per key","accumulatorId":2653,"metricType":"average"}]}],"metadata":{},"metrics":[{"name":"duration","accumulatorId":2648,"metricType":"timing"}]}],"metadata":{},"metrics":[]}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerDriverAccumUpdates","executionId":21,"accumUpdates":[[2655,1],[2657,1],[2656,1041]]}
{"Event":"SparkListenerJobStart","Job ID":32,"Submission Time":1725364493514,"Stage Infos":[{"Stage ID":40,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":2,"RDD Info":[{"RDD ID":118,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"322\",\"name\":\"Exchange\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[117],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":117,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"323\",\"name\":\"WholeStageCodegen (1)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[116],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":115,"Name":"FileScanRDD","Scope":"{\"id\":\"328\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":116,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"328\",\"name\":\"Scan parquet \"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[115],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"DETERMINATE","Number of Partitions":2,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},{"Stage ID":41,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":121,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"333\",\"name\":\"mapPartitionsInternal\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[120],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":119,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"332\",\"name\":\"AQEShuffleRead\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[118],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":120,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"329\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[119],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[40],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}],"Stage IDs":[40,41],"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"334\",\"name\":\"collect\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"21","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364482625_526653052","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"21","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerStageSubmitted","Stage Info":{"Stage ID":41,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":121,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"333\",\"name\":\"mapPartitionsInternal\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[120],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":119,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"332\",\"name\":\"AQEShuffleRead\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[118],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":120,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"329\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[119],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[40],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364493530,"Accumulables":[],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0},"Properties":{"spark.submit.pyFiles":"","spark.app.startTime":"1725364224895","spark.rdd.scope":"{\"id\":\"334\",\"name\":\"collect\"}","spark.history.provider":"org.apache.spark.deploy.history.FsHistoryProvider","spark.repl.class.outputDir":"/tmp/spark13341833398604741995","spark.history.fs.logDirectory":"file:///var/log/spark/logs","spark.sql.warehouse.dir":"s3a://admin-bucket/hive/warehouse","spark.master":"spark://spark-master:7077","spark.driver.memory":"1g","spark.jars.packages":"org.postgresql:postgresql:42.3.4,org.apache.spark:spark-avro_2.12:3.5.2,graphframes:graphframes:0.8.4-spark3.5-s_2.12","spark.driver.cores":"1","spark.job.interruptOnCancel":"false","spark.ui.port":"4050","spark.app.name":"spark-shared_process","spark.repl.class.uri":"spark://zeppelin:5050/classes","spark.hadoop.fs.s3a.path.style.access":"true","spark.driver.host":"zeppelin","spark.app.id":"app-20240903115026-0001","spark.sql.hive.metastore.version":"3.1.2","resource.executor.cores":"1","spark.job.description":"Started by: admin","__fetch_continuous_blocks_in_batch_enabled":"true","spark.sql.legacy.allowNonEmptyLocationInCTAS":"true","spark.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar,file:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.webui.yarn.useProxy":"false","spark.blockManager.port":"6060","spark.sql.execution.root.id":"21","spark.driver.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4","spark.driver.port":"5050","spark.eventLog.overwrite":"true","spark.sql.catalogImplementation":"hive","spark.yarn.dist.files":"file:/spark/conf/hive-site.xml","spark.hadoop.fs.s3a.endpoint":"http://minio-1:9000","spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.catalog.spark_catalog":"org.apache.spark.sql.delta.catalog.DeltaCatalog","spark.driver.extraClassPath":":/opt/zeppelin/local-repo/spark/*:/opt/zeppelin/interpreter/spark/*:::/opt/zeppelin/interpreter/zeppelin-interpreter-shaded-0.11.0.jar:/opt/zeppelin/interpreter/spark/spark-interpreter-0.11.0.jar","spark.driver.bindAddress":"0.0.0.0","spark.jobGroup.id":"zeppelin|admin|2K6HEBJYU|paragraph_1725364482625_526653052","spark.hadoop.fs.s3a.impl":"org.apache.hadoop.fs.s3a.S3AFileSystem","spark.app.submitTime":"1725364215393","spark.sql.extensions":"io.delta.sql.DeltaSparkSessionExtension","spark.eventLog.dir":"file:///var/log/spark/logs","spark.app.initial.jar.urls":"spark://zeppelin:5050/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,spark://zeppelin:5050/jars/org.tukaani_xz-1.9.jar,spark://zeppelin:5050/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,spark://zeppelin:5050/jars/org.slf4j_slf4j-api-1.7.16.jar,spark://zeppelin:5050/jars/org.postgresql_postgresql-42.3.4.jar,spark://zeppelin:5050/jars/org.checkerframework_checker-qual-3.5.0.jar,spark://zeppelin:5050/jars/spark-interpreter-0.11.0.jar","spark.executor.instances":"2","spark.sql.execution.id":"21","spark.cores.max":"2","spark.rdd.scope.noOverride":"true","spark.executor.memory":"1g","spark.repl.local.jars":"file:/opt/bitnami/spark/jars/delta-spark_2.12-3.2.0.jar,file:/opt/bitnami/spark/jars/delta-storage-3.2.0.jar,file:///opt/zeppelin/.ivy2/jars/org.postgresql_postgresql-42.3.4.jar,file:///opt/zeppelin/.ivy2/jars/org.apache.spark_spark-avro_2.12-3.5.2.jar,file:///opt/zeppelin/.ivy2/jars/graphframes_graphframes-0.8.4-spark3.5-s_2.12.jar,file:///opt/zeppelin/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar,file:///opt/zeppelin/.ivy2/jars/org.tukaani_xz-1.9.jar,file:///opt/zeppelin/.ivy2/jars/org.slf4j_slf4j-api-1.7.16.jar","spark.executor.id":"driver","spark.useHiveContext":"true","spark.executor.cores":"1","spark.sql.parquet.fieldId.write.enabled":"true","spark.submit.deployMode":"client","spark.scheduler.mode":"FAIR","spark.eventLog.enabled":"true","spark.sql.hive.metastore.jars":"/opt/bitnami/spark/jars/*","spark.executor.extraJavaOptions":"-Dcom.amazonaws.services.s3.enableV4"}}
{"Event":"SparkListenerTaskStart","Stage ID":41,"Stage Attempt ID":0,"Task Info":{"Task ID":38,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364493595,"Executor ID":"0","Host":"172.17.0.9","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":0,"Failed":false,"Killed":false,"Accumulables":[]}}
{"Event":"SparkListenerTaskEnd","Stage ID":41,"Stage Attempt ID":0,"Task Type":"ResultTask","Task End Reason":{"Reason":"Success"},"Task Info":{"Task ID":38,"Index":0,"Attempt":0,"Partition ID":0,"Launch Time":1725364493595,"Executor ID":"0","Host":"172.17.0.9","Locality":"NODE_LOCAL","Speculative":false,"Getting Result Time":0,"Finish Time":1725364493630,"Failed":false,"Killed":false,"Accumulables":[{"ID":2584,"Name":"remote blocks read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2585,"Name":"local blocks read","Update":"1","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2586,"Name":"remote bytes read","Update":"445","Value":"445","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2588,"Name":"local bytes read","Update":"534","Value":"534","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2589,"Name":"fetch wait time","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2590,"Name":"records read","Update":"11","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2599,"Name":"remote reqs duration","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2648,"Name":"duration","Update":"2","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2649,"Name":"number of output rows","Update":"11","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2650,"Name":"peak memory","Update":"17039344","Value":"17039344","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2652,"Name":"time in aggregation build","Update":"0","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2653,"Name":"avg hash probes per key","Update":"10","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2658,"Name":"internal.metrics.executorDeserializeTime","Update":13,"Value":13,"Internal":true,"Count Failed Values":true},{"ID":2659,"Name":"internal.metrics.executorDeserializeCpuTime","Update":5125834,"Value":5125834,"Internal":true,"Count Failed Values":true},{"ID":2660,"Name":"internal.metrics.executorRunTime","Update":11,"Value":11,"Internal":true,"Count Failed Values":true},{"ID":2661,"Name":"internal.metrics.executorCpuTime","Update":5353791,"Value":5353791,"Internal":true,"Count Failed Values":true},{"ID":2662,"Name":"internal.metrics.resultSize","Update":5726,"Value":5726,"Internal":true,"Count Failed Values":true},{"ID":2667,"Name":"internal.metrics.peakExecutionMemory","Update":17039344,"Value":17039344,"Internal":true,"Count Failed Values":true},{"ID":2669,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":2670,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Update":1,"Value":1,"Internal":true,"Count Failed Values":true},{"ID":2671,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Update":445,"Value":445,"Internal":true,"Count Failed Values":true},{"ID":2672,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2673,"Name":"internal.metrics.shuffle.read.localBytesRead","Update":534,"Value":534,"Internal":true,"Count Failed Values":true},{"ID":2674,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2675,"Name":"internal.metrics.shuffle.read.recordsRead","Update":11,"Value":11,"Internal":true,"Count Failed Values":true},{"ID":2676,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2677,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2678,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2679,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2680,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2681,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2682,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2683,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Update":0,"Value":0,"Internal":true,"Count Failed Values":true},{"ID":2684,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Update":2,"Value":2,"Internal":true,"Count Failed Values":true},{"ID":2685,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Update":0,"Value":0,"Internal":true,"Count Failed Values":true}]},"Task Executor Metrics":{"JVMHeapMemory":0,"JVMOffHeapMemory":0,"OnHeapExecutionMemory":0,"OffHeapExecutionMemory":0,"OnHeapStorageMemory":0,"OffHeapStorageMemory":0,"OnHeapUnifiedMemory":0,"OffHeapUnifiedMemory":0,"DirectPoolMemory":0,"MappedPoolMemory":0,"ProcessTreeJVMVMemory":0,"ProcessTreeJVMRSSMemory":0,"ProcessTreePythonVMemory":0,"ProcessTreePythonRSSMemory":0,"ProcessTreeOtherVMemory":0,"ProcessTreeOtherRSSMemory":0,"MinorGCCount":0,"MinorGCTime":0,"MajorGCCount":0,"MajorGCTime":0,"TotalGCTime":0},"Task Metrics":{"Executor Deserialize Time":13,"Executor Deserialize CPU Time":5125834,"Executor Run Time":11,"Executor CPU Time":5353791,"Peak Execution Memory":17039344,"Result Size":5726,"JVM GC Time":0,"Result Serialization Time":0,"Memory Bytes Spilled":0,"Disk Bytes Spilled":0,"Shuffle Read Metrics":{"Remote Blocks Fetched":1,"Local Blocks Fetched":1,"Fetch Wait Time":0,"Remote Bytes Read":445,"Remote Bytes Read To Disk":0,"Local Bytes Read":534,"Total Records Read":11,"Remote Requests Duration":2,"Push Based Shuffle":{"Corrupt Merged Block Chunks":0,"Merged Fetch Fallback Count":0,"Merged Remote Blocks Fetched":0,"Merged Local Blocks Fetched":0,"Merged Remote Chunks Fetched":0,"Merged Local Chunks Fetched":0,"Merged Remote Bytes Read":0,"Merged Local Bytes Read":0,"Merged Remote Requests Duration":0}},"Shuffle Write Metrics":{"Shuffle Bytes Written":0,"Shuffle Write Time":0,"Shuffle Records Written":0},"Input Metrics":{"Bytes Read":0,"Records Read":0},"Output Metrics":{"Bytes Written":0,"Records Written":0},"Updated Blocks":[]}}
{"Event":"SparkListenerStageCompleted","Stage Info":{"Stage ID":41,"Stage Attempt ID":0,"Stage Name":"takeAsList at Spark3Shims.java:74","Number of Tasks":1,"RDD Info":[{"RDD ID":121,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"333\",\"name\":\"mapPartitionsInternal\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[120],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":119,"Name":"ShuffledRowRDD","Scope":"{\"id\":\"332\",\"name\":\"AQEShuffleRead\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[118],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0},{"RDD ID":120,"Name":"MapPartitionsRDD","Scope":"{\"id\":\"329\",\"name\":\"WholeStageCodegen (2)\"}","Callsite":"takeAsList at Spark3Shims.java:74","Parent IDs":[119],"Storage Level":{"Use Disk":false,"Use Memory":false,"Use Off Heap":false,"Deserialized":false,"Replication":1},"Barrier":false,"DeterministicLevel":"UNORDERED","Number of Partitions":1,"Number of Cached Partitions":0,"Memory Size":0,"Disk Size":0}],"Parent IDs":[40],"Details":"org.apache.spark.sql.Dataset.takeAsList(Dataset.scala:3562)\norg.apache.zeppelin.spark.Spark3Shims.showDataFrame(Spark3Shims.java:74)\norg.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.scala:68)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","Submission Time":1725364493530,"Completion Time":1725364493631,"Accumulables":[{"ID":2584,"Name":"remote blocks read","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2585,"Name":"local blocks read","Value":"1","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2586,"Name":"remote bytes read","Value":"445","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2588,"Name":"local bytes read","Value":"534","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2589,"Name":"fetch wait time","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2590,"Name":"records read","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2599,"Name":"remote reqs duration","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2648,"Name":"duration","Value":"2","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2649,"Name":"number of output rows","Value":"11","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2650,"Name":"peak memory","Value":"17039344","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2652,"Name":"time in aggregation build","Value":"0","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2653,"Name":"avg hash probes per key","Value":"10","Internal":true,"Count Failed Values":true,"Metadata":"sql"},{"ID":2658,"Name":"internal.metrics.executorDeserializeTime","Value":13,"Internal":true,"Count Failed Values":true},{"ID":2659,"Name":"internal.metrics.executorDeserializeCpuTime","Value":5125834,"Internal":true,"Count Failed Values":true},{"ID":2660,"Name":"internal.metrics.executorRunTime","Value":11,"Internal":true,"Count Failed Values":true},{"ID":2661,"Name":"internal.metrics.executorCpuTime","Value":5353791,"Internal":true,"Count Failed Values":true},{"ID":2662,"Name":"internal.metrics.resultSize","Value":5726,"Internal":true,"Count Failed Values":true},{"ID":2667,"Name":"internal.metrics.peakExecutionMemory","Value":17039344,"Internal":true,"Count Failed Values":true},{"ID":2669,"Name":"internal.metrics.shuffle.read.remoteBlocksFetched","Value":1,"Internal":true,"Count Failed Values":true},{"ID":2670,"Name":"internal.metrics.shuffle.read.localBlocksFetched","Value":1,"Internal":true,"Count Failed Values":true},{"ID":2671,"Name":"internal.metrics.shuffle.read.remoteBytesRead","Value":445,"Internal":true,"Count Failed Values":true},{"ID":2672,"Name":"internal.metrics.shuffle.read.remoteBytesReadToDisk","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2673,"Name":"internal.metrics.shuffle.read.localBytesRead","Value":534,"Internal":true,"Count Failed Values":true},{"ID":2674,"Name":"internal.metrics.shuffle.read.fetchWaitTime","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2675,"Name":"internal.metrics.shuffle.read.recordsRead","Value":11,"Internal":true,"Count Failed Values":true},{"ID":2676,"Name":"internal.metrics.shuffle.push.read.corruptMergedBlockChunks","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2677,"Name":"internal.metrics.shuffle.push.read.mergedFetchFallbackCount","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2678,"Name":"internal.metrics.shuffle.push.read.remoteMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2679,"Name":"internal.metrics.shuffle.push.read.localMergedBlocksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2680,"Name":"internal.metrics.shuffle.push.read.remoteMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2681,"Name":"internal.metrics.shuffle.push.read.localMergedChunksFetched","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2682,"Name":"internal.metrics.shuffle.push.read.remoteMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2683,"Name":"internal.metrics.shuffle.push.read.localMergedBytesRead","Value":0,"Internal":true,"Count Failed Values":true},{"ID":2684,"Name":"internal.metrics.shuffle.read.remoteReqsDuration","Value":2,"Internal":true,"Count Failed Values":true},{"ID":2685,"Name":"internal.metrics.shuffle.push.read.remoteMergedReqsDuration","Value":0,"Internal":true,"Count Failed Values":true}],"Resource Profile Id":0,"Shuffle Push Enabled":false,"Shuffle Push Mergers Count":0}}
{"Event":"SparkListenerJobEnd","Job ID":32,"Completion Time":1725364493631,"Job Result":{"Result":"JobSucceeded"}}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":21,"time":1725364493895,"errorMessage":""}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":22,"rootExecutionId":22,"description":"Started by: admin","details":"org.apache.spark.sql.SQLContext.sql(SQLContext.scala:651)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nCreateNamespace (1)\n\n\n(1) CreateNamespace\nArguments: org.apache.spark.sql.delta.catalog.DeltaCatalog@164a57f6, [flight_db], true\n\n","sparkPlanInfo":{"nodeName":"CreateNamespace","simpleString":"CreateNamespace org.apache.spark.sql.delta.catalog.DeltaCatalog@164a57f6, [flight_db], true","children":[],"metadata":{},"metrics":[]},"time":1725364499153,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":22,"time":1725364499187,"errorMessage":"java.lang.NoClassDefFoundError: org/apache/hadoop/hive/conf/HiveConf\n\tat java.base/java.lang.Class.getDeclaredConstructors0(Native Method)\n\tat java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3137)\n\tat java.base/java.lang.Class.getConstructors(Class.java:1943)\n\tat org.apache.spark.sql.hive.client.IsolatedClientLoader.createClient(IsolatedClientLoader.scala:317)\n\tat org.apache.spark.sql.hive.HiveUtils$.newClientForMetadata(HiveUtils.scala:488)\n\tat org.apache.spark.sql.hive.HiveUtils$.newClientForMetadata(HiveUtils.scala:376)\n\tat org.apache.spark.sql.hive.HiveExternalCatalog.client$lzycompute(HiveExternalCatalog.scala:68)\n\tat org.apache.spark.sql.hive.HiveExternalCatalog.client(HiveExternalCatalog.scala:67)\n\tat org.apache.spark.sql.hive.HiveExternalCatalog.$anonfun$databaseExists$1(HiveExternalCatalog.scala:224)\n\tat scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)\n\tat org.apache.spark.sql.hive.HiveExternalCatalog.withClient(HiveExternalCatalog.scala:99)\n\tat org.apache.spark.sql.hive.HiveExternalCatalog.databaseExists(HiveExternalCatalog.scala:224)\n\tat org.apache.spark.sql.internal.SharedState.externalCatalog$lzycompute(SharedState.scala:146)\n\tat org.apache.spark.sql.internal.SharedState.externalCatalog(SharedState.scala:140)\n\tat org.apache.spark.sql.hive.HiveSessionStateBuilder.externalCatalog(HiveSessionStateBuilder.scala:54)\n\tat org.apache.spark.sql.hive.HiveSessionStateBuilder.$anonfun$catalog$1(HiveSessionStateBuilder.scala:69)\n\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.externalCatalog$lzycompute(SessionCatalog.scala:122)\n\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.externalCatalog(SessionCatalog.scala:122)\n\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.databaseExists(SessionCatalog.scala:319)\n\tat org.apache.spark.sql.execution.datasources.v2.V2SessionCatalog.namespaceExists(V2SessionCatalog.scala:261)\n\tat org.apache.spark.sql.connector.catalog.DelegatingCatalogExtension.namespaceExists(DelegatingCatalogExtension.java:150)\n\tat org.apache.spark.sql.execution.datasources.v2.CreateNamespaceExec.run(CreateNamespaceExec.scala:43)\n\tat org.apache.spark.sql.execution.datasources.v2.V2CommandExec.result$lzycompute(V2CommandExec.scala:43)\n\tat org.apache.spark.sql.execution.datasources.v2.V2CommandExec.result(V2CommandExec.scala:43)\n\tat org.apache.spark.sql.execution.datasources.v2.V2CommandExec.executeCollect(V2CommandExec.scala:49)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)\n\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)\n\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)\n\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)\n\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)\n\tat org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)\n\tat org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)\n\tat org.apache.spark.sql.Dataset.<init>(Dataset.scala:220)\n\tat org.apache.spark.sql.Dataset$.$anonfun$ofRows$2(Dataset.scala:100)\n\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)\n\tat org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:97)\n\tat org.apache.spark.sql.SparkSession.$anonfun$sql$4(SparkSession.scala:691)\n\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)\n\tat org.apache.spark.sql.SparkSession.sql(SparkSession.scala:682)\n\tat org.apache.spark.sql.SparkSession.sql(SparkSession.scala:713)\n\tat org.apache.spark.sql.SparkSession.sql(SparkSession.scala:744)\n\tat org.apache.spark.sql.SQLContext.sql(SQLContext.scala:651)\n\tat org.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\n\tat org.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:186)\n\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\n\tat org.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: java.lang.ClassNotFoundException: org.apache.hadoop.hive.conf.HiveConf\n\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:476)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:594)\n\tat org.apache.spark.sql.hive.client.IsolatedClientLoader$$anon$1.doLoadClass(IsolatedClientLoader.scala:274)\n\tat org.apache.spark.sql.hive.client.IsolatedClientLoader$$anon$1.loadClass(IsolatedClientLoader.scala:263)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:527)\n\t... 66 more\n"}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart","executionId":23,"rootExecutionId":23,"description":"Started by: admin","details":"org.apache.spark.sql.SQLContext.sql(SQLContext.scala:651)\norg.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\norg.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\norg.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\norg.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\norg.apache.zeppelin.scheduler.Job.run(Job.java:186)\norg.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\norg.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\njava.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\njava.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\njava.base/java.lang.Thread.run(Thread.java:829)","physicalPlanDescription":"== Physical Plan ==\nExecute CreateHiveTableAsSelectCommand (1)\n   +- CreateHiveTableAsSelectCommand (2)\n         +- Aggregate (8)\n            +- SubqueryAlias (7)\n               +- Project (6)\n                  +- SubqueryAlias (5)\n                     +- View (4)\n                        +- LogicalRelation (3)\n\n\n(1) Execute CreateHiveTableAsSelectCommand\nOutput: []\n\n(2) CreateHiveTableAsSelectCommand\nArguments: [Database: flight_db, TableName: count_delaygroups_t]\n\n(3) LogicalRelation\nArguments: parquet, [dayOfMonth#391, dayOfWeek#392, depTime#393, crsDepTime#394, arrTime#395, crsArrTime#396, uniqueCarrier#397, flightNum#398, tailNum#399, actualElapsedTime#400, crsElapsedTime#401, airTime#402, arrDelay#403, depDelay#404, origin#405, destination#406, distance#407, taxiIn#408, taxiOut#409, cancelled#410, cancellationCode#411, diverted#412, carrierDelay#413, weatherDelay#414, ... 5 more fields], false\n\n(4) View\nArguments: `flights`, true\n\n(5) SubqueryAlias\nArguments: flights\n\n(6) Project\nArguments: [year#418, month#419, arrDelay#403, origin#405, destination#406, CASE WHEN (arrDelay#403 > 360) THEN Very Long Delays WHEN ((arrDelay#403 > 120) AND (arrDelay#403 < 360)) THEN Long Delays WHEN ((arrDelay#403 > 60) AND (arrDelay#403 < 120)) THEN Short Delays WHEN ((arrDelay#403 > 0) AND (arrDelay#403 < 60)) THEN Tolerable Delays WHEN (arrDelay#403 = 0) THEN No Delays ELSE Early END AS flight_delays#960]\n\n(7) SubqueryAlias\nArguments: __auto_generated_subquery_name\n\n(8) Aggregate\nArguments: [year#418, month#419, flight_delays#960], [year#418, month#419, flight_delays#960, count(1) AS count#961L]\n\n","sparkPlanInfo":{"nodeName":"Execute CreateHiveTableAsSelectCommand","simpleString":"Execute CreateHiveTableAsSelectCommand","children":[],"metadata":{},"metrics":[]},"time":1725364507712,"modifiedConfigs":{"spark.sql.parquet.fieldId.read.enabled":"true","spark.sql.parquet.fieldId.write.enabled":"true"},"jobTags":[]}
{"Event":"org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionEnd","executionId":23,"time":1725364507742,"errorMessage":"java.lang.NoClassDefFoundError: org/apache/hadoop/hive/conf/HiveConf\n\tat java.base/java.lang.Class.getDeclaredConstructors0(Native Method)\n\tat java.base/java.lang.Class.privateGetDeclaredConstructors(Class.java:3137)\n\tat java.base/java.lang.Class.getConstructors(Class.java:1943)\n\tat org.apache.spark.sql.hive.client.IsolatedClientLoader.createClient(IsolatedClientLoader.scala:317)\n\tat org.apache.spark.sql.hive.HiveUtils$.newClientForMetadata(HiveUtils.scala:488)\n\tat org.apache.spark.sql.hive.HiveUtils$.newClientForMetadata(HiveUtils.scala:376)\n\tat org.apache.spark.sql.hive.HiveExternalCatalog.client$lzycompute(HiveExternalCatalog.scala:68)\n\tat org.apache.spark.sql.hive.HiveExternalCatalog.client(HiveExternalCatalog.scala:67)\n\tat org.apache.spark.sql.hive.HiveExternalCatalog.$anonfun$databaseExists$1(HiveExternalCatalog.scala:224)\n\tat scala.runtime.java8.JFunction0$mcZ$sp.apply(JFunction0$mcZ$sp.java:23)\n\tat org.apache.spark.sql.hive.HiveExternalCatalog.withClient(HiveExternalCatalog.scala:99)\n\tat org.apache.spark.sql.hive.HiveExternalCatalog.databaseExists(HiveExternalCatalog.scala:224)\n\tat org.apache.spark.sql.internal.SharedState.externalCatalog$lzycompute(SharedState.scala:146)\n\tat org.apache.spark.sql.internal.SharedState.externalCatalog(SharedState.scala:140)\n\tat org.apache.spark.sql.hive.HiveSessionStateBuilder.externalCatalog(HiveSessionStateBuilder.scala:54)\n\tat org.apache.spark.sql.hive.HiveSessionStateBuilder.$anonfun$catalog$1(HiveSessionStateBuilder.scala:69)\n\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.externalCatalog$lzycompute(SessionCatalog.scala:122)\n\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.externalCatalog(SessionCatalog.scala:122)\n\tat org.apache.spark.sql.catalyst.catalog.SessionCatalog.tableExists(SessionCatalog.scala:518)\n\tat org.apache.spark.sql.hive.execution.CreateHiveTableAsSelectCommand.run(CreateHiveTableAsSelectCommand.scala:49)\n\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)\n\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)\n\tat org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)\n\tat org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)\n\tat org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)\n\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)\n\tat org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)\n\tat org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)\n\tat org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)\n\tat org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)\n\tat org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)\n\tat org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)\n\tat org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)\n\tat org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)\n\tat org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)\n\tat org.apache.spark.sql.Dataset.<init>(Dataset.scala:220)\n\tat org.apache.spark.sql.Dataset$.$anonfun$ofRows$2(Dataset.scala:100)\n\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)\n\tat org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:97)\n\tat org.apache.spark.sql.SparkSession.$anonfun$sql$4(SparkSession.scala:691)\n\tat org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)\n\tat org.apache.spark.sql.SparkSession.sql(SparkSession.scala:682)\n\tat org.apache.spark.sql.SparkSession.sql(SparkSession.scala:713)\n\tat org.apache.spark.sql.SparkSession.sql(SparkSession.scala:744)\n\tat org.apache.spark.sql.SQLContext.sql(SQLContext.scala:651)\n\tat org.apache.zeppelin.spark.SparkSqlInterpreter.internalInterpret(SparkSqlInterpreter.java:103)\n\tat org.apache.zeppelin.interpreter.AbstractInterpreter.interpret(AbstractInterpreter.java:55)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:108)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:877)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:769)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:186)\n\tat org.apache.zeppelin.scheduler.AbstractScheduler.runJob(AbstractScheduler.java:135)\n\tat org.apache.zeppelin.scheduler.ParallelScheduler.lambda$runJobInScheduler$0(ParallelScheduler.java:46)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: java.lang.ClassNotFoundException: org.apache.hadoop.hive.conf.HiveConf\n\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:476)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:594)\n\tat org.apache.spark.sql.hive.client.IsolatedClientLoader$$anon$1.doLoadClass(IsolatedClientLoader.scala:274)\n\tat org.apache.spark.sql.hive.client.IsolatedClientLoader$$anon$1.loadClass(IsolatedClientLoader.scala:263)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:527)\n\t... 64 more\n"}
{"Event":"SparkListenerExecutorRemoved","Timestamp":1725364841293,"Executor ID":"0","Removed Reason":"Remote RPC client disassociated. Likely due to containers exceeding thresholds, or network issues. Check driver logs for WARN messages."}
{"Event":"SparkListenerExecutorRemoved","Timestamp":1725364841332,"Executor ID":"1","Removed Reason":"Remote RPC client disassociated. Likely due to containers exceeding thresholds, or network issues. Check driver logs for WARN messages."}
{"Event":"SparkListenerBlockManagerRemoved","Block Manager ID":{"Executor ID":"0","Host":"172.17.0.9","Port":6060},"Timestamp":1725364841357}
{"Event":"SparkListenerBlockManagerRemoved","Block Manager ID":{"Executor ID":"1","Host":"172.17.0.26","Port":6060},"Timestamp":1725364841381}
{"Event":"SparkListenerApplicationEnd","Timestamp":1725364872776}
